{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["multilineCellRenderer.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n}\n","multilineCellRenderer.js":"\nclass MultilineCellRenderer  {\n    eGui;\n\n    init(params) {\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML = params.value.replace('\\n', '<br/>');\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh() {\n        return false;\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"address\" },\n  {\n    headerName: \"Custom column\",\n    autoHeight: true,\n    valueGetter: (param) => {\n      return param.data.col1 + \"\\n\" + param.data.col2;\n    },\n    cellRenderer: MultilineCellRenderer,\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    cellClass: \"multiline\",\n    minWidth: 100,\n    flex: 1,\n  },\n\n  columnDefs: columnDefs,\n\n  rowData: [\n    {\n      address:\n        \"1197 Thunder Wagon Common,\\nCataract, RI, \\n02987-1016, US, \\n(401) 747-0763\",\n      col1: \"abc\",\n      col2: \"xyz\",\n    },\n    {\n      address:\n        \"3685 Rocky Glade, Showtucket, NU, \\nX1E-9I0, CA, \\n(867) 371-4215\",\n      col1: \"abc\",\n      col2: \"xyz\",\n    },\n    {\n      address:\n        \"3235 High Forest, Glen Campbell, MS, \\n39035-6845, US, \\n(601) 638-8186\",\n      col1: \"abc\",\n      col2: \"xyz\",\n    },\n    {\n      address:\n        \"2234 Sleepy Pony Mall , Drain, DC, \\n20078-4243, US, \\n(202) 948-3634\",\n      col1: \"abc\",\n      col2: \"xyz\",\n    },\n  ],\n\n  excelStyles: [\n    {\n      id: \"multiline\",\n      alignment: {\n        wrapText: true,\n      },\n    },\n  ],\n};\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"container\">\n    <div>\n        <button onclick=\"onBtExport()\" style=\"margin: 5px 0px; font-weight: bold\">Export to Excel</button>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}