{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.align-right {\n    text-align: right;\n}\n","main.js":"let gridApi;\n\nfunction formatNumber(number) {\n  return Math.floor(number).toLocaleString();\n}\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"a\", enableCellChangeFlash: true },\n    { field: \"b\", enableCellChangeFlash: true },\n    { field: \"c\", cellRenderer: \"agAnimateShowChangeCellRenderer\" },\n    { field: \"d\", cellRenderer: \"agAnimateShowChangeCellRenderer\" },\n    { field: \"e\", cellRenderer: \"agAnimateSlideCellRenderer\" },\n    { field: \"f\", cellRenderer: \"agAnimateSlideCellRenderer\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    cellClass: \"align-right\",\n    valueFormatter: (params) => {\n      return formatNumber(params.value);\n    },\n  },\n  rowData: createRowData(),\n  onGridReady: () => {\n    const updateValues = () => {\n      const rowCount = gridApi.getDisplayedRowCount();\n      // pick 2 cells at random to update\n      for (let i = 0; i < 2; i++) {\n        const row = Math.floor(Math.random() * rowCount);\n        const rowNode = gridApi.getDisplayedRowAtIndex(row);\n        const col = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"][\n          Math.floor(Math.random() * 6)\n        ];\n        rowNode.setDataValue(col, Math.floor(Math.random() * 10000));\n      }\n    };\n\n    setInterval(updateValues, 250);\n  },\n};\n\nfunction createRowData() {\n  const rowData = [];\n\n  for (let i = 0; i < 20; i++) {\n    rowData.push({\n      a: Math.floor(((i + 323) * 145045) % 10000),\n      b: Math.floor(((i + 323) * 543020) % 10000),\n      c: Math.floor(((i + 323) * 305920) % 10000),\n      d: Math.floor(((i + 323) * 204950) % 10000),\n      e: Math.floor(((i + 323) * 103059) % 10000),\n      f: Math.floor(((i + 323) * 468276) % 10000),\n    });\n  }\n\n  return rowData;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}