{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n    flex-grow: 1;\n}\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\", minWidth: 200 },\n  { field: \"age\" },\n  { field: \"country\", minWidth: 200 },\n  { field: \"year\" },\n  { field: \"date\", minWidth: 150 },\n  { field: \"sport\", minWidth: 150 },\n  { field: \"gold\" },\n  { field: \"silver\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  columnDefs,\n  rowSelection: {\n    mode: \"multiRow\",\n    checkboxes: false,\n    headerCheckbox: false,\n  },\n};\n\nfunction onBtExport() {\n  const spreadsheets = [];\n\n  let nodesToExport = [];\n  gridApi.forEachNode((node, index) => {\n    nodesToExport.push(node);\n\n    if (index % 100 === 99) {\n      gridApi.setNodesSelected({ nodes: nodesToExport, newValue: true });\n      spreadsheets.push(\n        gridApi.getSheetDataForExcel({\n          onlySelected: true,\n        }),\n      );\n\n      gridApi.deselectAll();\n      nodesToExport = [];\n    }\n  });\n\n  // check if the last page was exported\n\n  if (gridApi.getSelectedNodes().length) {\n    spreadsheets.push(\n      gridApi.getSheetDataForExcel({\n        onlySelected: true,\n      }),\n    );\n    gridApi.deselectAll();\n  }\n\n  gridApi.exportMultipleSheetsAsExcel({\n    data: spreadsheets,\n    fileName: \"ag-grid.xlsx\",\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"container\">\n    <div>\n        <button onclick=\"onBtExport()\" style=\"margin-bottom: 5px; font-weight: bold\">Export to Excel</button>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}