{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".ag-basic .ag-cell {\n    padding-top: 2px;\n    padding-bottom: 2px;\n}\n\nlabel {\n    font-weight: normal;\n}\n\n.cell-act {\n    background: rgba(255, 0, 0, 0.1);\n}\n\n.cell-bud {\n    background: rgba(0, 255, 0, 0.1);\n}\n\n.legend-box {\n    display: inline-block;\n    border: 1px solid black;\n    width: 12px;\n    height: 12px;\n}\n\n.cell-figure {\n    text-align: right;\n}\n\n.test-grid {\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 14px;\n}\n\n.test-container button {\n    font-size: 14px;\n    line-height: 20px;\n}\n\n.test-header {\n    margin-left: 20px;\n}\n","main.js":"const monthValueGetter =\n  '(ctx.month < ctx.months.indexOf(colDef.field)) ? data[colDef.field + \"_bud\"] : data[colDef.field + \"_act\"]';\nconst monthCellClassRules = {\n  \"cell-act\": \"ctx.month < ctx.months.indexOf(colDef.field)\",\n  \"cell-bud\": \"ctx.month >= ctx.months.indexOf(colDef.field)\",\n  \"cell-negative\": \"x < 0\",\n};\nconst yearToDateValueGetter =\n  'var total = 0; ctx.months.forEach( function(monthName, monthIndex) { if (monthIndex<=ctx.month) { total += data[monthName + \"_act\"]; } }); return total; ';\nconst accountingCellRenderer = function (params) {\n  if (params.value == null) {\n    return \"\";\n  } else if (params.value >= 0) {\n    return params.value.toLocaleString();\n  } else {\n    return \"(\" + Math.abs(params.value).toLocaleString() + \")\";\n  }\n};\n\nconst columnDefs = [\n  {\n    field: \"country\",\n    rowGroup: true,\n    hide: true,\n  },\n  {\n    headerName: \"Monthly Data\",\n    children: [\n      {\n        field: \"jan\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        field: \"feb\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        field: \"mar\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        field: \"apr\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        field: \"may\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        field: \"jun\",\n        cellRenderer: accountingCellRenderer,\n        cellClass: \"cell-figure\",\n        valueGetter: monthValueGetter,\n        cellClassRules: monthCellClassRules,\n        aggFunc: \"sum\",\n      },\n\n      {\n        headerName: \"YTD\",\n        cellClass: \"cell-figure\",\n        cellRenderer: accountingCellRenderer,\n        valueGetter: yearToDateValueGetter,\n        aggFunc: \"sum\",\n      },\n    ],\n  },\n];\n\nlet gridApi;\nconst context = {\n  month: 0,\n  months: [\n    \"jan\",\n    \"feb\",\n    \"mar\",\n    \"apr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"aug\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dec\",\n  ],\n};\nconst gridOptions = {\n  columnDefs: columnDefs,\n  suppressMovableColumns: true,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 120,\n  },\n  autoGroupColumnDef: {\n    headerName: \"Location\",\n    field: \"city\",\n    minWidth: 260,\n    cellRenderer: \"agGroupCellRenderer\",\n  },\n  rowSelection: {\n    mode: \"multiRow\",\n    headerCheckbox: false,\n    groupSelects: \"descendants\",\n  },\n  context: context,\n};\n\nconst monthNames = [\n  \"Budget Only\",\n  \"Year to Jan\",\n  \"Year to Feb\",\n  \"Year to Mar\",\n  \"Year to Apr\",\n  \"Year to May\",\n  \"Year to Jun\",\n  \"Year to Jul\",\n  \"Year to Aug\",\n  \"Year to Sep\",\n  \"Year to Oct\",\n  \"Year to Nov\",\n  \"Full Year\",\n];\n\nfunction onChangeMonth(i) {\n  let newMonth = (context.month += i);\n\n  if (newMonth < -1) {\n    newMonth = -1;\n  }\n  if (newMonth > 5) {\n    newMonth = 5;\n  }\n  // Mutate the context object in place\n  context.month = newMonth;\n  document.querySelector(\"#monthName\").textContent = monthNames[newMonth + 1];\n  gridApi.refreshClientSideRowModel(\"aggregate\");\n  gridApi.refreshCells();\n}\n\nfunction onQuickFilterChanged() {\n  gridApi.setGridOption(\n    \"quickFilterText\",\n    document.getElementById(\"filter-text-box\").value,\n  );\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/monthly-sales.json\")\n    .then((response) => response.json())\n    .then(function (data) {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <input\n            type=\"text\"\n            id=\"filter-text-box\"\n            style=\"width: 100px\"\n            oninput=\"onQuickFilterChanged()\"\n            placeholder=\"Filter...\"\n        />\n\n        <span style=\"padding-left: 20px\">\n            <b>Period:</b>\n            <button onclick=\"onChangeMonth(-1)\"><i class=\"fa fa-chevron-left\"></i></button>\n            <button onclick=\"onChangeMonth(1)\"><i class=\"fa fa-chevron-right\"></i></button>\n            <span id=\"monthName\" style=\"width: 100px; display: inline-block\">Year to Jan</span>\n        </span>\n\n        <span style=\"padding-left: 20px\">\n            <b>Legend:</b>&nbsp;&nbsp;\n            <div class=\"cell-bud legend-box\"></div>\n            Actual&nbsp;&nbsp;\n            <div class=\"cell-act legend-box\"></div>\n            Budget\n        </span>\n    </div>\n    <div style=\"height: 100%\" id=\"myGrid\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}