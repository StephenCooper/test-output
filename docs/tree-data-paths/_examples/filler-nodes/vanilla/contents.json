{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"const data = [\n    { path: ['A', 'B', 'C'], id: 'C' },\n    { path: ['D'], id: 'D' },\n    { path: ['D', 'E'], id: 'E' },\n    { path: ['D', 'E', 'F'], id: 'F' },\n];\n\nfunction getData() {\n    return data;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    // we're using the auto group column by default!\n    {\n      field: \"groupType\",\n      valueGetter: (params) => {\n        return params.data ? \"\" : \"Filler Group\";\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  rowData: getData(),\n  treeData: true, // enable Tree Data mode\n  groupDefaultExpanded: -1, // expand all groups by default\n  getDataPath: (data) => data.path,\n};\n\n// wait for the document to be loaded, otherwise\n// AG Grid will not find the div in the document.\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // lookup the container we want the Grid to use\n  const eGridDiv = document.querySelector(\"#myGrid\");\n\n  // create the grid passing in the div to use together with the columns & data we want to use\n  gridApi = agGrid.createGrid(eGridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}