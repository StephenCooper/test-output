{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 10px;\n    display: flex;\n    justify-content: space-around;\n    border: 1px solid grey;\n    padding: 10px;\n    border-radius: 5px;\n}\n","main.js":"const dateFilterParams = {\n  comparator: (filterLocalDateAtMidnight, cellValue) => {\n    const cellDate = asDate(cellValue);\n\n    if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n      return 0;\n    }\n\n    if (cellDate < filterLocalDateAtMidnight) {\n      return -1;\n    }\n\n    if (cellDate > filterLocalDateAtMidnight) {\n      return 1;\n    }\n    return 0;\n  },\n};\n\nconst columnDefs = [\n  { field: \"athlete\", minWidth: 180 },\n  { field: \"age\", filter: \"agNumberColumnFilter\", maxWidth: 80 },\n  { field: \"country\" },\n  { field: \"year\", maxWidth: 90 },\n  {\n    field: \"date\",\n    filter: \"agDateColumnFilter\",\n    filterParams: dateFilterParams,\n  },\n  { field: \"gold\", filter: \"agNumberColumnFilter\" },\n  { field: \"silver\", filter: \"agNumberColumnFilter\" },\n  { field: \"bronze\", filter: \"agNumberColumnFilter\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 120,\n    filter: true,\n  },\n  isExternalFilterPresent: isExternalFilterPresent,\n  doesExternalFilterPass: doesExternalFilterPass,\n};\n\nlet ageType = \"everyone\";\n\nfunction isExternalFilterPresent() {\n  // if ageType is not everyone, then we are filtering\n  return ageType !== \"everyone\";\n}\n\nfunction doesExternalFilterPass(node) {\n  if (node.data) {\n    switch (ageType) {\n      case \"below25\":\n        return node.data.age < 25;\n      case \"between25and50\":\n        return node.data.age >= 25 && node.data.age <= 50;\n      case \"above50\":\n        return node.data.age > 50;\n      case \"dateAfter2008\":\n        return asDate(node.data.date) > new Date(2008, 1, 1);\n      default:\n        return true;\n    }\n  }\n  return true;\n}\n\nfunction asDate(dateAsString) {\n  const splitFields = dateAsString.split(\"/\");\n  return new Date(\n    Number.parseInt(splitFields[2]),\n    Number.parseInt(splitFields[1]) - 1,\n    Number.parseInt(splitFields[0]),\n  );\n}\n\nfunction externalFilterChanged(newValue) {\n  ageType = newValue;\n  gridApi.onFilterChanged();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then(function (data) {\n      document.querySelector(\"#everyone\").checked = true;\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <label>\n            <input type=\"radio\" name=\"filter\" id=\"everyone\" onchange=\"externalFilterChanged('everyone')\" />\n            Everyone\n        </label>\n        <label>\n            <input type=\"radio\" name=\"filter\" id=\"below25\" onchange=\"externalFilterChanged('below25')\" />\n            Below 25\n        </label>\n        <label>\n            <input type=\"radio\" name=\"filter\" id=\"between25and50\" onchange=\"externalFilterChanged('between25and50')\" />\n            Between 25 and 50\n        </label>\n        <label>\n            <input type=\"radio\" name=\"filter\" id=\"above50\" onchange=\"externalFilterChanged('above50')\" />\n            Above 50\n        </label>\n        <label>\n            <input type=\"radio\" name=\"filter\" id=\"dateAfter2008\" onchange=\"externalFilterChanged('dateAfter2008')\" />\n            After 01/01/2008\n        </label>\n    </div>\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}