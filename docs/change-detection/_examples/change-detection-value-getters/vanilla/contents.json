{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"a\", type: \"valueColumn\" },\n    { field: \"b\", type: \"valueColumn\" },\n    { field: \"c\", type: \"valueColumn\" },\n    { field: \"d\", type: \"valueColumn\" },\n    { field: \"e\", type: \"valueColumn\" },\n    { field: \"f\", type: \"valueColumn\" },\n    {\n      headerName: \"Total\",\n      valueGetter: \"data.a + data.b + data.c + data.d + data.e + data.f\",\n      editable: false,\n      cellClass: \"total-col\",\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    enableCellChangeFlash: true,\n  },\n  columnTypes: {\n    valueColumn: {\n      minWidth: 90,\n      editable: true,\n      valueParser: \"Number(newValue)\",\n      filter: \"agNumberColumnFilter\",\n    },\n  },\n  rowData: getRowData(),\n  groupDefaultExpanded: 1,\n  suppressAggFuncInHeader: true,\n};\n\nfunction getRowData() {\n  const rowData = [];\n  for (let i = 1; i <= 20; i++) {\n    rowData.push({\n      group: i < 5 ? \"A\" : \"B\",\n      a: (i * 863) % 100,\n      b: (i * 811) % 100,\n      c: (i * 743) % 100,\n      d: (i * 677) % 100,\n      e: (i * 619) % 100,\n      f: (i * 571) % 100,\n    });\n  }\n  return rowData;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<style>\n    .total-col {\n        font-weight: bold;\n    }\n</style>\n\n<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}