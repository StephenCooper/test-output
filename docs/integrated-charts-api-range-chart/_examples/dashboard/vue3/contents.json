{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":[],"files":{"data.ts":"export async function getData(delay: number = 100): Promise<any[]> {\n    // Simulate a server delay using setTimeout wrapped in a Promise\n    return await new Promise<any[]>((resolve) => setTimeout(() => resolve(generateData()), delay));\n}\n\nfunction generateData(): any[] {\n    const countries = [\n        'Ireland',\n        'Spain',\n        'United Kingdom',\n        'France',\n        'Germany',\n        'Luxembourg',\n        'Sweden',\n        'Norway',\n        'Italy',\n        'Greece',\n        'Iceland',\n        'Portugal',\n        'Malta',\n        'Brazil',\n        'Argentina',\n        'Colombia',\n        'Peru',\n        'Venezuela',\n        'Uruguay',\n        'Belgium',\n    ];\n\n    return countries.map((country, index) => ({\n        country,\n        group: index % 2 === 0 ? 'Group A' : 'Group B',\n        gold: Math.floor(((index + 1 / 7) * 333) % 100),\n        silver: Math.floor(((index + 1 / 3) * 555) % 100),\n        bronze: Math.floor(((index + 1 / 7.3) * 777) % 100),\n    }));\n}\n","main.ts":"import {\n  createApp,\n  defineComponent,\n  onBeforeMount,\n  ref,\n  shallowRef,\n} from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport { AgChartsEnterpriseModule } from \"ag-charts-enterprise\";\nimport {\n  CellSelectionOptions,\n  ChartToolPanelsDef,\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  FirstDataRenderedEvent,\n  GetChartToolbarItems,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  NumberEditorModule,\n  NumberFilterModule,\n  TextEditorModule,\n  TextFilterModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport {\n  ColumnMenuModule,\n  ContextMenuModule,\n  IntegratedChartsModule,\n  RowGroupingModule,\n} from \"ag-grid-enterprise\";\nimport { getData } from \"./data\";\nModuleRegistry.registerModules([\n  NumberEditorModule,\n  TextEditorModule,\n  TextFilterModule,\n  NumberFilterModule,\n  ClientSideRowModelModule,\n  IntegratedChartsModule.with(AgChartsEnterpriseModule),\n  ColumnMenuModule,\n  ContextMenuModule,\n  RowGroupingModule,\n  ValidationModule /* Development Only */,\n]);\n\nfunction createGroupedBarChart(\n  params: FirstDataRenderedEvent,\n  selector: string,\n  columns: string[],\n) {\n  params.api.createRangeChart({\n    chartContainer: document.querySelector(selector) as HTMLElement,\n    cellRange: {\n      rowStartIndex: 0,\n      rowEndIndex: 4,\n      columns,\n    },\n    suppressChartRanges: true,\n    chartType: \"groupedBar\",\n  });\n}\n\nfunction createPieChart(\n  params: FirstDataRenderedEvent,\n  selector: string,\n  columns: string[],\n) {\n  params.api.createRangeChart({\n    chartContainer: document.querySelector(selector) as HTMLElement,\n    cellRange: { columns },\n    suppressChartRanges: true,\n    chartType: \"pie\",\n    aggFunc: \"sum\",\n    chartThemeOverrides: {\n      common: {\n        padding: {\n          top: 20,\n          left: 10,\n          bottom: 30,\n          right: 10,\n        },\n        legend: {\n          position: \"right\",\n        },\n      },\n    },\n  });\n}\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%\">\n                <div style=\"display: flex; flex-direction: column; height: 100%; width: 100%; overflow: hidden\">\n      <ag-grid-vue\n        style=\"width: 100%; height: 30%;\"\n        @grid-ready=\"onGridReady\"\n        :columnDefs=\"columnDefs\"\n        :defaultColDef=\"defaultColDef\"\n        :cellSelection=\"true\"\n        :enableCharts=\"true\"\n        :chartToolPanelsDef=\"chartToolPanelsDef\"\n        :popupParent=\"popupParent\"\n        :getChartToolbarItems=\"getChartToolbarItems\"\n        :rowData=\"rowData\"\n        @first-data-rendered=\"onFirstDataRendered\"></ag-grid-vue>\n        <div id=\"chart1\" class=\"my-chart\" style=\"flex: 1 1 auto; height: 30%\"></div>\n        <div style=\"display: flex; flex: 1 1 auto; height: 30%; gap: 8px\">\n          <div id=\"chart2\" class=\"my-chart\" style=\"flex: 1 1 auto; width: 50%\"></div>\n          <div id=\"chart3\" class=\"my-chart\" style=\"flex: 1 1 auto; width: 50%\"></div>\n        </div>\n      </div>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n  },\n  setup(props) {\n    const gridApi = shallowRef<GridApi | null>(null);\n    const columnDefs = ref<ColDef[]>([\n      { field: \"country\", width: 150, chartDataType: \"category\" },\n      { field: \"group\", chartDataType: \"category\" },\n      { field: \"gold\", chartDataType: \"series\" },\n      { field: \"silver\", chartDataType: \"series\" },\n      { field: \"bronze\", chartDataType: \"series\" },\n    ]);\n    const defaultColDef = ref<ColDef>({\n      editable: true,\n      flex: 1,\n      minWidth: 100,\n      filter: true,\n    });\n    const chartToolPanelsDef = ref<ChartToolPanelsDef>({ panels: [] });\n    const popupParent = ref<HTMLElement | null>(document.body);\n    const getChartToolbarItems = ref<GetChartToolbarItems>(() => []);\n    const rowData = ref<any[]>(null);\n\n    function onFirstDataRendered(event: FirstDataRenderedEvent) {\n      createGroupedBarChart(event, \"#chart1\", [\"country\", \"gold\", \"silver\"]);\n      createPieChart(event, \"#chart2\", [\"group\", \"gold\"]);\n      createPieChart(event, \"#chart3\", [\"group\", \"silver\"]);\n    }\n    const onGridReady = (params: GridReadyEvent) => {\n      /** DARK INTEGRATED START **/\n      const isInitialModeDark =\n        document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n      const updateChartThemes = (isDark) => {\n        const themes = [\n          \"ag-default\",\n          \"ag-material\",\n          \"ag-sheets\",\n          \"ag-polychroma\",\n          \"ag-vivid\",\n        ];\n        const currentThemes = params.api.getGridOption(\"chartThemes\");\n        const customTheme =\n          currentThemes &&\n          currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n        let modifiedThemes = customTheme\n          ? isDark\n            ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n            : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n          : Array.from(\n              new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n            );\n\n        // updating the 'chartThemes' grid option will cause the chart to reactively update!\n        params.api.setGridOption(\"chartThemes\", modifiedThemes);\n      };\n\n      // update chart themes when example first loads\n      let initialSet = false;\n      const maxTries = 5;\n      let tries = 0;\n      const trySetInitial = (delay) => {\n        if (params.api) {\n          initialSet = true;\n          updateChartThemes(isInitialModeDark);\n        } else {\n          if (tries < maxTries) {\n            setTimeout(() => trySetInitial(), 250);\n            tries++;\n          }\n        }\n      };\n      trySetInitial(0);\n\n      const handleColorSchemeChange = (event) => {\n        const { darkMode } = event.detail;\n        updateChartThemes(darkMode);\n      };\n\n      // listen for user-triggered dark mode changes (not removing listener is fine here!)\n      document.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n      /** DARK INTEGRATED END **/\n      gridApi.value = params.api;\n\n      getData().then((rowData) => params.api.setGridOption(\"rowData\", rowData));\n    };\n\n    return {\n      gridApi,\n      columnDefs,\n      defaultColDef,\n      chartToolPanelsDef,\n      popupParent,\n      getChartToolbarItems,\n      rowData,\n      onGridReady,\n      onFirstDataRendered,\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","index.html":"<div style=\"display: flex; flex-direction: column; height: 100%; width: 100%; overflow: hidden\">\n    <div id=\"myGrid\" style=\"flex: 1 1 auto; height: 30%\"></div>\n    <div id=\"chart1\" class=\"my-chart\" style=\"flex: 1 1 auto; height: 30%\"></div>\n    <div style=\"display: flex; flex: 1 1 auto; height: 30%; gap: 8px\">\n        <div id=\"chart2\" class=\"my-chart\" style=\"flex: 1 1 auto; width: 50%\"></div>\n        <div id=\"chart3\" class=\"my-chart\" style=\"flex: 1 1 auto; width: 50%\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}