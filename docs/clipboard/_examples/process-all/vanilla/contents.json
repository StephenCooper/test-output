{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".cell-red {\n    background-color: #cc222244;\n}\n.cell-green {\n    background-color: #33cc3344;\n}\n.cell-blue {\n    background-color: #2244cc44;\n}\n.cell-yellow {\n    background-color: #ccaa22a9;\n}\n","data.js":"function getData() {\n    const data = [];\n    for (let i = 0; i < 20; i++) {\n        data.push({\n            a: 'Green ' + i * 2,\n            b: 'Green ' + i * 3 + 11,\n            c: 'Blue ' + i * 3 + 155,\n            d: 'Red ' + i * 4 + 265,\n            e: 'Yellow ' + i + 23,\n        });\n    }\n    return data;\n}\n","main.js":"const columnDefs = [\n  { field: \"a\" },\n  { field: \"b\" },\n  { field: \"c\" },\n  { field: \"d\" },\n  { field: \"e\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  rowData: getData(),\n  columnDefs: columnDefs,\n  cellSelection: true,\n\n  defaultColDef: {\n    editable: true,\n    minWidth: 120,\n    flex: 1,\n\n    cellClassRules: {\n      \"cell-green\": 'value.startsWith(\"Green\")',\n      \"cell-blue\": 'value.startsWith(\"Blue\")',\n      \"cell-red\": 'value.startsWith(\"Red\")',\n      \"cell-yellow\": 'value.startsWith(\"Yellow\")',\n    },\n  },\n\n  processDataFromClipboard,\n};\n\nfunction processDataFromClipboard(params) {\n  let containsRed;\n  let containsYellow;\n  const data = params.data;\n\n  for (let i = 0; i < data.length; i++) {\n    const row = data[i];\n    for (let j = 0; j < row.length; j++) {\n      const value = row[j];\n      if (value) {\n        if (value.startsWith(\"Red\")) {\n          containsRed = true;\n        } else if (value.startsWith(\"Yellow\")) {\n          containsYellow = true;\n        }\n      }\n    }\n  }\n\n  if (containsRed) {\n    // replace the paste request with another\n    return [\n      [\"Custom 1\", \"Custom 2\"],\n      [\"Custom 3\", \"Custom 4\"],\n    ];\n  }\n\n  if (containsYellow) {\n    // cancels the paste\n    return null;\n  }\n\n  return data;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}