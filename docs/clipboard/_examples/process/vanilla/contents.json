{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: \"Participants\",\n      children: [\n        { field: \"athlete\", headerName: \"Athlete Name\", minWidth: 200 },\n        { field: \"age\" },\n        { field: \"country\", minWidth: 150 },\n      ],\n    },\n    {\n      headerName: \"Olympic Games\",\n      children: [\n        { field: \"year\" },\n        { field: \"date\", minWidth: 150 },\n        { field: \"sport\", minWidth: 150 },\n        { field: \"gold\" },\n        { field: \"silver\", suppressPaste: true },\n        { field: \"bronze\" },\n        { field: \"total\" },\n      ],\n    },\n  ],\n\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    cellDataType: false,\n  },\n\n  cellSelection: true,\n\n  processCellForClipboard: processCellForClipboard,\n  processHeaderForClipboard: processHeaderForClipboard,\n  processGroupHeaderForClipboard: processGroupHeaderForClipboard,\n  processCellFromClipboard: processCellFromClipboard,\n};\n\nfunction processCellForClipboard(params) {\n  return \"C-\" + params.value;\n}\n\nfunction processHeaderForClipboard(params) {\n  const colDef = params.column.getColDef();\n  let headerName = colDef.headerName || colDef.field || \"\";\n\n  if (colDef.headerName !== \"\") {\n    headerName = headerName.charAt(0).toUpperCase() + headerName.slice(1);\n  }\n\n  return \"H-\" + headerName;\n}\n\nfunction processGroupHeaderForClipboard(params) {\n  const colGroupDef = params.columnGroup.getColGroupDef() || {};\n  const headerName = colGroupDef.headerName || \"\";\n\n  if (headerName === \"\") {\n    return \"\";\n  }\n\n  return \"GH-\" + headerName;\n}\n\nfunction processCellFromClipboard(params) {\n  return \"Z-\" + params.value;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}