{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.button-group {\n    padding-bottom: 1rem;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n","main.js":"const filterParams = {\n  comparator: (filterLocalDateAtMidnight, cellValue) => {\n    const dateAsString = cellValue;\n    if (dateAsString == null) return -1;\n    const dateParts = dateAsString.split(\"/\");\n    const cellDate = new Date(\n      Number(dateParts[2]),\n      Number(dateParts[1]) - 1,\n      Number(dateParts[0]),\n    );\n\n    if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n      return 0;\n    }\n\n    if (cellDate < filterLocalDateAtMidnight) {\n      return -1;\n    }\n\n    if (cellDate > filterLocalDateAtMidnight) {\n      return 1;\n    }\n    return 0;\n  },\n};\n\nconst columnDefs = [\n  { field: \"athlete\", filter: \"agTextColumnFilter\" },\n  { field: \"age\", filter: \"agNumberColumnFilter\", maxWidth: 100 },\n  { field: \"country\", filter: \"agTextColumnFilter\" },\n  { field: \"year\", filter: \"agNumberColumnFilter\", maxWidth: 100 },\n  { field: \"sport\", filter: \"agTextColumnFilter\" },\n  { field: \"gold\", filter: \"agNumberColumnFilter\" },\n  { field: \"silver\", filter: \"agNumberColumnFilter\" },\n  { field: \"bronze\", filter: \"agNumberColumnFilter\" },\n  { field: \"total\", filter: \"agNumberColumnFilter\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 150,\n    filter: true,\n  },\n  sideBar: \"filters\",\n  onGridReady: (params) => {\n    params.api.getToolPanelInstance(\"filters\").expandFilters([\"athlete\"]);\n  },\n};\n\nlet savedFilterModel = null;\n\nfunction clearFilter() {\n  gridApi.setColumnFilterModel(\"athlete\", null).then(() => {\n    gridApi.onFilterChanged();\n  });\n}\n\nfunction saveFilterModel() {\n  savedFilterModel = gridApi.getColumnFilterModel(\"athlete\");\n\n  const convertTextFilterModel = (model) => {\n    return `${model.type} ${model.filter}`;\n  };\n  const convertCombinedFilterModel = (model) => {\n    return model.conditions\n      .map((condition) => convertTextFilterModel(condition))\n      .join(` ${model.operator} `);\n  };\n\n  let savedFilterString;\n  if (!savedFilterModel) {\n    savedFilterString = \"(none)\";\n  } else if (savedFilterModel.operator) {\n    savedFilterString = convertCombinedFilterModel(savedFilterModel);\n  } else {\n    savedFilterString = convertTextFilterModel(savedFilterModel);\n  }\n\n  document.querySelector(\"#savedFilters\").innerText = savedFilterString;\n}\n\nfunction restoreFilterModel() {\n  gridApi.setColumnFilterModel(\"athlete\", savedFilterModel).then(() => {\n    gridApi.onFilterChanged();\n  });\n}\n\nfunction restoreFromHardCoded() {\n  const hardcodedFilter = { type: \"startsWith\", filter: \"Mich\" };\n  gridApi.setColumnFilterModel(\"athlete\", hardcodedFilter).then(() => {\n    gridApi.onFilterChanged();\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <div class=\"button-group\">\n            <button onclick=\"saveFilterModel()\">Save Filter Model</button>\n            <button onclick=\"restoreFilterModel()\">Restore Saved Filter Model</button>\n            <button\n                onclick=\"restoreFromHardCoded()\"\n                title=\"Name = 'Mich%', Country = ['Ireland', 'United States'], Age &lt; 30, Date &lt; 01/01/2010\"\n            >\n                Set Custom Filter Model\n            </button>\n            <button onclick=\"clearFilter()\">Reset Filter</button>\n        </div>\n    </div>\n    <div>\n        <div class=\"button-group\">Saved Filters: <span id=\"savedFilters\">(none)</span></div>\n    </div>\n\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}