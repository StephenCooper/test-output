{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    // group cell renderer needed for expand / collapse icons\n    { field: \"name\", cellRenderer: \"agGroupCellRenderer\" },\n    { field: \"account\" },\n    { field: \"calls\" },\n    { field: \"minutes\", valueFormatter: \"x.toLocaleString() + 'm'\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  masterDetail: true,\n  detailCellRendererParams: {\n    detailGridOptions: {\n      columnDefs: [\n        { field: \"callId\" },\n        { field: \"direction\" },\n        { field: \"number\" },\n        { field: \"duration\", valueFormatter: \"x.toLocaleString() + 's'\" },\n        { field: \"switchCode\" },\n      ],\n      defaultColDef: {\n        flex: 1,\n      },\n      onGridReady: (params) => {\n        // using auto height to fit the height of the the detail grid\n        params.api.setGridOption(\"domLayout\", \"autoHeight\");\n      },\n    },\n    getDetailRowData: (params) => {\n      params.successCallback(params.data.callRecords);\n    },\n  },\n  getRowHeight: (params) => {\n    if (params.node && params.node.detail) {\n      const offset = 80;\n      const allDetailRowHeight =\n        params.data.callRecords.length *\n        params.api.getSizesForCurrentTheme().rowHeight;\n      const gridSizes = params.api.getSizesForCurrentTheme();\n      return (\n        allDetailRowHeight +\n        ((gridSizes && gridSizes.headerHeight) || 0) +\n        offset\n      );\n    }\n  },\n  alwaysShowVerticalScroll: true,\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction onFirstDataRendered(params) {\n  // arbitrarily expand a row for presentational purposes\n  setTimeout(() => {\n    params.api.getDisplayedRowAtIndex(1).setExpanded(true);\n  }, 0);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\n    \"https://www.ag-grid.com/example-assets/master-detail-dynamic-row-height-data.json\",\n  )\n    .then((response) => response.json())\n    .then(function (data) {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}