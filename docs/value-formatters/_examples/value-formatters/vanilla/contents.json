{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".number-cell {\n    text-align: right;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { headerName: \"A\", field: \"a\" },\n    { headerName: \"B\", field: \"b\" },\n    { headerName: \"£A\", field: \"a\", valueFormatter: currencyFormatter },\n    { headerName: \"£B\", field: \"b\", valueFormatter: currencyFormatter },\n    { headerName: \"(A)\", field: \"a\", valueFormatter: bracketsFormatter },\n    { headerName: \"(B)\", field: \"b\", valueFormatter: bracketsFormatter },\n  ],\n  defaultColDef: {\n    flex: 1,\n    cellClass: \"number-cell\",\n  },\n  rowData: createRowData(),\n};\n\nfunction bracketsFormatter(params) {\n  return \"(\" + params.value + \")\";\n}\n\nfunction currencyFormatter(params) {\n  return \"£\" + formatNumber(params.value);\n}\n\nfunction formatNumber(number) {\n  return Math.floor(number).toLocaleString();\n}\n\nfunction createRowData() {\n  const rowData = [];\n\n  for (let i = 0; i < 100; i++) {\n    rowData.push({\n      a: Math.floor(((i + 2) * 173456) % 10000),\n      b: Math.floor(((i + 7) * 373456) % 10000),\n    });\n  }\n\n  return rowData;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}