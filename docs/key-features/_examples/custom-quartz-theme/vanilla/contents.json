{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const myTheme = agGrid.themeQuartz.withParams({\n  /* Low spacing = very compact */\n  spacing: 2,\n  /* Changes the color of the grid text */\n  foregroundColor: \"rgb(14, 68, 145)\",\n  /* Changes the color of the grid background */\n  backgroundColor: \"rgb(241, 247, 255)\",\n  /* Changes the header color of the top row */\n  headerBackgroundColor: \"rgb(228, 237, 250)\",\n  /* Changes the hover color of the row*/\n  rowHoverColor: \"rgb(216, 226, 255)\",\n});\n\nconst columnDefs = [\n  { field: \"athlete\", minWidth: 170 },\n  { field: \"age\" },\n  { field: \"country\" },\n  { field: \"year\" },\n  { field: \"date\" },\n  { field: \"sport\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n  { field: \"total\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  theme: myTheme,\n  rowData: null,\n  columnDefs: columnDefs,\n  defaultColDef: {\n    editable: true,\n    filter: true,\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(\n    gridDiv,\n    gridOptions,\n  ); /** DARK INTEGRATED START **/\n  const isInitialModeDark =\n    document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n  const updateChartThemes = (isDark) => {\n    const themes = [\n      \"ag-default\",\n      \"ag-material\",\n      \"ag-sheets\",\n      \"ag-polychroma\",\n      \"ag-vivid\",\n    ];\n    const currentThemes = gridApi.getGridOption(\"chartThemes\");\n    const customTheme =\n      currentThemes &&\n      currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n    let modifiedThemes = customTheme\n      ? isDark\n        ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n        : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n      : Array.from(\n          new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n        );\n\n    // updating the 'chartThemes' grid option will cause the chart to reactively update!\n    gridApi.setGridOption(\"chartThemes\", modifiedThemes);\n  };\n\n  // update chart themes when example first loads\n  let initialSet = false;\n  const maxTries = 5;\n  let tries = 0;\n  const trySetInitial = (delay) => {\n    if (gridApi) {\n      initialSet = true;\n      updateChartThemes(isInitialModeDark);\n    } else {\n      if (tries < maxTries) {\n        setTimeout(() => trySetInitial(), 250);\n        tries++;\n      }\n    }\n  };\n  trySetInitial(0);\n\n  const handleColorSchemeChange = (event) => {\n    const { darkMode } = event.detail;\n    updateChartThemes(darkMode);\n  };\n\n  // listen for user-triggered dark mode changes (not removing listener is fine here!)\n  document.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n  /** DARK INTEGRATED END **/\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}