{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  rowData: [\n    {\n      make: \"Tesla\",\n      model: \"Model Y\",\n      price: 64950,\n      electric: true,\n      month: \"June\",\n    },\n    {\n      make: \"Ford\",\n      model: \"F-Series\",\n      price: 33850,\n      electric: false,\n      month: \"October\",\n    },\n    {\n      make: \"Toyota\",\n      model: \"Corolla\",\n      price: 29600,\n      electric: false,\n      month: \"August\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"EQA\",\n      price: 48890,\n      electric: true,\n      month: \"February\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"500\",\n      price: 15774,\n      electric: false,\n      month: \"January\",\n    },\n    {\n      make: \"Nissan\",\n      model: \"Juke\",\n      price: 20675,\n      electric: false,\n      month: \"March\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Corsa\",\n      price: 18460,\n      electric: false,\n      month: \"July\",\n    },\n    {\n      make: \"Volvo\",\n      model: \"EX30\",\n      price: 33795,\n      electric: true,\n      month: \"September\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"Maybach\",\n      price: 175720,\n      electric: false,\n      month: \"December\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Astra\",\n      price: 25795,\n      electric: false,\n      month: \"April\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"Panda\",\n      price: 13724,\n      electric: false,\n      month: \"November\",\n    },\n    {\n      make: \"Jaguar\",\n      model: \"I-PACE\",\n      price: 69425,\n      electric: true,\n      month: \"May\",\n    },\n    {\n      make: \"Tesla\",\n      model: \"Model Y\",\n      price: 64950,\n      electric: true,\n      month: \"June\",\n    },\n    {\n      make: \"Ford\",\n      model: \"F-Series\",\n      price: 33850,\n      electric: false,\n      month: \"October\",\n    },\n    {\n      make: \"Toyota\",\n      model: \"Corolla\",\n      price: 29600,\n      electric: false,\n      month: \"August\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"EQA\",\n      price: 48890,\n      electric: true,\n      month: \"February\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"500\",\n      price: 15774,\n      electric: false,\n      month: \"January\",\n    },\n    {\n      make: \"Nissan\",\n      model: \"Juke\",\n      price: 20675,\n      electric: false,\n      month: \"March\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Corsa\",\n      price: 18460,\n      electric: false,\n      month: \"July\",\n    },\n    {\n      make: \"Volvo\",\n      model: \"EX30\",\n      price: 33795,\n      electric: true,\n      month: \"September\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"Maybach\",\n      price: 175720,\n      electric: false,\n      month: \"December\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Astra\",\n      price: 25795,\n      electric: false,\n      month: \"April\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"Panda\",\n      price: 13724,\n      electric: false,\n      month: \"November\",\n    },\n    {\n      make: \"Jaguar\",\n      model: \"I-PACE\",\n      price: 69425,\n      electric: true,\n      month: \"May\",\n    },\n    {\n      make: \"Tesla\",\n      model: \"Model Y\",\n      price: 64950,\n      electric: true,\n      month: \"June\",\n    },\n    {\n      make: \"Ford\",\n      model: \"F-Series\",\n      price: 33850,\n      electric: false,\n      month: \"October\",\n    },\n    {\n      make: \"Toyota\",\n      model: \"Corolla\",\n      price: 29600,\n      electric: false,\n      month: \"August\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"EQA\",\n      price: 48890,\n      electric: true,\n      month: \"February\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"500\",\n      price: 15774,\n      electric: false,\n      month: \"January\",\n    },\n    {\n      make: \"Nissan\",\n      model: \"Juke\",\n      price: 20675,\n      electric: false,\n      month: \"March\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Corsa\",\n      price: 18460,\n      electric: false,\n      month: \"July\",\n    },\n    {\n      make: \"Volvo\",\n      model: \"EX30\",\n      price: 33795,\n      electric: true,\n      month: \"September\",\n    },\n    {\n      make: \"Mercedes\",\n      model: \"Maybach\",\n      price: 175720,\n      electric: false,\n      month: \"December\",\n    },\n    {\n      make: \"Vauxhall\",\n      model: \"Astra\",\n      price: 25795,\n      electric: false,\n      month: \"April\",\n    },\n    {\n      make: \"Fiat\",\n      model: \"Panda\",\n      price: 13724,\n      electric: false,\n      month: \"November\",\n    },\n    {\n      make: \"Jaguar\",\n      model: \"I-PACE\",\n      price: 69425,\n      electric: true,\n      month: \"May\",\n    },\n  ],\n  columnDefs: [\n    {\n      field: \"make\",\n      editable: true,\n      cellEditor: \"agSelectCellEditor\",\n      cellEditorParams: {\n        values: [\n          \"Tesla\",\n          \"Ford\",\n          \"Toyota\",\n          \"Mercedes\",\n          \"Fiat\",\n          \"Nissan\",\n          \"Vauxhall\",\n          \"Volvo\",\n          \"Jaguar\",\n        ],\n      },\n    },\n    { field: \"model\" },\n    { field: \"price\", filter: \"agNumberColumnFilter\" },\n    { field: \"electric\" },\n    {\n      field: \"month\",\n      comparator: (valueA, valueB) => {\n        const months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const idxA = months.indexOf(valueA);\n        const idxB = months.indexOf(valueB);\n        return idxA - idxB;\n      },\n    },\n  ],\n  defaultColDef: {\n    filter: \"agTextColumnFilter\",\n    floatingFilter: true,\n  },\n  rowSelection: {\n    mode: \"multiRow\",\n    headerCheckbox: false,\n  },\n  pagination: true,\n  paginationPageSize: 10,\n  paginationPageSizeSelector: [10, 25, 50],\n};\n\nconst gridDiv = document.querySelector(\"#myGrid\");\ngridApi = agGrid.createGrid(gridDiv, gridOptions); /** DARK INTEGRATED START **/\nconst isInitialModeDark =\n  document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\nconst updateChartThemes = (isDark) => {\n  const themes = [\n    \"ag-default\",\n    \"ag-material\",\n    \"ag-sheets\",\n    \"ag-polychroma\",\n    \"ag-vivid\",\n  ];\n  const currentThemes = gridApi.getGridOption(\"chartThemes\");\n  const customTheme =\n    currentThemes &&\n    currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n  let modifiedThemes = customTheme\n    ? isDark\n      ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n      : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n    : Array.from(\n        new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n      );\n\n  // updating the 'chartThemes' grid option will cause the chart to reactively update!\n  gridApi.setGridOption(\"chartThemes\", modifiedThemes);\n};\n\n// update chart themes when example first loads\nlet initialSet = false;\nconst maxTries = 5;\nlet tries = 0;\nconst trySetInitial = (delay) => {\n  if (gridApi) {\n    initialSet = true;\n    updateChartThemes(isInitialModeDark);\n  } else {\n    if (tries < maxTries) {\n      setTimeout(() => trySetInitial(), 250);\n      tries++;\n    }\n  }\n};\ntrySetInitial(0);\n\nconst handleColorSchemeChange = (event) => {\n  const { darkMode } = event.detail;\n  updateChartThemes(darkMode);\n};\n\n// listen for user-triggered dark mode changes (not removing listener is fine here!)\ndocument.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n/** DARK INTEGRATED END **/\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}