{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["YearFilter.js","YearFloatingFilter.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.year-filter {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n}\n\n.year-filter label {\n    padding: 0.5rem;\n}\n","YearFilter.js":"\nclass YearFilter  {\n    eGui;\n    rbAllYears;\n    rbAfter2004;\n    filterActive;\n    filterChangedCallback;\n\n    init(params) {\n        this.filterChangedCallback = params.filterChangedCallback.bind(this);\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML =\n            '<div class=\"year-filter\">' +\n            '<label>' +\n            '  <input type=\"radio\" name=\"yearFilter\" checked=\"checked\" id=\"rbYearAll\" /> All' +\n            '</label>' +\n            '<label>' +\n            '  <input type=\"radio\" name=\"yearFilter\" id=\"rbYearAfter2004\" /> After 2004' +\n            '</label>' +\n            '</div>';\n\n        this.rbAllYears = this.eGui.querySelector('#rbYearAll');\n        this.rbAllYears.addEventListener('change', this.filterChangedCallback);\n        this.rbAfter2004 = this.eGui.querySelector('#rbYearAfter2004');\n        this.rbAfter2004.addEventListener('change', this.filterChangedCallback);\n        this.filterActive = false;\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    doesFilterPass(params) {\n        return params.data.year > 2004;\n    }\n\n    isFilterActive() {\n        return this.rbAfter2004.checked;\n    }\n\n    getModel() {\n        return this.isFilterActive() || null;\n    }\n\n    onFloatingFilterChanged(value) {\n        this.setModel(value);\n        this.filterChangedCallback();\n    }\n\n    setModel(model) {\n        if (model) {\n            this.rbAllYears.checked = false;\n            this.rbAfter2004.checked = true;\n        } else {\n            this.rbAllYears.checked = true;\n            this.rbAfter2004.checked = false;\n        }\n    }\n\n    afterGuiAttached(params) {\n        if (!params?.suppressFocus) {\n            this.rbAllYears.focus();\n        }\n    }\n}\n","YearFloatingFilter.js":"\n\nclass YearFloatingFilter  {\n    parentFilterInstance;\n    eGui;\n    rbAllYears;\n    rbAfter2004;\n\n    init(params) {\n        this.parentFilterInstance = params.parentFilterInstance;\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML =\n            '<div class=\"year-filter\">' +\n            '<label>' +\n            '  <input type=\"radio\" name=\"yearFloatingFilter\" checked=\"checked\" id=\"rbFloatingYearAll\" /> All' +\n            '</label>' +\n            '<label>' +\n            '  <input type=\"radio\" name=\"yearFloatingFilter\" id=\"rbFloatingYearAfter2004\" /> After 2004' +\n            '</label>' +\n            '</div>';\n\n        this.rbAllYears = this.eGui.querySelector('#rbFloatingYearAll');\n        this.rbAfter2004 = this.eGui.querySelector('#rbFloatingYearAfter2004');\n\n        this.rbAllYears.addEventListener('change', this.onSelectionChanged.bind(this));\n        this.rbAfter2004.addEventListener('change', this.onSelectionChanged.bind(this));\n    }\n\n    onSelectionChanged() {\n        this.parentFilterInstance((instance) => {\n            instance.onFloatingFilterChanged(this.rbAfter2004.checked);\n        });\n    }\n\n    onParentModelChanged(parentModel) {\n        if (parentModel) {\n            this.rbAllYears.checked = false;\n            this.rbAfter2004.checked = true;\n        } else {\n            this.rbAllYears.checked = true;\n            this.rbAfter2004.checked = false;\n        }\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", filter: \"agMultiColumnFilter\" },\n    { field: \"sport\", filter: \"agMultiColumnFilter\" },\n    {\n      field: \"year\",\n      filter: \"agMultiColumnFilter\",\n      filterParams: {\n        filters: [\n          {\n            filter: YearFilter,\n            floatingFilterComponent: YearFloatingFilter,\n          },\n          {\n            filter: \"agNumberColumnFilter\",\n          },\n        ],\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 200,\n    floatingFilter: true,\n    suppressHeaderMenuButton: true,\n    suppressHeaderContextMenu: true,\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}