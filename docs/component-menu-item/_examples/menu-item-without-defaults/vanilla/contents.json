{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["menuItem.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".ag-menu-list {\n    display: flex;\n    flex-direction: column;\n}\n\n.ag-menu-option {\n    display: flex;\n}\n\n.ag-menu-option-part {\n    display: flex;\n}\n\n.ag-menu-option-icon {\n    width: 28px !important;\n}\n\n.ag-menu-option-text {\n    flex: 1;\n}\n\n.ag-menu-option-shortcut {\n    display: none;\n}\n\n.ag-menu-option-popup-pointer {\n    width: 31px;\n}\n\n.ag-menu-separator {\n    display: flex;\n    align-items: center;\n}\n\n.ag-menu-separator .ag-menu-separator-part:first-child {\n    display: block;\n    width: 100%;\n    height: 1px;\n}\n\n.ag-menu-separator-part {\n    display: none;\n}\n","menuItem.js":"\n\n\n\n\nclass MenuItem  {\n    eGui;\n    eOption;\n    eFilterWrapper;\n    eIcon;\n    filterDisplayed = false;\n    clickListener;\n    mouseEnterListener;\n    mouseLeaveListener;\n    optionKeyDownListener;\n    filterWrapperKeyDownListener;\n\n    init(params) {\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML = `\n            <div tabindex=\"-1\" class=\"ag-menu-option\">\n                <span class=\"ag-menu-option-part ag-menu-option-icon\" role=\"presentation\">\n                    <span class=\"ag-icon ag-icon-filter\" unselectable=\"on\" role=\"presentation\"></span>\n                </span>\n                <span class=\"ag-menu-option-part ag-menu-option-text\">Filter</span>\n                <span class=\"ag-menu-option-part ag-menu-option-popup-pointer\">\n                    <span class=\"ag-icon ag-icon-tree-closed\" unselectable=\"on\" role=\"presentation\"></span>\n                </span>\n            </div>\n            <div class=\"filter-wrapper\"></div>\n        `;\n        this.eOption = this.eGui.querySelector('.ag-menu-option');\n        this.eFilterWrapper = this.eGui.querySelector('.filter-wrapper');\n        this.eIcon = this.eGui.querySelector('.ag-icon-tree-closed');\n        this.eFilterWrapper.style.display = 'none';\n        params.api.getColumnFilterInstance(params.column).then((filter) => {\n            this.eFilterWrapper.appendChild(filter.getGui());\n        });\n\n        this.clickListener = () => {\n            // expand/collapse the filter\n            this.eFilterWrapper.style.display = this.filterDisplayed ? 'none' : 'block';\n            this.eIcon.classList.toggle('ag-icon-tree-closed', this.filterDisplayed);\n            this.eIcon.classList.toggle('ag-icon-tree-open', !this.filterDisplayed);\n            this.filterDisplayed = !this.filterDisplayed;\n        };\n        this.eOption.addEventListener('click', this.clickListener);\n        this.mouseEnterListener = () => {\n            this.setActive(true);\n            params.onItemActivated();\n        };\n        this.eOption.addEventListener('mouseenter', this.mouseEnterListener);\n        this.mouseLeaveListener = () => this.setActive(false);\n        this.eOption.addEventListener('mouseleave', this.mouseLeaveListener);\n        this.optionKeyDownListener = (e) => {\n            if (e.key === 'Enter' || e.key === ' ') {\n                e.preventDefault();\n                this.clickListener();\n            }\n        };\n        this.eOption.addEventListener('keydown', this.optionKeyDownListener);\n        this.filterWrapperKeyDownListener = (e) => {\n            // stop the menu from handling keyboard navigation inside the filter\n            e.stopPropagation();\n        };\n        this.eFilterWrapper.addEventListener('keydown', this.filterWrapperKeyDownListener);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    setActive(active) {\n        if (active) {\n            this.eOption.classList.add('ag-menu-option-active');\n            this.eOption.focus();\n        } else {\n            this.eOption.classList.remove('ag-menu-option-active');\n        }\n    }\n\n    destroy() {\n        // remove the listeners\n        this.eOption.removeEventListener('click', this.clickListener);\n        this.eOption.removeEventListener('mouseenter', this.mouseEnterListener);\n        this.eOption.removeEventListener('mouseleave', this.mouseLeaveListener);\n        this.eOption.removeEventListener('keydown', this.optionKeyDownListener);\n        this.eFilterWrapper.removeEventListener('keydown', this.filterWrapperKeyDownListener);\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\" },\n  { field: \"country\" },\n  { field: \"sport\" },\n  { field: \"year\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    suppressHeaderFilterButton: true,\n  },\n  columnDefs: columnDefs,\n  getMainMenuItems: (params) => {\n    return [\n      ...params.defaultItems.filter((item) => item !== \"columnFilter\"),\n      \"separator\",\n      {\n        name: \"Filter\",\n        menuItem: MenuItem,\n        menuItemParams: {\n          column: params.column,\n        },\n      },\n    ];\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}