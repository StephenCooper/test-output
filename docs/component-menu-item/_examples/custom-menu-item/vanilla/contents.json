{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["menuItem.js","main.js"],"styleFiles":[],"files":{"menuItem.js":"\n\n\n\n\nclass MenuItem  {\n    eGui;\n    eButton;\n    eventListener;\n\n    init(params) {\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML = `\n            <span class=\"ag-menu-option-part ag-menu-option-icon\" role=\"presentation\"></span>\n            <span class=\"ag-menu-option-part ag-menu-option-text\">${params.name}</span>\n            <span class=\"ag-menu-option-part ag-menu-option-shortcut\"><button class=\"alert-button\">${params.buttonValue}</button></span>\n            <span class=\"ag-menu-option-part ag-menu-option-popup-pointer\">\n                ${params.subMenu ? '<span class=\"ag-icon ag-icon-small-right\" unselectable=\"on\" role=\"presentation\"></span>' : ''}\n            </span>\n        `;\n        this.eButton = this.eGui.querySelector('.alert-button');\n        this.eventListener = () => alert(`${params.name} clicked`);\n        this.eButton.addEventListener('click', this.eventListener);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    configureDefaults() {\n        return true;\n    }\n\n    destroy() {\n        if (this.eButton) {\n            this.eButton.removeEventListener('click', this.eventListener);\n        }\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\" },\n  { field: \"country\" },\n  { field: \"sport\" },\n  { field: \"year\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  columnDefs: columnDefs,\n  rowData: null,\n  getMainMenuItems: (params) => {\n    return [\n      ...params.defaultItems,\n      \"separator\",\n      {\n        name: \"Click Alert Button and Close Menu\",\n        menuItem: MenuItem,\n        menuItemParams: {\n          buttonValue: \"Alert\",\n        },\n      },\n      {\n        name: \"Click Alert Button and Keep Menu Open\",\n        suppressCloseOnSelect: true,\n        menuItem: MenuItem,\n        menuItemParams: {\n          buttonValue: \"Alert\",\n        },\n      },\n    ];\n  },\n  getContextMenuItems: (params) => {\n    return [\n      ...(params.defaultItems || []),\n      \"separator\",\n      {\n        name: \"Click Alert Button and Close Menu\",\n        menuItem: MenuItem,\n        menuItemParams: {\n          buttonValue: \"Alert\",\n        },\n      },\n      {\n        name: \"Click Alert Button and Keep Menu Open\",\n        suppressCloseOnSelect: true,\n        menuItem: MenuItem,\n        menuItemParams: {\n          buttonValue: \"Alert\",\n        },\n      },\n    ];\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}