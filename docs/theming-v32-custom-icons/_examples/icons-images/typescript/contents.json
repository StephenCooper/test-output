{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":["styles.css"],"files":{"styles.css":".ag-theme-quartz,\n.ag-theme-quartz-dark {\n    /* Hide all icons provided by icon fonts. If you wanted to replace some\n     icons with SVGs while leaving the rest as the font-based icons\n     provided by the theme, use --ag-cion-font-display-{icon-name}\n     to selective hide font-based icons. */\n    --ag-icon-font-display: none;\n\n    /* Provide icon images for each icon */\n    --ag-icon-image-aggregation: url('https://www.ag-grid.com/example-assets/svg-icons/aggregation.svg');\n    --ag-icon-image-arrows: url('https://www.ag-grid.com/example-assets/svg-icons/arrows.svg');\n    --ag-icon-image-asc: url('https://www.ag-grid.com/example-assets/svg-icons/asc.svg');\n    --ag-icon-image-cancel: url('https://www.ag-grid.com/example-assets/svg-icons/cancel.svg');\n    --ag-icon-image-chart: url('https://www.ag-grid.com/example-assets/svg-icons/chart.svg');\n    --ag-icon-image-checkbox-checked: url('https://www.ag-grid.com/example-assets/svg-icons/checkbox-checked.svg');\n    --ag-icon-image-checkbox-indeterminate: url('https://www.ag-grid.com/example-assets/svg-icons/checkbox-indeterminate.svg');\n    --ag-icon-image-checkbox-unchecked: url('https://www.ag-grid.com/example-assets/svg-icons/checkbox-unchecked.svg');\n    --ag-icon-image-color-picker: url('https://www.ag-grid.com/example-assets/svg-icons/color-picker.svg');\n    --ag-icon-image-column: url('https://www.ag-grid.com/example-assets/svg-icons/column.svg');\n    --ag-icon-image-columns: url('https://www.ag-grid.com/example-assets/svg-icons/columns.svg');\n    --ag-icon-image-contracted: url('https://www.ag-grid.com/example-assets/svg-icons/contracted.svg');\n    --ag-icon-image-copy: url('https://www.ag-grid.com/example-assets/svg-icons/copy.svg');\n    --ag-icon-image-cut: url('https://www.ag-grid.com/example-assets/svg-icons/cut.svg');\n    --ag-icon-image-cross: url('https://www.ag-grid.com/example-assets/svg-icons/cross.svg');\n    --ag-icon-image-cut: url('https://www.ag-grid.com/example-assets/svg-icons/cut.svg');\n    --ag-icon-image-data: url('https://www.ag-grid.com/example-assets/svg-icons/data.svg');\n    --ag-icon-image-desc: url('https://www.ag-grid.com/example-assets/svg-icons/desc.svg');\n    --ag-icon-image-expanded: url('https://www.ag-grid.com/example-assets/svg-icons/expanded.svg');\n    --ag-icon-image-eye-slash: url('https://www.ag-grid.com/example-assets/svg-icons/eye-slash.svg');\n    --ag-icon-image-eye: url('https://www.ag-grid.com/example-assets/svg-icons/eye.svg');\n    --ag-icon-image-filter: url('https://www.ag-grid.com/example-assets/svg-icons/filter.svg');\n    --ag-icon-image-first: url('https://www.ag-grid.com/example-assets/svg-icons/first.svg');\n    --ag-icon-image-grip: url('https://www.ag-grid.com/example-assets/svg-icons/grip.svg');\n    --ag-icon-image-group: url('https://www.ag-grid.com/example-assets/svg-icons/group.svg');\n    --ag-icon-image-indeterminate: url('https://www.ag-grid.com/example-assets/svg-icons/indeterminate.svg');\n    --ag-icon-image-last: url('https://www.ag-grid.com/example-assets/svg-icons/last.svg');\n    --ag-icon-image-left: url('https://www.ag-grid.com/example-assets/svg-icons/left.svg');\n    --ag-icon-image-loading: url('https://www.ag-grid.com/example-assets/svg-icons/loading.svg');\n    --ag-icon-image-maximize: url('https://www.ag-grid.com/example-assets/svg-icons/maximize.svg');\n    --ag-icon-image-menu: url('https://www.ag-grid.com/example-assets/svg-icons/menu.svg');\n    --ag-icon-image-menu-alt: url('https://www.ag-grid.com/example-assets/svg-icons/menu.svg');\n    --ag-icon-image-minimize: url('https://www.ag-grid.com/example-assets/svg-icons/minimize.svg');\n    --ag-icon-image-minus: url('https://www.ag-grid.com/example-assets/svg-icons/minus.svg');\n    --ag-icon-image-next: url('https://www.ag-grid.com/example-assets/svg-icons/next.svg');\n    --ag-icon-image-none: url('https://www.ag-grid.com/example-assets/svg-icons/none.svg');\n    --ag-icon-image-not-allowed: url('https://www.ag-grid.com/example-assets/svg-icons/not-allowed.svg');\n    --ag-icon-image-paste: url('https://www.ag-grid.com/example-assets/svg-icons/paste.svg');\n    --ag-icon-image-pin: url('https://www.ag-grid.com/example-assets/svg-icons/pin.svg');\n    --ag-icon-image-pivot: url('https://www.ag-grid.com/example-assets/svg-icons/pivot.svg');\n    --ag-icon-image-plus: url('https://www.ag-grid.com/example-assets/svg-icons/plus.svg');\n    --ag-icon-image-previous: url('https://www.ag-grid.com/example-assets/svg-icons/previous.svg');\n    --ag-icon-image-radio-button-off: url('https://www.ag-grid.com/example-assets/svg-icons/radio-button-off.svg');\n    --ag-icon-image-radio-button-on: url('https://www.ag-grid.com/example-assets/svg-icons/radio-button-on.svg');\n    --ag-icon-image-right: url('https://www.ag-grid.com/example-assets/svg-icons/right.svg');\n    --ag-icon-image-save: url('https://www.ag-grid.com/example-assets/svg-icons/save.svg');\n    --ag-icon-image-small-down: url('https://www.ag-grid.com/example-assets/svg-icons/small-down.svg');\n    --ag-icon-image-small-left: url('https://www.ag-grid.com/example-assets/svg-icons/small-left.svg');\n    --ag-icon-image-small-right: url('https://www.ag-grid.com/example-assets/svg-icons/small-right.svg');\n    --ag-icon-image-small-up: url('https://www.ag-grid.com/example-assets/svg-icons/small-up.svg');\n    --ag-icon-image-tick: url('https://www.ag-grid.com/example-assets/svg-icons/tick.svg');\n    --ag-icon-image-tree-closed: url('https://www.ag-grid.com/example-assets/svg-icons/tree-closed.svg');\n    --ag-icon-image-tree-indeterminate: url('https://www.ag-grid.com/example-assets/svg-icons/tree-indeterminate.svg');\n    --ag-icon-image-tree-open: url('https://www.ag-grid.com/example-assets/svg-icons/tree-open.svg');\n}\n","main.ts":"import \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-quartz.css\";\nimport { AgChartsEnterpriseModule } from \"ag-charts-enterprise\";\nimport {\n  CellSelectionOptions,\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  ModuleRegistry,\n  NumberEditorModule,\n  NumberFilterModule,\n  SideBarDef,\n  TextEditorModule,\n  Theme,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport {\n  ColumnMenuModule,\n  ColumnsToolPanelModule,\n  ContextMenuModule,\n  FiltersToolPanelModule,\n  IntegratedChartsModule,\n  PivotModule,\n  SetFilterModule,\n} from \"ag-grid-enterprise\";\nimport { IOlympicData } from \"./interfaces\";\n\nModuleRegistry.registerModules([\n  NumberEditorModule,\n  TextEditorModule,\n  NumberFilterModule,\n  ClientSideRowModelModule,\n  IntegratedChartsModule.with(AgChartsEnterpriseModule),\n  ColumnsToolPanelModule,\n  FiltersToolPanelModule,\n  ColumnMenuModule,\n  ContextMenuModule,\n  PivotModule,\n  SetFilterModule,\n  ValidationModule /* Development Only */,\n]);\n\nconst columnDefs: ColDef[] = [\n  { field: \"athlete\", minWidth: 170 },\n  { field: \"age\" },\n  { field: \"country\" },\n  { field: \"year\" },\n  { field: \"date\" },\n  { field: \"sport\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n  { field: \"total\" },\n];\n\nlet gridApi: GridApi<IOlympicData>;\n\nconst gridOptions: GridOptions<IOlympicData> = {\n  theme: \"legacy\",\n  columnDefs: columnDefs,\n  defaultColDef: {\n    editable: true,\n    filter: true,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n  },\n  sideBar: true,\n  enableCharts: true,\n  cellSelection: true,\n};\n\n// setup the grid after the page has finished loading\nconst gridDiv = document.querySelector<HTMLElement>(\"#myGrid\")!;\ngridApi = createGrid(gridDiv, gridOptions);\n\nfetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n  .then((response) => response.json())\n  .then((data: IOlympicData[]) => gridApi!.setGridOption(\"rowData\", data));\n","index.html":"<div id=\"myGrid\" class=\"ag-theme-quartz\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {},\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            // appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {},\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}},"extras":["fontawesome","materialdesignicons"]}