{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"function contains(target, lookingFor) {\n  return target && target.indexOf(lookingFor) >= 0;\n}\n\nconst athleteFilterParams = {\n  filterOptions: [\"contains\", \"notContains\"],\n  textFormatter: (r) => {\n    if (r == null) return null;\n\n    return r\n      .toLowerCase()\n      .replace(/[àáâãäå]/g, \"a\")\n      .replace(/æ/g, \"ae\")\n      .replace(/ç/g, \"c\")\n      .replace(/[èéêë]/g, \"e\")\n      .replace(/[ìíîï]/g, \"i\")\n      .replace(/ñ/g, \"n\")\n      .replace(/[òóôõö]/g, \"o\")\n      .replace(/œ/g, \"oe\")\n      .replace(/[ùúûü]/g, \"u\")\n      .replace(/[ýÿ]/g, \"y\");\n  },\n  debounceMs: 200,\n  maxNumConditions: 1,\n};\n\nconst countryFilterParams = {\n  filterOptions: [\"contains\"],\n  textMatcher: ({ value, filterText }) => {\n    const aliases = {\n      usa: \"united states\",\n      holland: \"netherlands\",\n      niall: \"ireland\",\n      sean: \"south africa\",\n      alberto: \"mexico\",\n      john: \"australia\",\n      xi: \"china\",\n    };\n\n    const literalMatch = contains(value, filterText || \"\");\n\n    return !!literalMatch || !!contains(value, aliases[filterText || \"\"]);\n  },\n  trimInput: true,\n  debounceMs: 1000,\n};\n\nconst columnDefs = [\n  {\n    field: \"athlete\",\n    filterParams: athleteFilterParams,\n  },\n  {\n    field: \"country\",\n    filter: \"agTextColumnFilter\",\n    filterParams: countryFilterParams,\n  },\n  {\n    field: \"sport\",\n    filter: \"agTextColumnFilter\",\n    filterParams: {\n      caseSensitive: true,\n      defaultOption: \"startsWith\",\n    },\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    flex: 1,\n    filter: true,\n  },\n  columnDefs: columnDefs,\n  rowData: null,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}