{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-grid {\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n\n.test-header button[disabled] {\n    opacity: 0.7;\n}\n\n.test-header > div {\n    margin-bottom: 1rem;\n}\n","data.js":"\n\n\n\n\n\n\n\n\n\n\n\n\nfunction fetchDataAsync() {\n    // Simulate a slow network request\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve([\n                { name: 'Michael Phelps', person: { age: 23, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Michael Phelps', person: { age: 19, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Michael Phelps', person: { age: 27, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Natalie Coughlin', person: { age: 25, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Aleksey Nemov', person: { age: 24, country: 'Russia' }, medals: getRandomMedals() },\n                { name: 'Alicia Coutts', person: { age: 24, country: 'Australia' }, medals: getRandomMedals() },\n                { name: 'Missy Franklin', person: { age: 17, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Ryan Lochte', person: { age: 27, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Allison Schmitt', person: { age: 22, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Natalie Coughlin', person: { age: 21, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Ian Thorpe', person: { age: 17, country: 'Australia' }, medals: getRandomMedals() },\n                { name: 'Dara Torres', person: { age: 33, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Cindy Klassen', person: { age: 26, country: 'Canada' }, medals: getRandomMedals() },\n                { name: 'Nastia Liukin', person: { age: 18, country: 'United States' }, medals: getRandomMedals() },\n                { name: 'Marit BjÃ¸rgen', person: { age: 29, country: 'Norway' }, medals: getRandomMedals() },\n                { name: 'Sun Yang', person: { age: 20, country: 'China' }, medals: getRandomMedals() },\n            ]);\n        }, 600);\n    });\n}\n\nfunction getRandomMedals() {\n    return {\n        gold: Math.floor(Math.random() * 10),\n        silver: Math.floor(Math.random() * 10),\n        bronze: Math.floor(Math.random() * 10),\n    };\n}\n","main.js":"const updateRowCount = (id) => {\n  const element = document.querySelector(`#${id} > .value`);\n  element.textContent = `${new Date().toLocaleTimeString()}`;\n};\n\nconst setBtnReloadDataDisabled = (disabled) => {\n  document.getElementById(\"btnReloadData\").disabled = disabled;\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"name\", headerName: \"Athlete\" },\n    { field: \"person.age\", headerName: \"Age\" },\n    { field: \"medals.gold\", headerName: \"Gold Medals\" },\n  ],\n  loading: true,\n  onFirstDataRendered: (event) => {\n    updateRowCount(\"firstDataRendered\");\n    console.log(\"First Data Rendered\");\n  },\n  onRowDataUpdated: (event) => {\n    updateRowCount(\"rowDataUpdated\");\n    console.log(\"Row Data Updated\");\n  },\n  onGridReady: () => {\n    console.log(\"Loading Data ...\");\n    fetchDataAsync()\n      .then((data) => {\n        console.log(\"Data Loaded\");\n        gridApi.setGridOption(\"rowData\", data);\n      })\n      .catch((error) => {\n        console.error(\"Failed to load data\", error);\n      })\n      .finally(() => {\n        gridApi.setGridOption(\"loading\", false);\n        setBtnReloadDataDisabled(false);\n      });\n  },\n};\n\nfunction onBtnReloadData() {\n  console.log(\"Reloading Data ...\");\n  setBtnReloadDataDisabled(true);\n  gridApi.setGridOption(\"loading\", true);\n  fetchDataAsync()\n    .then((data) => {\n      console.log(\"Data Reloaded\");\n      gridApi.setGridOption(\"rowData\", data);\n    })\n    .catch((error) => {\n      console.error(\"Failed to reload data\", error);\n    })\n    .finally(() => {\n      gridApi.setGridOption(\"loading\", false);\n      setBtnReloadDataDisabled(false);\n    });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div id=\"firstDataRendered\">First Data Rendered: <span class=\"value\">-</span></div>\n        <div id=\"rowDataUpdated\">Row Data Updated: <span class=\"value\">-</span></div>\n        <div>\n            <button id=\"btnReloadData\" onclick=\"onBtnReloadData()\">Reload Data</button>\n        </div>\n    </div>\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}