{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 0.5rem;\n}\n\n.test-header .example-section {\n    margin-bottom: 0.5rem;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\" },\n  { field: \"age\" },\n  { field: \"country\" },\n  { field: \"sport\" },\n  { field: \"year\" },\n  { field: \"date\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n  { field: \"total\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    width: 150,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  sideBar: {\n    toolPanels: [\"columns\"],\n  },\n  rowGroupPanelShow: \"always\",\n  pivotPanelShow: \"always\",\n  // debug: true,\n  columnDefs: columnDefs,\n};\n\nfunction onBtSortAthlete() {\n  gridApi.applyColumnState({\n    state: [{ colId: \"athlete\", sort: \"asc\" }],\n  });\n}\n\nfunction onBtSortCountryThenSportClearOthers() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"country\", sort: \"asc\", sortIndex: 0 },\n      { colId: \"sport\", sort: \"asc\", sortIndex: 1 },\n    ],\n    defaultState: { sort: null },\n  });\n}\n\nfunction onBtClearAllSorting() {\n  gridApi.applyColumnState({\n    defaultState: { sort: null },\n  });\n}\n\nfunction onBtRowGroupCountryThenSport() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"country\", rowGroupIndex: 0 },\n      { colId: \"sport\", rowGroupIndex: 1 },\n    ],\n    defaultState: { rowGroup: false },\n  });\n}\n\nfunction onBtRemoveCountryRowGroup() {\n  gridApi.applyColumnState({\n    state: [{ colId: \"country\", rowGroup: false }],\n  });\n}\n\nfunction onBtClearAllRowGroups() {\n  gridApi.applyColumnState({\n    defaultState: { rowGroup: false },\n  });\n}\n\nfunction onBtOrderColsMedalsFirst() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"gold\" },\n      { colId: \"silver\" },\n      { colId: \"bronze\" },\n      { colId: \"total\" },\n      { colId: \"athlete\" },\n      { colId: \"age\" },\n      { colId: \"country\" },\n      { colId: \"sport\" },\n      { colId: \"year\" },\n      { colId: \"date\" },\n    ],\n    applyOrder: true,\n  });\n}\n\nfunction onBtOrderColsMedalsLast() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"athlete\" },\n      { colId: \"age\" },\n      { colId: \"country\" },\n      { colId: \"sport\" },\n      { colId: \"year\" },\n      { colId: \"date\" },\n      { colId: \"gold\" },\n      { colId: \"silver\" },\n      { colId: \"bronze\" },\n      { colId: \"total\" },\n    ],\n    applyOrder: true,\n  });\n}\n\nfunction onBtHideMedals() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"gold\", hide: true },\n      { colId: \"silver\", hide: true },\n      { colId: \"bronze\", hide: true },\n      { colId: \"total\", hide: true },\n    ],\n  });\n}\n\nfunction onBtShowMedals() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"gold\", hide: false },\n      { colId: \"silver\", hide: false },\n      { colId: \"bronze\", hide: false },\n      { colId: \"total\", hide: false },\n    ],\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <table>\n            <tr>\n                <td>Sort:</td>\n                <td>\n                    <button onclick=\"onBtSortAthlete()\">Sort Athlete</button>\n                    <button onclick=\"onBtSortCountryThenSportClearOthers()\">\n                        Sort Country, then Sport - Clear Others\n                    </button>\n                    <button onclick=\"onBtClearAllSorting()\">Clear All Sorting</button>\n                </td>\n            </tr>\n            <tr>\n                <td>Column Order:</td>\n                <td>\n                    <button onclick=\"onBtOrderColsMedalsFirst()\">Show Medals First</button>\n                    <button onclick=\"onBtOrderColsMedalsLast()\">Show Medals Last</button>\n                </td>\n            </tr>\n            <tr>\n                <td>Column Visibility:</td>\n                <td>\n                    <button onclick=\"onBtHideMedals()\">Hide Medals</button>\n                    <button onclick=\"onBtShowMedals()\">Show Medals</button>\n                </td>\n            </tr>\n            <tr>\n                <td>Row Group:</td>\n                <td>\n                    <button onclick=\"onBtRowGroupCountryThenSport()\">Group Country then Sport</button>\n                    <button onclick=\"onBtRemoveCountryRowGroup()\">Remove Country</button>\n                    <button onclick=\"onBtClearAllRowGroups()\">Clear All Groups</button>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}