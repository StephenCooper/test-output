{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 0.5rem;\n}\n\n.test-header .example-section {\n    margin-bottom: 0.5rem;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete\",\n    children: [\n      { field: \"athlete\" },\n      { field: \"country\", columnGroupShow: \"open\" },\n      { field: \"sport\", columnGroupShow: \"open\" },\n      { field: \"year\", columnGroupShow: \"open\" },\n      { field: \"date\", columnGroupShow: \"open\" },\n    ],\n  },\n  {\n    headerName: \"Medals\",\n    children: [\n      { field: \"total\", columnGroupShow: \"closed\" },\n      { field: \"gold\", columnGroupShow: \"open\" },\n      { field: \"silver\", columnGroupShow: \"open\" },\n      { field: \"bronze\", columnGroupShow: \"open\" },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    width: 150,\n  },\n  columnDefs: columnDefs,\n};\n\nfunction saveState() {\n  window.groupState = gridApi.getColumnGroupState();\n  console.log(\"group state saved\", window.groupState);\n  console.log(\"column state saved\");\n}\n\nfunction restoreState() {\n  if (!window.groupState) {\n    console.log(\"no columns state to restore by, you must save state first\");\n    return;\n  }\n  gridApi.setColumnGroupState(window.groupState);\n  console.log(\"column state restored\");\n}\n\nfunction resetState() {\n  gridApi.resetColumnGroupState();\n  console.log(\"column state reset\");\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div class=\"example-section\">\n            Column State:\n            <button onclick=\"saveState()\">Save State</button>\n            <button onclick=\"restoreState()\">Restore State</button>\n            <button onclick=\"resetState()\">Reset State</button>\n        </div>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}