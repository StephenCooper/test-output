{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["CountryFlagCellRenderer.js","main.js"],"styleFiles":[],"files":{"CountryFlagCellRenderer.js":"\nclass CountryFlagCellRenderer  {\n    eGui;\n\n    init(params) {\n        this.eGui = document.createElement('img');\n        this.eGui.src = this.getFlagForCountry(params.value);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        return false;\n    }\n\n    getFlagForCountry = (country) => {\n        if (country === 'USA') {\n            return 'https://www.ag-grid.com/example-assets/flags/us-flag.png';\n        }\n\n        if (country === 'China') {\n            return 'https://www.ag-grid.com/example-assets/flags/cn-flag.png';\n        }\n\n        if (country === 'Kazakhstan') {\n            return 'https://www.ag-grid.com/example-assets/flags/kz-flag.png';\n        }\n\n        return '';\n    };\n}\n","main.js":"// Grid API: Access to Grid API methods\nlet gridApi;\n\nclass CompanyLogoRenderer {\n  eGui;\n\n  // Optional: Params for rendering. The same params that are passed to the cellRenderer function.\n  init(params) {\n    const companyLogo = document.createElement(\"img\");\n    companyLogo.src = `https://www.ag-grid.com/example-assets/space-company-logos/${params.value.toLowerCase()}.png`;\n    companyLogo.setAttribute(\n      \"style\",\n      \"display: block; width: 25px; height: auto; max-height: 50%; margin-right: 12px; filter: brightness(1.1)\",\n    );\n\n    const companyName = document.createElement(\"p\");\n    companyName.textContent = params.value;\n    companyName.setAttribute(\n      \"style\",\n      \"text-overflow: ellipsis; overflow: hidden; white-space: nowrap;\",\n    );\n\n    this.eGui = document.createElement(\"span\");\n    this.eGui.setAttribute(\n      \"style\",\n      \"display: flex; height: 100%; width: 100%; align-items: center\",\n    );\n    this.eGui.appendChild(companyLogo);\n    this.eGui.appendChild(companyName);\n  }\n\n  // Required: Return the DOM element of the component, this is what the grid puts into the cell\n  getGui() {\n    return this.eGui;\n  }\n\n  // Required: Get the cell to refresh.\n  refresh(params) {\n    return false;\n  }\n}\n\n// Row Data Interface\n\nconst gridOptions = {\n  // Data to be displayed\n  rowData: [],\n  // Columns to be displayed (Should match rowData properties)\n  columnDefs: [\n    {\n      field: \"mission\",\n      filter: true,\n    },\n    {\n      field: \"company\",\n      cellRenderer: CompanyLogoRenderer,\n    },\n    {\n      field: \"location\",\n    },\n    { field: \"date\" },\n    {\n      field: \"price\",\n      valueFormatter: (params) => {\n        return \"Â£\" + params.value.toLocaleString();\n      },\n    },\n    { field: \"successful\" },\n    { field: \"rocket\" },\n  ],\n  // Configurations applied to all columns\n  defaultColDef: {\n    filter: true,\n  },\n  // Grid Options & Callbacks\n  pagination: true,\n};\n\n// Create Grid: Create new grid within the #myGrid div, using the Grid Options object\ngridApi = agGrid.createGrid(document.querySelector(\"#myGrid\"), gridOptions);\n\n// Fetch Remote Data\nfetch(\"https://www.ag-grid.com/example-assets/space-mission-data.json\")\n  .then((response) => response.json())\n  .then((data) => gridApi.setGridOption(\"rowData\", data));\n","index.html":"<div id=\"myGrid\" style=\"width: 100%; height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}