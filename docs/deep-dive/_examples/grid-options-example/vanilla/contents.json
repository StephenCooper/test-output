{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"// Row Data Interface\n\n// Grid API: Access to Grid API methods\nlet gridApi;\n\n// Grid Options: Contains all of the grid configurations\nconst gridOptions = {\n  // Data to be displayed\n  rowData: [],\n  // Columns to be displayed (Should match rowData properties)\n  columnDefs: [\n    { field: \"mission\", filter: true },\n    { field: \"company\" },\n    { field: \"location\" },\n    { field: \"date\" },\n    { field: \"price\" },\n    { field: \"successful\" },\n    { field: \"rocket\" },\n  ],\n  // Configurations applied to all columns\n  defaultColDef: {\n    filter: true,\n  },\n  // Grid Options\n  pagination: true,\n};\n\n// Create Grid: Create new grid within the #myGrid div, using the Grid Options object\ngridApi = agGrid.createGrid(document.querySelector(\"#myGrid\"), gridOptions);\n\n// Fetch Remote Data\nfetch(\"https://www.ag-grid.com/example-assets/space-mission-data.json\")\n  .then((response) => response.json())\n  .then((data) => gridApi.setGridOption(\"rowData\", data));\n","index.html":"<div id=\"myGrid\" style=\"width: 100%; height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}