{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const columnDefs = [\n  { field: \"athlete\", width: 150, rowGroupIndex: 0 },\n  { field: \"age\", width: 90, rowGroupIndex: 1 },\n  { field: \"country\", width: 120, rowGroupIndex: 2 },\n  { field: \"year\", width: 90 },\n  { field: \"date\", width: 110, rowGroupIndex: 2 },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  animateRows: false,\n  groupDisplayType: \"groupRows\",\n  onRowGroupOpened: onRowGroupOpened,\n  defaultColDef: {\n    editable: true,\n    filter: true,\n    flex: 1,\n    minWidth: 100,\n  },\n};\n\nfunction onRowGroupOpened(event) {\n  if (event.expanded) {\n    const rowNodeIndex = event.node.rowIndex;\n    // factor in child nodes so we can scroll to correct position\n    const childCount = event.node.childrenAfterSort\n      ? event.node.childrenAfterSort.length\n      : 0;\n    const newIndex = rowNodeIndex + childCount;\n    gridApi.ensureIndexVisible(newIndex);\n  }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}