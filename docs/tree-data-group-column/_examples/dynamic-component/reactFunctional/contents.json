{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"index.jsx","mainFileName":"index.jsx","scriptFiles":[],"styleFiles":[],"files":{"styles.css":".align-right {\n    text-align: right;\n}\n","customGroupCellRenderer.jsx":"import React, { useCallback, useEffect, useState } from \"react\";\nexport default (props) => {\n    const { node, value } = props;\n    const [expanded, setExpanded] = useState(node.expanded);\n    useEffect(() => {\n        const expandListener = (event) => setExpanded(event.node.expanded);\n        node.addEventListener(\"expandedChanged\", expandListener);\n        return () => {\n            node.removeEventListener(\"expandedChanged\", expandListener);\n        };\n    }, []);\n    const onClick = useCallback(() => node.setExpanded(!node.expanded), [node]);\n    return (<div style={{\n            paddingLeft: `${node.level * 15}px`,\n        }}>\n      {node.group && (<div style={{\n                cursor: \"pointer\",\n                transform: expanded ? \"rotate(90deg)\" : \"rotate(0deg)\",\n                display: \"inline-block\",\n            }} onClick={onClick}>\n          &rarr;\n        </div>)}\n      &nbsp;\n      {value}\n    </div>);\n};\n","data.jsx":"const files = [\n    {\n        path: [\"Desktop\", \"ProjectAlpha\", \"Proposal.docx\"],\n        size: 512000,\n        created: \"2023-07-10\",\n        modified: \"2023-08-01\",\n    },\n    {\n        path: [\"Desktop\", \"ProjectAlpha\", \"Timeline.xlsx\"],\n        size: 1048576,\n        created: \"2023-07-12\",\n        modified: \"2023-08-03\",\n    },\n    {\n        path: [\"Desktop\", \"ToDoList.txt\"],\n        size: 51200,\n        created: \"2023-08-05\",\n        modified: \"2023-08-10\",\n    },\n    {\n        path: [\"Desktop\", \"MeetingNotes_August.pdf\"],\n        size: 460800,\n        created: \"2023-08-15\",\n        modified: \"2023-08-15\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"ProjectAlpha\", \"Proposal.docx\"],\n        size: 512000,\n        created: \"2023-07-10\",\n        modified: \"2023-08-01\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"ProjectAlpha\", \"Timeline.xlsx\"],\n        size: 1048576,\n        created: \"2023-07-12\",\n        modified: \"2023-08-03\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"ProjectBeta\", \"Report.pdf\"],\n        size: 1024000,\n        created: \"2023-06-22\",\n        modified: \"2023-07-15\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"ProjectBeta\", \"Budget.xlsx\"],\n        size: 1048576,\n        created: \"2023-06-25\",\n        modified: \"2023-07-18\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"Meetings\", \"TeamMeeting_August.pdf\"],\n        size: 512000,\n        created: \"2023-08-20\",\n        modified: \"2023-08-21\",\n    },\n    {\n        path: [\"Documents\", \"Work\", \"Meetings\", \"ClientMeeting_July.pdf\"],\n        size: 1048576,\n        created: \"2023-07-15\",\n        modified: \"2023-07-16\",\n    },\n    {\n        path: [\"Documents\", \"Personal\", \"Taxes\", \"2022.pdf\"],\n        size: 1024000,\n        created: \"2023-04-10\",\n        modified: \"2023-04-10\",\n    },\n    {\n        path: [\"Documents\", \"Personal\", \"Taxes\", \"2021.pdf\"],\n        size: 1048576,\n        created: \"2022-04-05\",\n        modified: \"2022-04-06\",\n    },\n    {\n        path: [\"Documents\", \"Personal\", \"Taxes\", \"2020.pdf\"],\n        size: 1024000,\n        created: \"2021-04-03\",\n        modified: \"2021-04-03\",\n    },\n    {\n        path: [\"Pictures\", \"Vacation2019\", \"Beach.jpg\"],\n        size: 1048576,\n        created: \"2019-07-10\",\n        modified: \"2019-07-12\",\n    },\n    {\n        path: [\"Pictures\", \"Vacation2019\", \"Mountain.png\"],\n        size: 2048000,\n        created: \"2019-07-11\",\n        modified: \"2019-07-13\",\n    },\n    {\n        path: [\"Pictures\", \"Family\", \"Birthday2022.jpg\"],\n        size: 3072000,\n        created: \"2022-12-15\",\n        modified: \"2022-12-20\",\n    },\n    {\n        path: [\"Pictures\", \"Family\", \"Christmas2021.png\"],\n        size: 2048000,\n        created: \"2021-12-25\",\n        modified: \"2021-12-26\",\n    },\n    {\n        path: [\"Videos\", \"Vacation2019\", \"Beach.mov\"],\n        size: 4194304,\n        created: \"2019-07-10\",\n        modified: \"2019-07-12\",\n    },\n    {\n        path: [\"Videos\", \"Vacation2019\", \"Hiking.mp4\"],\n        size: 4194304,\n        created: \"2019-07-15\",\n        modified: \"2019-07-16\",\n    },\n    {\n        path: [\"Videos\", \"Family\", \"Birthday2022.mp4\"],\n        size: 6291456,\n        created: \"2022-12-15\",\n        modified: \"2022-12-20\",\n    },\n    {\n        path: [\"Videos\", \"Family\", \"Christmas2021.mov\"],\n        size: 6291456,\n        created: \"2021-12-25\",\n        modified: \"2021-12-26\",\n    },\n    {\n        path: [\"Downloads\", \"SoftwareInstaller.exe\"],\n        size: 2097152,\n        created: \"2023-08-01\",\n        modified: \"2023-08-01\",\n    },\n    {\n        path: [\"Downloads\", \"Receipt_OnlineStore.pdf\"],\n        size: 1048576,\n        created: \"2023-08-05\",\n        modified: \"2023-08-05\",\n    },\n    {\n        path: [\"Downloads\", \"Ebook.pdf\"],\n        size: 1048576,\n        created: \"2023-08-08\",\n        modified: \"2023-08-08\",\n    },\n];\nexport function getData() {\n    return files;\n}\n","index.jsx":"'use client';\nimport React, { StrictMode, useCallback, useMemo, useState, } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { ClientSideRowModelModule, ModuleRegistry, ValidationModule, } from \"ag-grid-community\";\nimport { TreeDataModule } from \"ag-grid-enterprise\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport CustomGroupCellRenderer from \"./customGroupCellRenderer\";\nimport { getData } from \"./data\";\nimport \"./styles.css\";\nModuleRegistry.registerModules([\n    ClientSideRowModelModule,\n    TreeDataModule,\n    ValidationModule /* Development Only */,\n]);\nconst GridExample = () => {\n    const containerStyle = useMemo(() => ({ width: \"100%\", height: \"100%\" }), []);\n    const gridStyle = useMemo(() => ({ height: \"100%\", width: \"100%\" }), []);\n    const [columnDefs, setColumnDefs] = useState([\n        { field: \"created\" },\n        { field: \"modified\" },\n        {\n            field: \"size\",\n            aggFunc: \"sum\",\n            valueFormatter: (params) => {\n                const sizeInKb = params.value / 1024;\n                if (sizeInKb > 1024) {\n                    return `${+(sizeInKb / 1024).toFixed(2)} MB`;\n                }\n                else {\n                    return `${+sizeInKb.toFixed(2)} KB`;\n                }\n            },\n        },\n    ]);\n    const autoGroupColumnDef = useMemo(() => {\n        return {\n            cellRendererSelector: (params) => {\n                if (params.node.level === 0) {\n                    return {\n                        component: \"agGroupCellRenderer\",\n                    };\n                }\n                return {\n                    component: CustomGroupCellRenderer,\n                };\n            },\n        };\n    }, []);\n    const defaultColDef = useMemo(() => {\n        return {\n            flex: 1,\n            minWidth: 120,\n        };\n    }, []);\n    const getDataPath = useCallback((data) => data.path, []);\n    const onCellDoubleClicked = useCallback((params) => {\n        if (params.colDef.showRowGroup) {\n            params.node.setExpanded(!params.node.expanded);\n        }\n    }, []);\n    const onCellKeyDown = useCallback((params) => {\n        if (!(\"colDef\" in params)) {\n            return;\n        }\n        if (!(params.event instanceof KeyboardEvent)) {\n            return;\n        }\n        if (params.event.code !== \"Enter\") {\n            return;\n        }\n        if (params.colDef.showRowGroup) {\n            params.node.setExpanded(!params.node.expanded);\n        }\n    }, []);\n    return (<div style={containerStyle}>\n      <div style={gridStyle}>\n        <AgGridReact treeData getDataPath={getDataPath} rowData={getData()} columnDefs={columnDefs} autoGroupColumnDef={autoGroupColumnDef} defaultColDef={defaultColDef} groupDefaultExpanded={1} onCellDoubleClicked={onCellDoubleClicked} onCellKeyDown={onCellKeyDown}/>\n      </div>\n    </div>);\n};\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<StrictMode>\n    <GridExample />\n  </StrictMode>);\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            jsx: 'react',\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.production.min.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.jsx',\n                defaultExtension: 'jsx',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","ag-grid-react":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}