{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","customGroupCellRenderer.js","main.js"],"styleFiles":[],"files":{"data.js":"const files = [\n    { path: ['Desktop', 'ProjectAlpha', 'Proposal.docx'], size: 512000, created: '2023-07-10', modified: '2023-08-01' },\n    {\n        path: ['Desktop', 'ProjectAlpha', 'Timeline.xlsx'],\n        size: 1048576,\n        created: '2023-07-12',\n        modified: '2023-08-03',\n    },\n    { path: ['Desktop', 'ToDoList.txt'], size: 51200, created: '2023-08-05', modified: '2023-08-10' },\n    { path: ['Desktop', 'MeetingNotes_August.pdf'], size: 460800, created: '2023-08-15', modified: '2023-08-15' },\n    {\n        path: ['Documents', 'Work', 'ProjectAlpha', 'Proposal.docx'],\n        size: 512000,\n        created: '2023-07-10',\n        modified: '2023-08-01',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectAlpha', 'Timeline.xlsx'],\n        size: 1048576,\n        created: '2023-07-12',\n        modified: '2023-08-03',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectBeta', 'Report.pdf'],\n        size: 1024000,\n        created: '2023-06-22',\n        modified: '2023-07-15',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectBeta', 'Budget.xlsx'],\n        size: 1048576,\n        created: '2023-06-25',\n        modified: '2023-07-18',\n    },\n    {\n        path: ['Documents', 'Work', 'Meetings', 'TeamMeeting_August.pdf'],\n        size: 512000,\n        created: '2023-08-20',\n        modified: '2023-08-21',\n    },\n    {\n        path: ['Documents', 'Work', 'Meetings', 'ClientMeeting_July.pdf'],\n        size: 1048576,\n        created: '2023-07-15',\n        modified: '2023-07-16',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2022.pdf'],\n        size: 1024000,\n        created: '2023-04-10',\n        modified: '2023-04-10',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2021.pdf'],\n        size: 1048576,\n        created: '2022-04-05',\n        modified: '2022-04-06',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2020.pdf'],\n        size: 1024000,\n        created: '2021-04-03',\n        modified: '2021-04-03',\n    },\n    { path: ['Pictures', 'Vacation2019', 'Beach.jpg'], size: 1048576, created: '2019-07-10', modified: '2019-07-12' },\n    {\n        path: ['Pictures', 'Vacation2019', 'Mountain.png'],\n        size: 2048000,\n        created: '2019-07-11',\n        modified: '2019-07-13',\n    },\n    { path: ['Pictures', 'Family', 'Birthday2022.jpg'], size: 3072000, created: '2022-12-15', modified: '2022-12-20' },\n    { path: ['Pictures', 'Family', 'Christmas2021.png'], size: 2048000, created: '2021-12-25', modified: '2021-12-26' },\n    { path: ['Videos', 'Vacation2019', 'Beach.mov'], size: 4194304, created: '2019-07-10', modified: '2019-07-12' },\n    { path: ['Videos', 'Vacation2019', 'Hiking.mp4'], size: 4194304, created: '2019-07-15', modified: '2019-07-16' },\n    { path: ['Videos', 'Family', 'Birthday2022.mp4'], size: 6291456, created: '2022-12-15', modified: '2022-12-20' },\n    { path: ['Videos', 'Family', 'Christmas2021.mov'], size: 6291456, created: '2021-12-25', modified: '2021-12-26' },\n    { path: ['Downloads', 'SoftwareInstaller.exe'], size: 2097152, created: '2023-08-01', modified: '2023-08-01' },\n    { path: ['Downloads', 'Receipt_OnlineStore.pdf'], size: 1048576, created: '2023-08-05', modified: '2023-08-05' },\n    { path: ['Downloads', 'Ebook.pdf'], size: 1048576, created: '2023-08-08', modified: '2023-08-08' },\n];\n\nfunction getData() {\n    return files;\n}\n","customGroupCellRenderer.js":"\nclass CustomGroupCellRenderer  {\n    eGui;\n    eGroupStatus;\n    eValueContainer;\n\n    node;\n\n    onClick = () => {\n        this.node.setExpanded(!this.node.expanded);\n    };\n\n    onExpandedChanged = (params) => {\n        this.eGroupStatus.setAttribute(\n            'style',\n            `cursor: pointer;transform: ${params.node.expanded ? 'rotate(90deg)' : 'rotate(0deg)'};display: inline-block`\n        );\n    };\n\n    init(params) {\n        this.node = params.node;\n        this.eGui = document.createElement('div');\n\n        const paddingLeft = params.node.level * 15;\n        this.eGui.setAttribute('style', `padding-left: ${paddingLeft}px`);\n\n        if (this.node.group) {\n            this.eGroupStatus = document.createElement('div');\n            this.eGroupStatus.setAttribute(\n                'style',\n                `cursor: pointer;transform: ${params.node.expanded ? 'rotate(90deg)' : 'rotate(0deg)'};display: inline-block`\n            );\n            this.eGroupStatus.innerHTML = '&rarr;';\n            this.eGroupStatus.setAttribute('class', 'eGroupStatus');\n\n            this.eGroupStatus.addEventListener('click', this.onClick);\n\n            this.eGui.appendChild(this.eGroupStatus);\n\n            this.node.addEventListener('expandedChanged', this.onExpandedChanged);\n        }\n\n        this.eGui.append(' ');\n\n        this.eValueContainer = document.createElement('span');\n        this.eValueContainer.textContent = params.value == null ? '' : params.value;\n        this.eValueContainer.setAttribute('class', 'eValueContainer');\n        this.eGui.appendChild(this.eValueContainer);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        this.eValueContainer.textContent = params.value == null ? '' : params.value;\n        return true;\n    }\n\n    destroy() {\n        if (this.eGroupStatus) {\n            this.node.removeEventListener('expandedChanged', this.onExpandedChanged);\n            this.eGroupStatus.removeEventListener('click', this.onClick);\n        }\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"created\" },\n  { field: \"modified\" },\n  {\n    field: \"size\",\n    aggFunc: \"sum\",\n    valueFormatter: (params) => {\n      const sizeInKb = params.value / 1024;\n\n      if (sizeInKb > 1024) {\n        return `${+(sizeInKb / 1024).toFixed(2)} MB`;\n      } else {\n        return `${+sizeInKb.toFixed(2)} KB`;\n      }\n    },\n  },\n];\n\nconst autoGroupColumnDef = {\n  cellRendererSelector: (params) => {\n    if (params.node.level === 0) {\n      return {\n        component: \"agGroupCellRenderer\",\n      };\n    }\n    return {\n      component: CustomGroupCellRenderer,\n    };\n  },\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  treeData: true,\n  getDataPath: (data) => data.path,\n  columnDefs: columnDefs,\n  autoGroupColumnDef: autoGroupColumnDef,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 120,\n  },\n  groupDefaultExpanded: -1,\n  rowData: getData(),\n  onCellDoubleClicked: (params) => {\n    if (params.colDef.showRowGroup) {\n      params.node.setExpanded(!params.node.expanded);\n    }\n  },\n  onCellKeyDown: (params) => {\n    if (!(\"colDef\" in params)) {\n      return;\n    }\n    if (!(params.event instanceof KeyboardEvent)) {\n      return;\n    }\n    if (params.event.code !== \"Enter\") {\n      return;\n    }\n    if (params.colDef.showRowGroup) {\n      params.node.setExpanded(!params.node.expanded);\n    }\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<style>\n    .align-right {\n        text-align: right;\n    }\n</style>\n\n<body>\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</body>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}