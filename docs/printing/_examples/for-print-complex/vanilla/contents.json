{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".ag-row-level-0 {\n    background-color: #999;\n}\n\n@media print {\n    body {\n        overflow: visible;\n    }\n}\n","data.js":"const models = [\n    'Mercedes-AMG C63',\n    'BMW M2',\n    'Audi TT Roadster',\n    'Mazda MX-5',\n    'BMW M3',\n    'Porsche 718 Boxster',\n    'Porsche 718 Cayman',\n];\nconst colors = ['Red', 'Black', 'Green', 'White', 'Blue'];\nconst countries = ['UK', 'Spain', 'France', 'Ireland', 'USA'];\n\nfunction getData() {\n    const rowData = [];\n    for (let i = 0; i < 200; i++) {\n        const item = {\n            id: i + 1,\n            group: 'Group ' + (Math.floor(i / 20) + 1),\n            model: models[Math.floor(Math.random() * models.length)],\n            color: colors[Math.floor(Math.random() * colors.length)],\n            country: countries[Math.floor(Math.random() * countries.length)],\n            year: 2018 - Math.floor(Math.random() * 20),\n            price: 20000 + Math.floor(Math.random() * 100) * 100,\n        };\n        rowData.push(item);\n    }\n    return rowData;\n}\n","main.js":"let gridApi;\nconst columnDefs = [\n  { field: \"group\", rowGroup: true, hide: true },\n  { field: \"id\", pinned: \"left\", width: 70 },\n  { field: \"model\", width: 180 },\n  { field: \"color\", width: 100 },\n  {\n    field: \"price\",\n    valueFormatter: \"'$' + value.toLocaleString()\",\n    width: 100,\n  },\n  { field: \"year\", width: 100 },\n  { field: \"country\", width: 120 },\n];\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  rowData: getData(),\n  groupDisplayType: \"groupRows\",\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction onFirstDataRendered(params) {\n  params.api.expandAll();\n}\n\nfunction onBtPrint() {\n  setPrinterFriendly(gridApi);\n\n  setTimeout(() => {\n    print();\n    setNormal(gridApi);\n  }, 2000);\n}\n\nfunction setPrinterFriendly(api) {\n  const eGridDiv = document.querySelector(\"#myGrid\");\n  eGridDiv.style.width = \"\";\n  eGridDiv.style.height = \"\";\n  api.setGridOption(\"domLayout\", \"print\");\n}\n\nfunction setNormal(api) {\n  const eGridDiv = document.querySelector(\"#myGrid\");\n  eGridDiv.style.width = \"700px\";\n  eGridDiv.style.height = \"200px\";\n\n  api.setGridOption(\"domLayout\", undefined);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<style>\n    .ag-cell {\n        page-break-inside: avoid !important;\n    }\n</style>\n\n<button onclick=\"onBtPrint()\">Print</button>\n\n<h3>Latin Text</h3>\n\n<p>\n    Lorem ipsum dolor sit amet, ne cum repudiare abhorreant. Atqui molestiae neglegentur ad nam, mei amet eros ea,\n    populo deleniti scaevola et pri. Pro no ubique explicari, his reque nulla consequuntur in. His soleat doctus\n    constituam te, sed at alterum repudiandae. Suas ludus electram te ius.\n</p>\n\n<div id=\"myGrid\" style=\"width: 700px; height: 200px\"></div>\n\n<h3>More Latin Text</h3>\n\n<p>\n    Lorem ipsum dolor sit amet, ne cum repudiare abhorreant. Atqui molestiae neglegentur ad nam, mei amet eros ea,\n    populo deleniti scaevola et pri. Pro no ubique explicari, his reque nulla consequuntur in. His soleat doctus\n    constituam te, sed at alterum repudiandae. Suas ludus electram te ius.\n</p>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"myGridReference":true}