{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".details > label {\n    margin-bottom: 10px;\n}\n.details > label:first-of-type {\n    margin-top: 10px;\n}\n.details > label:last-of-type {\n    margin-bottom: 0;\n}\n.option {\n    display: block;\n    margin: 5px 10px 5px 0;\n}\n.grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n.margin-container {\n    position: relative;\n    border: 1px solid gray;\n    border-radius: 5px;\n    padding: 10px;\n    width: 360px;\n    margin-left: 10px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.column.margin-container label {\n    width: 115px;\n    white-space: nowrap;\n    display: flex;\n    overflow: hidden;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.column.margin-container input {\n    max-width: 40px;\n    margin: 2px;\n}\n\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 200 },\n    { field: \"country\", minWidth: 200 },\n    { field: \"sport\", minWidth: 150 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n\n  defaultColDef: {\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  popupParent: document.body,\n};\n\nfunction getNumber(id) {\n  const el = document.querySelector(id);\n\n  if (!el || isNaN(el.value)) {\n    return 0;\n  }\n\n  return parseFloat(el.value);\n}\n\nfunction getValue(id) {\n  return document.querySelector(id).value;\n}\n\nfunction getSheetConfig() {\n  return {\n    pageSetup: {\n      orientation: getValue(\"#pageOrientation\"),\n      pageSize: getValue(\"#pageSize\"),\n    },\n    margins: {\n      top: getNumber(\"#top\"),\n      right: getNumber(\"#right\"),\n      bottom: getNumber(\"#bottom\"),\n      left: getNumber(\"#left\"),\n      header: getNumber(\"#header\"),\n      footer: getNumber(\"#footer\"),\n    },\n  };\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { pageSetup, margins } = getSheetConfig();\n  gridApi.exportDataAsExcel({ pageSetup, margins });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  const form = document.querySelector(\"form\");\n\n  form?.addEventListener(\"submit\", (e) => onFormSubmit(e));\n\n  if (gridDiv) {\n    gridApi = agGrid.createGrid(gridDiv, gridOptions);\n    fetch(\"https://www.ag-grid.com/example-assets/small-olympic-winners.json\")\n      .then((response) => response.json())\n      .then((data) =>\n        gridApi.setGridOption(\n          \"rowData\",\n          data.filter((rec) => rec.country != null),\n        ),\n      );\n  }\n});\n","index.html":"<div class=\"container\">\n    <form>\n        <div class=\"columns\">\n            <div class=\"column\">\n                <label class=\"option\" for=\"pageOrientation\">\n                    Page Orientation =\n                    <select id=\"pageOrientation\">\n                        <option value=\"Portrait\">Portrait</option>\n                        <option value=\"Landscape\">Landscape</option>\n                    </select>\n                </label>\n                <label class=\"option\" for=\"pageSize\">\n                    Page Size =\n                    <select id=\"pageSize\">\n                        <option value=\"Letter\">Letter</option>\n                        <option value=\"Letter Small\">Letter Small</option>\n                        <option value=\"Tabloid\">Tabloid</option>\n                        <option value=\"Ledger\">Ledger</option>\n                        <option value=\"Legal\">Legal</option>\n                        <option value=\"Statement\">Statement</option>\n                        <option value=\"Executive\">Executive</option>\n                        <option value=\"A3\">A3</option>\n                        <option value=\"A4\">A4</option>\n                        <option value=\"A4 Small\">A4 Small</option>\n                        <option value=\"A5\">A5</option>\n                        <option value=\"A6\">A6</option>\n                        <option value=\"B4\">B4</option>\n                        <option value=\"B5\">B5</option>\n                        <option value=\"Folio\">Folio</option>\n                        <option value=\"Envelope\">Envelope</option>\n                        <option value=\"Envelope DL\">Envelope DL</option>\n                        <option value=\"Envelope C5\">Envelope C5</option>\n                        <option value=\"Envelope B5\">Envelope B5</option>\n                        <option value=\"Envelope C3\">Envelope C3</option>\n                        <option value=\"Envelope C4\">Envelope C4</option>\n                        <option value=\"Envelope C6\">Envelope C6</option>\n                        <option value=\"Envelope Monarch\">Envelope Monarch</option>\n                        <option value=\"Japanese Postcard\">Japanese Postcard</option>\n                        <option value=\"Japanese Double Postcard\">Japanese Double Postcard</option>\n                    </select>\n                </label>\n            </div>\n            <fieldset class=\"column margin-container\">\n                <legend>Margins</legend>\n                <label for=\"top\">Top = <input type=\"number\" id=\"top\" value=\"0.75\" min=\"0\" step=\"0.05\" /></label>\n                <label for=\"right\">Right = <input type=\"number\" id=\"right\" value=\"0.7\" min=\"0\" step=\"0.05\" /></label>\n                <label for=\"bottom\"\n                    >Bottom = <input type=\"number\" id=\"bottom\" value=\"0.75\" min=\"0\" step=\"0.05\"\n                /></label>\n                <label for=\"left\">Left = <input type=\"number\" id=\"left\" value=\"0.7\" min=\"0\" step=\"0.05\" /></label>\n                <label for=\"header\">Header = <input type=\"number\" id=\"header\" value=\"0.3\" min=\"0\" step=\"0.05\" /></label>\n                <label for=\"footer\">Footer = <input type=\"number\" id=\"footer\" value=\"0.3\" min=\"0\" step=\"0.05\" /></label>\n            </fieldset>\n        </div>\n        <div>\n            <input type=\"submit\" style=\"margin: 5px 0px; font-weight: bold\" value=\"Export to Excel\" />\n        </div>\n    </form>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}