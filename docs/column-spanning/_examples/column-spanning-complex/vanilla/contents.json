{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".header-cell {\n    background-color: #2244cc44;\n    font-size: 25px;\n    font-weight: bold;\n    text-align: center;\n}\n.quarters-cell {\n    background-color: #2244cc44;\n    font-weight: bold;\n}\n","data.js":"function getData() {\n    const rowData = [\n        { section: 'big-title', jan: 'Warehouse 1' },\n        { section: 'quarters', jan: 'Q1', apr: 'Q2' },\n        { jan: 534, feb: 612, mar: 243, apr: 231, may: 428, jun: 231 },\n        { jan: 765, feb: 146, mar: 243, apr: 231, may: 428, jun: 231 },\n        { jan: 335, feb: 122, mar: 243, apr: 231, may: 428, jun: 231 },\n        { jan: 35, feb: 342, mar: 243, apr: 231, may: 428, jun: 231 },\n        { jan: 568, feb: 531, mar: 243, apr: 231, may: 428, jun: 231 },\n        { jan: 365, feb: 361, mar: 243, apr: 231, may: 428, jun: 231 },\n        { section: 'big-title', jan: 'Warehouse 2' },\n        { section: 'quarters', jan: 'Q1', apr: 'Q2' },\n        { jan: 21, feb: 12, mar: 24, apr: 31, may: 28, jun: 31 },\n        { jan: 21, feb: 12, mar: 24, apr: 31, may: 28, jun: 31 },\n        { jan: 21, feb: 12, mar: 24, apr: 31, may: 28, jun: 31 },\n        { jan: 21, feb: 12, mar: 24, apr: 31, may: 28, jun: 31 },\n        { jan: 2, feb: 32, mar: 24, apr: 31, may: 48, jun: 21 },\n        { jan: 21, feb: 12, mar: 24, apr: 31, may: 28, jun: 31 },\n    ];\n    return rowData;\n}\n","main.js":"const cellClassRules = {\n  \"header-cell\": 'data.section === \"big-title\"',\n  \"quarters-cell\": 'data.section === \"quarters\"',\n};\n\nconst columnDefs = [\n  {\n    headerName: \"Jan\",\n    field: \"jan\",\n    colSpan: (params) => {\n      if (isHeaderRow(params)) {\n        return 6;\n      } else if (isQuarterRow(params)) {\n        return 3;\n      } else {\n        return 1;\n      }\n    },\n    cellClassRules: cellClassRules,\n  },\n  { headerName: \"Feb\", field: \"feb\" },\n  { headerName: \"Mar\", field: \"mar\" },\n  {\n    headerName: \"Apr\",\n    field: \"apr\",\n    colSpan: (params) => {\n      if (isQuarterRow(params)) {\n        return 3;\n      } else {\n        return 1;\n      }\n    },\n    cellClassRules: cellClassRules,\n  },\n  { headerName: \"May\", field: \"may\" },\n  { headerName: \"Jun\", field: \"jun\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  getRowHeight: (params) => {\n    if (isHeaderRow(params)) {\n      return 60;\n    }\n  },\n  columnDefs: columnDefs,\n  rowData: getData(),\n  defaultColDef: {\n    width: 100,\n    sortable: false,\n    suppressMovable: true,\n  },\n  autoSizeStrategy: {\n    type: \"fitGridWidth\",\n  },\n};\n\nfunction isHeaderRow(params) {\n  return params.data.section === \"big-title\";\n}\n\nfunction isQuarterRow(params) {\n  return params.data.section === \"quarters\";\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}