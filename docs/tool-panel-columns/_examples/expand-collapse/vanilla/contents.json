{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.button-group {\n    padding-bottom: 4px;\n    display: inline-block;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n","main.js":"const columnDefs = [\n  {\n    groupId: \"athleteGroupId\",\n    headerName: \"Athlete\",\n    children: [\n      {\n        headerName: \"Name\",\n        field: \"athlete\",\n        minWidth: 200,\n        filter: \"agTextColumnFilter\",\n      },\n      {\n        groupId: \"competitionGroupId\",\n        headerName: \"Competition\",\n        children: [{ field: \"year\" }, { field: \"date\", minWidth: 180 }],\n      },\n    ],\n  },\n  {\n    groupId: \"medalsGroupId\",\n    headerName: \"Medals\",\n    children: [\n      { field: \"gold\" },\n      { field: \"silver\" },\n      { field: \"bronze\" },\n      { field: \"total\" },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    // allow every column to be aggregated\n    enableValue: true,\n    // allow every column to be grouped\n    enableRowGroup: true,\n    // allow every column to be pivoted\n    enablePivot: true,\n    filter: true,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  sideBar: \"columns\",\n  onGridReady: (params) => {\n    const columnToolPanel = params.api.getToolPanelInstance(\"columns\");\n    columnToolPanel.collapseColumnGroups();\n  },\n};\n\nfunction expandAllGroups() {\n  const columnToolPanel = gridApi.getToolPanelInstance(\"columns\");\n  columnToolPanel.expandColumnGroups();\n}\n\nfunction collapseAllGroups() {\n  const columnToolPanel = gridApi.getToolPanelInstance(\"columns\");\n  columnToolPanel.collapseColumnGroups();\n}\n\nfunction expandAthleteAndCompetitionGroups() {\n  const columnToolPanel = gridApi.getToolPanelInstance(\"columns\");\n  columnToolPanel.expandColumnGroups([\"athleteGroupId\", \"competitionGroupId\"]);\n}\n\nfunction collapseCompetitionGroups() {\n  const columnToolPanel = gridApi.getToolPanelInstance(\"columns\");\n  columnToolPanel.collapseColumnGroups([\"competitionGroupId\"]);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <span class=\"button-group\">\n            <button onclick=\"expandAllGroups()\">Expand All</button>\n            <button onclick=\"collapseAllGroups()\">Collapse All</button>\n            <button onclick=\"expandAthleteAndCompetitionGroups()\">Expand Athlete & Competition</button>\n            <button onclick=\"collapseCompetitionGroups()\">Collapse Competition</button>\n        </span>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}