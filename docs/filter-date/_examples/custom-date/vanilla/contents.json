{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["customDateComponent.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":"html {\n    position: fixed;\n    height: 100%;\n    width: 100%;\n}\n\nbody {\n    height: 100%;\n    width: 100%;\n}\n\n.custom-date-filter a {\n    position: absolute;\n    right: 20px;\n    color: #999;\n    cursor: pointer;\n}\n.custom-date-filter:after {\n    position: absolute;\n    content: '\\f073';\n    display: block;\n    font-weight: 400;\n    font-family: 'Font Awesome 5 Free';\n    right: 5px;\n    pointer-events: none;\n    color: #999;\n}\n","customDateComponent.js":"\n// we'll be using the globally provided flatpickr for our example\n\n\nclass CustomDateComponent  {\n    params;\n    eGui;\n    eInput;\n    picker;\n    date;\n    init(params) {\n        const template = `\n            <input type=\"text\" data-input style=\"width: 100%;\" />\n            <a class=\"input-button\" title=\"clear\" data-clear>\n                <i class=\"fa fa-times\"></i>\n            </a>`;\n\n        this.params = params;\n\n        this.eGui = document.createElement('div');\n        this.eGui.setAttribute('role', 'presentation');\n        this.eGui.classList.add('ag-input-wrapper');\n        this.eGui.classList.add('custom-date-filter');\n        this.eGui.innerHTML = template;\n\n        this.eInput = this.eGui.querySelector('input');\n\n        this.picker = flatpickr(this.eGui, {\n            onChange: this.onDateChanged.bind(this),\n            dateFormat: 'd/m/Y',\n            wrap: true,\n        });\n\n        this.picker.calendarContainer.classList.add('ag-custom-component-popup');\n\n        this.date = null;\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    onDateChanged(selectedDates) {\n        this.date = selectedDates[0] || null;\n        this.params.onDateChanged();\n    }\n\n    getDate() {\n        return this.date;\n    }\n\n    setDate(date) {\n        this.picker.setDate(date);\n        this.date = date;\n    }\n\n    setInputPlaceholder(placeholder) {\n        this.eInput.setAttribute('placeholder', placeholder);\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\" },\n  { field: \"country\" },\n  {\n    field: \"date\",\n    minWidth: 190,\n  },\n  { field: \"sport\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    floatingFilter: true,\n  },\n  columnDefs: columnDefs,\n  rowData: null,\n  components: {\n    agDateInput: CustomDateComponent,\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\n        \"rowData\",\n        data.map((row) => {\n          const dateParts = row.date.split(\"/\");\n          const date = new Date(\n            Number(dateParts[2]),\n            Number(dateParts[1]) - 1,\n            Number(dateParts[0]),\n          );\n          return {\n            ...row,\n            date,\n          };\n        }),\n      );\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome","flatpickr"]}