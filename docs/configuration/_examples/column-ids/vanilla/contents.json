{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    // colId will be 'height',\n    { headerName: \"Col 1\", field: \"height\" },\n\n    // colId will be 'firstWidth',\n    { headerName: \"Col 2\", colId: \"firstWidth\", field: \"width\" },\n    // colId will be 'secondWidth'\n    { headerName: \"Col 3\", colId: \"secondWidth\", field: \"width\" },\n\n    // no colId, no field, so grid generated ID\n    { headerName: \"Col 4\", valueGetter: \"data.width\" },\n    { headerName: \"Col 5\", valueGetter: \"data.width\" },\n  ],\n  rowData: createRowData(),\n  onGridReady: (params) => {\n    const cols = params.api.getColumns();\n    cols.forEach((col) => {\n      const colDef = col.getColDef();\n      console.log(\n        colDef.headerName + \", Column ID = \" + col.getId(),\n        JSON.stringify(colDef),\n      );\n    });\n  },\n};\n\nfunction createRowData() {\n  const data = [];\n  for (let i = 0; i < 20; i++) {\n    data.push({\n      height: Math.floor(Math.random() * 100),\n      width: Math.floor(Math.random() * 100),\n      depth: Math.floor(Math.random() * 100),\n    });\n  }\n  return data;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div style=\"height: 100%; box-sizing: border-box\">\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}