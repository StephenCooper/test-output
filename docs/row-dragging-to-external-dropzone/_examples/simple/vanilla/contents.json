{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":"body {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n\n.example-wrapper {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n}\n\n.drop-containers {\n    display: flex;\n    flex: 1 1 auto;\n    flex-direction: row;\n    position: relative;\n    overflow: hidden;\n}\n\n.toolbar {\n    height: 30px;\n}\n\n.grid-wrapper {\n    flex: 2 2 0px;\n    min-width: 0;\n}\n\n.drop-col {\n    padding-left: 10px;\n    box-sizing: border-box;\n    flex: 1 1 0px;\n    display: flex;\n    flex-direction: column;\n}\n\n.drop-target,\n.tile {\n    color: white;\n}\n\n.drop-target {\n    border: 1px solid #888;\n    background-color: #99999966;\n    padding: 10px;\n}\n\n.tile-container {\n    box-sizing: border-box;\n    border: 1px solid #888;\n    background-color: #99999944;\n    overflow: auto;\n    display: flex;\n    align-items: flex-start;\n    align-content: flex-start;\n    flex-wrap: wrap;\n    flex: 1 1 auto;\n}\n\n.tile {\n    width: calc(50% - 30px);\n    margin: 5px;\n    padding: 10px;\n    border-radius: 5px;\n}\n\n.red-row {\n    background-color: #cc333344;\n}\n.green-row {\n    background-color: #33cc3344;\n}\n.blue-row {\n    background-color: #2244cc44;\n}\n\n.tile.red {\n    background-color: #cc333344;\n}\n.tile.green {\n    background-color: #33cc3344;\n}\n.tile.blue {\n    background-color: #2244cc44;\n}\n","main.js":"let rowIdSequence = 100;\n\nconst columnDefs = [\n  { field: \"id\", rowDrag: true },\n  { field: \"color\" },\n  { field: \"value1\" },\n  { field: \"value2\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    filter: true,\n    flex: 1,\n  },\n  rowClassRules: {\n    \"red-row\": 'data.color == \"Red\"',\n    \"green-row\": 'data.color == \"Green\"',\n    \"blue-row\": 'data.color == \"Blue\"',\n  },\n  rowData: createRowData(),\n  rowDragManaged: true,\n  columnDefs: columnDefs,\n  onGridReady: (params) => {\n    addDropZones(params);\n    addCheckboxListener(params);\n  },\n};\n\nfunction addCheckboxListener(params) {\n  const checkbox = document.querySelector(\"input[type=checkbox]\");\n\n  checkbox.addEventListener(\"change\", () => {\n    params.api.setGridOption(\"suppressMoveWhenRowDragging\", checkbox.checked);\n  });\n}\n\nfunction createRowData() {\n  const data = [];\n  [\n    \"Red\",\n    \"Green\",\n    \"Blue\",\n    \"Red\",\n    \"Green\",\n    \"Blue\",\n    \"Red\",\n    \"Green\",\n    \"Blue\",\n  ].forEach((color) => {\n    const newDataItem = {\n      id: rowIdSequence++,\n      color: color,\n      value1: Math.floor(Math.random() * 100),\n      value2: Math.floor(Math.random() * 100),\n    };\n    data.push(newDataItem);\n  });\n  return data;\n}\n\nfunction createTile(data) {\n  const el = document.createElement(\"div\");\n\n  el.classList.add(\"tile\");\n  el.classList.add(data.color.toLowerCase());\n  el.innerHTML =\n    '<div class=\"id\">' +\n    data.id +\n    \"</div>\" +\n    '<div class=\"value\">' +\n    data.value1 +\n    \"</div>\" +\n    '<div class=\"value\">' +\n    data.value2 +\n    \"</div>\";\n\n  return el;\n}\n\nfunction addDropZones(params) {\n  const tileContainer = document.querySelector(\".tile-container\");\n  const dropZone = {\n    getContainer: () => {\n      return tileContainer;\n    },\n    onDragStop: (params) => {\n      const tile = createTile(params.node.data);\n      tileContainer.appendChild(tile);\n    },\n  };\n\n  params.api.addRowDropZone(dropZone);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"toolbar\">\n        <label><input type=\"checkbox\" /> Enable suppressMoveWhenRowDragging</label>\n    </div>\n    <div class=\"drop-containers\">\n        <div class=\"grid-wrapper\">\n            <div id=\"myGrid\" style=\"width: 100%; height: 100%\"></div>\n        </div>\n        <div class=\"drop-col\">\n            <span id=\"eDropTarget\" class=\"drop-target\">==> Drop to here</span>\n            <div class=\"tile-container\"></div>\n        </div>\n    </div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}