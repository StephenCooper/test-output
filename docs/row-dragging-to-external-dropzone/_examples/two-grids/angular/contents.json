{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"app.component.ts","scriptFiles":[],"styleFiles":[],"files":{"style.css":".example-wrapper {\n    display: flex;\n    height: 100%;\n}\n\n.inner-col {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 auto;\n    min-width: 0;\n}\n\n.inner-col.vertical-toolbar {\n    display: flex;\n    flex: none;\n    width: 100px;\n    align-items: center;\n    justify-content: center;\n}\n\n.toolbar {\n    white-space: nowrap;\n}\n\n.vertical-toolbar > span {\n    padding: 10px;\n    margin: 10px;\n    cursor: default;\n    user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    -webkit-user-modify: none;\n}\n\nbutton.factory {\n    height: 25px;\n    border-radius: 5px;\n    border: none;\n    color: white;\n    outline: none;\n    cursor: pointer;\n}\n\nbutton i {\n    margin-right: 10px;\n}\n\n.bin i {\n    transform: scale(1);\n    transition: transform 500ms;\n}\n\n.factory-red {\n    background-color: #cc333344;\n}\n.factory-green {\n    background-color: #33cc3344;\n}\n.factory-blue {\n    background-color: #2244cc44;\n}\n\n.red-row {\n    background-color: #cc333344;\n}\n.green-row {\n    background-color: #33cc3344;\n}\n.blue-row {\n    background-color: #2244cc44;\n}\n","styles.css":".example-wrapper {\n    display: flex;\n    height: 100%;\n}\n\n.inner-col {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 auto;\n    min-width: 0;\n}\n\n.inner-col.vertical-toolbar {\n    display: flex;\n    flex: none;\n    width: 100px;\n    align-items: center;\n    justify-content: center;\n}\n\n.toolbar {\n    white-space: nowrap;\n}\n\n.vertical-toolbar > span {\n    padding: 10px;\n    margin: 10px;\n    cursor: default;\n    user-select: none;\n    -ms-user-select: none;\n    -moz-user-select: none;\n    -webkit-user-modify: none;\n}\n\nbutton.factory {\n    height: 25px;\n    border-radius: 5px;\n    border: none;\n    color: white;\n    outline: none;\n    cursor: pointer;\n    margin-right: 2px;\n}\n\nbutton i {\n    margin-right: 10px;\n}\n\n.bin i {\n    transform: scale(1);\n    transition: transform 500ms;\n}\n\n.factory-red {\n    background-color: #cc333344;\n}\n.factory-green {\n    background-color: #33cc3344;\n}\n.factory-blue {\n    background-color: #2244cc44;\n}\n\n.red-row {\n    background-color: #cc333344 !important;\n}\n.green-row {\n    background-color: #33cc3344 !important;\n}\n.blue-row {\n    background-color: #2244cc44 !important;\n}\n","app.component.ts":"import { Component, ViewChild } from \"@angular/core\";\n\nimport { AgGridAngular } from \"ag-grid-angular\";\nimport type {\n  ColDef,\n  GetRowIdParams,\n  GridApi,\n  GridReadyEvent,\n  RowDropZoneParams,\n} from \"ag-grid-community\";\nimport {\n  ClientSideRowModelApiModule,\n  ClientSideRowModelModule,\n  ModuleRegistry,\n  RowApiModule,\n  RowDragModule,\n  RowStyleModule,\n  TextFilterModule,\n  ValidationModule,\n} from \"ag-grid-community\";\n\nimport \"./styles.css\";\n\nModuleRegistry.registerModules([\n  RowDragModule,\n  ClientSideRowModelApiModule,\n  RowApiModule,\n  TextFilterModule,\n  RowStyleModule,\n  ClientSideRowModelModule,\n  ValidationModule /* Development Only */,\n]);\n\n@Component({\n  standalone: true,\n  imports: [AgGridAngular],\n  selector: \"my-app\",\n  template: `\n    <div class=\"example-wrapper\">\n      <div class=\"inner-col\">\n        <div class=\"toolbar\">\n          <button\n            class=\"factory factory-red\"\n            data-color=\"Red\"\n            data-side=\"left\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Red\n          </button>\n          <button\n            class=\"factory factory-green\"\n            data-color=\"Green\"\n            data-side=\"left\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Green\n          </button>\n          <button\n            class=\"factory factory-blue\"\n            data-color=\"Blue\"\n            data-side=\"left\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Blue\n          </button>\n        </div>\n        <div style=\"height: 100%;\" class=\"inner-col\" #eLeftGrid>\n          <ag-grid-angular\n            style=\"height: 100%;\"\n            [defaultColDef]=\"defaultColDef\"\n            [getRowId]=\"getRowId\"\n            [rowClassRules]=\"rowClassRules\"\n            [rowDragManaged]=\"true\"\n            [suppressMoveWhenRowDragging]=\"true\"\n            [rowData]=\"leftRowData\"\n            [columnDefs]=\"columns\"\n            (gridReady)=\"onGridReady($event, 'Left')\"\n          />\n        </div>\n      </div>\n\n      <div class=\"inner-col vertical-toolbar\">\n        <span class=\"bin\" #eBin>\n          <i class=\"far fa-trash-alt fa-3x\" #eBinIcon></i>\n        </span>\n      </div>\n\n      <div class=\"inner-col\">\n        <div class=\"toolbar\">\n          <button\n            class=\"factory factory-red\"\n            data-color=\"Red\"\n            data-side=\"right\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Red\n          </button>\n          <button\n            class=\"factory factory-green\"\n            data-color=\"Green\"\n            data-side=\"right\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Green\n          </button>\n          <button\n            class=\"factory factory-blue\"\n            data-color=\"Blue\"\n            data-side=\"right\"\n            (click)=\"onFactoryButtonClick($event)\"\n          >\n            <i class=\"far fa-plus-square\"></i>Add Blue\n          </button>\n        </div>\n        <div style=\"height: 100%;\" class=\"inner-col\" #eRightGrid>\n          <ag-grid-angular\n            style=\"height: 100%;\"\n            [defaultColDef]=\"defaultColDef\"\n            [getRowId]=\"getRowId\"\n            [rowClassRules]=\"rowClassRules\"\n            [rowDragManaged]=\"true\"\n            [suppressMoveWhenRowDragging]=\"true\"\n            [rowData]=\"rightRowData\"\n            [columnDefs]=\"columns\"\n            (gridReady)=\"onGridReady($event, 'Right')\"\n          />\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class AppComponent {\n  leftRowData: any[] = [];\n  rightRowData: any[] = [];\n  leftApi!: GridApi;\n  rightApi!: GridApi;\n\n  rowClassRules = {\n    \"red-row\": 'data.color == \"Red\"',\n    \"green-row\": 'data.color == \"Green\"',\n    \"blue-row\": 'data.color == \"Blue\"',\n  };\n\n  defaultColDef: ColDef = {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  };\n\n  columns: ColDef[] = [\n    { field: \"id\", rowDrag: true },\n    { field: \"color\" },\n    { field: \"value1\" },\n    { field: \"value2\" },\n  ];\n\n  @ViewChild(\"eLeftGrid\") eLeftGrid: any;\n  @ViewChild(\"eRightGrid\") eRightGrid: any;\n  @ViewChild(\"eBin\") eBin: any;\n  @ViewChild(\"eBinIcon\") eBinIcon: any;\n\n  constructor() {\n    this.leftRowData = createLeftRowData();\n  }\n\n  getRowId = (params: GetRowIdParams) => {\n    return String(params.data.id);\n  };\n\n  onGridReady(params: GridReadyEvent, side: string) {\n    const api = params.api;\n    if (side === \"Left\") {\n      this.leftApi = api;\n    } else {\n      this.rightApi = api;\n    }\n\n    this.addBinZone(api);\n    this.addGridDropZone(side, api);\n  }\n\n  addRecordToGrid(side: string, data: any) {\n    // if data missing or data has no it, do nothing\n    if (!data || data.id == null) {\n      return;\n    }\n\n    const api = side === \"left\" ? this.leftApi : this.rightApi;\n    // do nothing if row is already in the grid, otherwise we would have duplicates\n    const rowAlreadyInGrid = !!api.getRowNode(data.id);\n\n    if (rowAlreadyInGrid) {\n      console.log(\"not adding row to avoid duplicates in the grid\");\n      return;\n    }\n\n    const transaction = {\n      add: [data],\n    };\n\n    api.applyTransaction(transaction);\n  }\n\n  onFactoryButtonClick(e: any) {\n    const button = e.currentTarget,\n      buttonColor = button.getAttribute(\"data-color\"),\n      side = button.getAttribute(\"data-side\"),\n      data = createDataItem(buttonColor);\n\n    this.addRecordToGrid(side, data);\n  }\n\n  binDrop(data: any) {\n    // if data missing or data has no id, do nothing\n    if (!data || data.id == null) {\n      return;\n    }\n\n    const transaction = {\n      remove: [data],\n    };\n\n    [this.leftApi, this.rightApi].forEach((api) => {\n      const rowsInGrid = !!api.getRowNode(data.id);\n\n      if (rowsInGrid) {\n        api.applyTransaction(transaction);\n      }\n    });\n  }\n\n  addBinZone(api: GridApi) {\n    const dropZone: RowDropZoneParams = {\n      getContainer: () => this.eBinIcon.nativeElement,\n      onDragEnter: () => {\n        this.eBin.nativeElement.style.color = \"blue\";\n        this.eBinIcon.nativeElement.style.transform = \"scale(1.5)\";\n      },\n      onDragLeave: () => {\n        this.eBin.nativeElement.style.removeProperty(\"color\");\n        this.eBinIcon.nativeElement.style.transform = \"scale(1)\";\n      },\n      onDragStop: (params) => {\n        this.binDrop(params.node.data);\n        this.eBin.nativeElement.style.removeProperty(\"color\");\n        this.eBinIcon.nativeElement.style.transform = \"scale(1)\";\n      },\n    };\n\n    api.addRowDropZone(dropZone);\n  }\n\n  addGridDropZone(side: string, api: GridApi) {\n    const dropSide = side === \"Left\" ? \"Right\" : \"Left\";\n    const dropZone: RowDropZoneParams = {\n      getContainer: () =>\n        dropSide === \"Left\"\n          ? this.eLeftGrid.nativeElement\n          : this.eRightGrid.nativeElement,\n      onDragStop: (dragParams) =>\n        this.addRecordToGrid(dropSide.toLowerCase(), dragParams.node.data),\n    };\n\n    api.addRowDropZone(dropZone);\n  }\n}\n\nlet rowIdSequence = 100;\n\nfunction createDataItem(color: string) {\n  const obj = {\n    id: rowIdSequence++,\n    color: color,\n    value1: Math.floor(Math.random() * 100),\n    value2: Math.floor(Math.random() * 100),\n  };\n\n  return obj;\n}\n\nfunction createLeftRowData() {\n  return [\"Red\", \"Green\", \"Blue\"].map((color) => createDataItem(color));\n}\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^19';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/core/primitives/event-dispatch':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/event-dispatch.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"@angular/core":"^19","@angular/common":"^19","@angular/forms":"^19","@angular/platform-browser":"^19","ag-grid-angular":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}