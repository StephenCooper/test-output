{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".row {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    margin-top: 5px;\n}\n\n#myGrid {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    gap: 16px;\n}\n.grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 200 },\n    { field: \"country\", minWidth: 200 },\n    { field: \"sport\", minWidth: 150 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  popupParent: document.body,\n};\n\nconst getValues = (type) => {\n  const value = document.querySelector(\"#\" + type + \"Value\").value;\n\n  if (value == null) {\n    return;\n  }\n\n  const obj = {\n    value: value,\n  };\n\n  obj.position = document.querySelector(\"#\" + type + \"Position\").value;\n\n  const fontName = document.querySelector(\"#\" + type + \"FontName\").value;\n  const fontSize = document.querySelector(\"#\" + type + \"FontSize\").value;\n  const fontWeight = document.querySelector(\"#\" + type + \"FontWeight\").value;\n  const underline = document.querySelector(\"#\" + type + \"Underline\").checked;\n\n  if (\n    fontName !== \"Calibri\" ||\n    fontSize != \"11\" ||\n    fontWeight !== \"Regular\" ||\n    underline\n  ) {\n    obj.font = {};\n    if (fontName !== \"Calibri\") {\n      obj.font.fontName = fontName;\n    }\n    if (fontSize != \"11\") {\n      obj.font.size = Number.parseInt(fontSize);\n    }\n    if (fontWeight !== \"Regular\") {\n      if (fontWeight.indexOf(\"Bold\") !== -1) {\n        obj.font.bold = true;\n      }\n      if (fontWeight.indexOf(\"Italic\") !== -1) {\n        obj.font.italic = true;\n      }\n    }\n\n    if (underline) {\n      obj.font.underline = \"Single\";\n    }\n  }\n\n  return obj;\n};\n\nconst getParams = () => {\n  const header = getValues(\"header\");\n  const footer = getValues(\"footer\");\n\n  if (!header && !footer) {\n    return undefined;\n  }\n\n  const obj = {\n    headerFooterConfig: {\n      all: {},\n    },\n  };\n\n  if (header) {\n    obj.headerFooterConfig.all.header = [header];\n  }\n\n  if (footer) {\n    obj.headerFooterConfig.all.footer = [footer];\n  }\n\n  return obj;\n};\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel(getParams());\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/small-olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) =>\n      gridApi.setGridOption(\n        \"rowData\",\n        data.filter((rec) => rec.country != null),\n      ),\n    );\n});\n","index.html":"<div class=\"container\">\n    <div class=\"columns\">\n        <fieldset class=\"column\">\n            <legend>Header</legend>\n            <div class=\"row\">\n                Position\n                <select id=\"headerPosition\">\n                    <option>Left</option>\n                    <option>Center</option>\n                    <option>Right</option>\n                </select>\n            </div>\n            <div class=\"row\">\n                Font\n                <select id=\"headerFontName\">\n                    <option>Calibri</option>\n                    <option>Arial</option>\n                </select>\n                <select id=\"headerFontSize\">\n                    <option>11</option>\n                    <option>12</option>\n                    <option>13</option>\n                    <option>14</option>\n                    <option>16</option>\n                    <option>20</option>\n                </select>\n                <select id=\"headerFontWeight\">\n                    <option>Regular</option>\n                    <option>Bold</option>\n                    <option>Italic</option>\n                    <option>Bold Italic</option>\n                </select>\n                <label class=\"option underline\" for=\"headerUnderline\">\n                    <input type=\"checkbox\" id=\"headerUnderline\" /><u>U</u>\n                </label>\n            </div>\n            <div class=\"row option\">\n                Value\n                <input id=\"headerValue\" />\n            </div>\n        </fieldset>\n        <fieldset class=\"column\">\n            <legend>Footer</legend>\n            <div class=\"row\">\n                Position\n                <select id=\"footerPosition\">\n                    <option>Left</option>\n                    <option>Center</option>\n                    <option>Right</option>\n                </select>\n            </div>\n            <div class=\"row\">\n                Font\n                <select id=\"footerFontName\">\n                    <option>Calibri</option>\n                    <option>Arial</option>\n                </select>\n                <select id=\"footerFontSize\">\n                    <option>11</option>\n                    <option>12</option>\n                    <option>13</option>\n                    <option>14</option>\n                    <option>16</option>\n                    <option>20</option>\n                </select>\n                <select id=\"footerFontWeight\">\n                    <option>Regular</option>\n                    <option>Bold</option>\n                    <option>Italic</option>\n                    <option>Bold Italic</option>\n                </select>\n                <label class=\"option underline\" for=\"footerUnderline\">\n                    <input type=\"checkbox\" id=\"footerUnderline\" /><u>U</u>\n                </label>\n            </div>\n            <div class=\"row\">\n                Value\n                <input id=\"footerValue\" />\n            </div>\n        </fieldset>\n    </div>\n    <div>\n        <button onclick=\"onBtExport()\" style=\"margin: 5px 0px; font-weight: bold\">Export to Excel</button>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}