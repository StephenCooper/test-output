{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".details > label {\n    margin-bottom: 10px;\n}\n.details > label:first-of-type {\n    margin-top: 10px;\n}\n.details > label:last-of-type {\n    margin-bottom: 0;\n}\n.option {\n    display: block;\n    margin: 5px 10px 5px 0;\n}\n.grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 16px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  columnDefs: [\n    { field: \"athlete\", minWidth: 200 },\n    { field: \"country\", minWidth: 200 },\n    { field: \"sport\", minWidth: 150 },\n    { field: \"gold\", hide: true },\n    { field: \"silver\", hide: true },\n    { field: \"bronze\", hide: true },\n    { field: \"total\", hide: true },\n  ],\n\n  excelStyles: [\n    {\n      id: \"coverHeading\",\n      font: {\n        size: 26,\n        bold: true,\n      },\n    },\n    {\n      id: \"coverText\",\n      font: {\n        size: 14,\n      },\n    },\n  ],\n};\n\nfunction onBtExport() {\n  const performExport = async () => {\n    const spreadsheets = [];\n\n    //set a filter condition ensuring no records are returned so only the header content is exported\n    await gridApi.setColumnFilterModel(\"athlete\", {\n      values: [],\n    });\n\n    gridApi.onFilterChanged();\n\n    //custom content for cover page\n    spreadsheets.push(\n      gridApi.getSheetDataForExcel({\n        prependContent: [\n          {\n            cells: [\n              {\n                styleId: \"coverHeading\",\n                mergeAcross: 3,\n                data: { value: \"AG Grid\", type: \"String\" },\n              },\n            ],\n          },\n          {\n            cells: [\n              {\n                styleId: \"coverHeading\",\n                mergeAcross: 3,\n                data: { value: \"\", type: \"String\" },\n              },\n            ],\n          },\n          {\n            cells: [\n              {\n                styleId: \"coverText\",\n                mergeAcross: 3,\n                data: {\n                  value:\n                    \"Data shown lists Olympic medal winners for years 2000-2012\",\n                  type: \"String\",\n                },\n              },\n            ],\n          },\n          {\n            cells: [\n              {\n                styleId: \"coverText\",\n                data: {\n                  value:\n                    \"This data includes a row for each participation record - athlete name, country, year, sport, count of gold, silver, bronze medals won during the sports event\",\n                  type: \"String\",\n                },\n              },\n            ],\n          },\n        ],\n        processHeaderCallback: () => \"\",\n        sheetName: \"cover\",\n      }),\n    );\n\n    //remove filter condition set above so all the grid data can be exported on a separate sheet\n    await gridApi.setColumnFilterModel(\"athlete\", null);\n    gridApi.onFilterChanged();\n\n    spreadsheets.push(gridApi.getSheetDataForExcel());\n\n    gridApi.exportMultipleSheetsAsExcel({\n      data: spreadsheets,\n      fileName: \"ag-grid.xlsx\",\n    });\n  };\n  performExport();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/small-olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) =>\n      gridApi.setGridOption(\n        \"rowData\",\n        data.filter((rec) => rec.country != null),\n      ),\n    );\n});\n","index.html":"<div class=\"container\">\n    <div class=\"columns\">\n        <div>\n            <button onclick=\"onBtExport()\" style=\"font-weight: bold; margin-bottom: 5px\">Export to Excel</button>\n        </div>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}