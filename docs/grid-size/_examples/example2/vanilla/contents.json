{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    return [\n        {\n            athlete: 'Michael Phelps',\n            age: 27,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 4,\n            silver: 2,\n            bronze: 0,\n            total: 6,\n        },\n        {\n            athlete: 'Natalie Coughlin',\n            age: 25,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 2,\n            bronze: 3,\n            total: 6,\n        },\n        {\n            athlete: 'Aleksey Nemov',\n            age: 24,\n            country: 'Russia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Gymnastics',\n            gold: 2,\n            silver: 1,\n            bronze: 3,\n            total: 6,\n        },\n        {\n            athlete: 'Alicia Coutts',\n            age: 24,\n            country: 'Australia',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 3,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Missy Franklin',\n            age: 17,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 4,\n            silver: 0,\n            bronze: 1,\n            total: 5,\n        },\n    ];\n}\n","main.js":"let minRowHeight = 25;\nlet currentRowHeight;\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 150 },\n    { field: \"age\", minWidth: 70, maxWidth: 90 },\n    { field: \"country\", minWidth: 130 },\n    { field: \"year\", minWidth: 70, maxWidth: 90 },\n    { field: \"date\", minWidth: 120 },\n    { field: \"sport\", minWidth: 120 },\n    { field: \"gold\", minWidth: 80 },\n    { field: \"silver\", minWidth: 80 },\n    { field: \"bronze\", minWidth: 80 },\n    { field: \"total\", minWidth: 80 },\n  ],\n\n  rowData: getData(),\n  autoSizeStrategy: {\n    type: \"fitGridWidth\",\n  },\n  onGridReady: (params) => {\n    minRowHeight = params.api.getSizesForCurrentTheme().rowHeight;\n    currentRowHeight = minRowHeight;\n  },\n  onFirstDataRendered: onFirstDataRendered,\n  onGridSizeChanged: onGridSizeChanged,\n  getRowHeight: (params) => {\n    return currentRowHeight;\n  },\n};\n\nfunction onFirstDataRendered(params) {\n  updateRowHeight(params);\n}\n\nfunction onGridSizeChanged(params) {\n  updateRowHeight(params);\n}\n\nconst updateRowHeight = (params) => {\n  // get the height of the grid body - this excludes the height of the headers\n  const bodyViewport = document.querySelector(\".ag-body-viewport\");\n  if (!bodyViewport) {\n    return;\n  }\n\n  const gridHeight = bodyViewport.clientHeight;\n  // get the rendered rows\n  const renderedRowCount = params.api.getDisplayedRowCount();\n\n  // if the rendered rows * min height is greater than available height, just just set the height\n  // to the min and let the scrollbar do its thing\n  if (renderedRowCount * minRowHeight >= gridHeight) {\n    if (currentRowHeight !== minRowHeight) {\n      currentRowHeight = minRowHeight;\n      params.api.resetRowHeights();\n    }\n  } else {\n    // set the height of the row to the grid height / number of rows available\n    currentRowHeight = Math.floor(gridHeight / renderedRowCount);\n    params.api.resetRowHeights();\n  }\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}