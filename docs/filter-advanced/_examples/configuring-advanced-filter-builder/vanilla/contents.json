{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    margin-bottom: 10px;\n}\n\n.parent {\n    display: none;\n}\n\n.filter-icon {\n    margin-left: 4px;\n    opacity: 0.6;\n}\n\n.filter-icon-disabled {\n    display: none;\n}\n","main.js":"const initialAdvancedFilterModel = {\n  filterType: \"join\",\n  type: \"AND\",\n  conditions: [\n    {\n      filterType: \"join\",\n      type: \"OR\",\n      conditions: [\n        {\n          filterType: \"number\",\n          colId: \"age\",\n          type: \"greaterThan\",\n          filter: 23,\n        },\n        {\n          filterType: \"text\",\n          colId: \"sport\",\n          type: \"endsWith\",\n          filter: \"ing\",\n        },\n      ],\n    },\n    {\n      filterType: \"text\",\n      colId: \"country\",\n      type: \"contains\",\n      filter: \"united\",\n    },\n  ],\n};\n\nconst advancedFilterBuilderParams = {\n  showMoveButtons: true,\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\" },\n    { field: \"country\" },\n    { field: \"sport\" },\n    { field: \"age\", minWidth: 100 },\n    { field: \"gold\", minWidth: 100 },\n    { field: \"silver\", minWidth: 100 },\n    { field: \"bronze\", minWidth: 100 },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 180,\n    filter: true,\n  },\n  enableAdvancedFilter: true,\n  popupParent: document.getElementById(\"wrapper\"),\n  initialState: {\n    filter: {\n      advancedFilterModel: initialAdvancedFilterModel,\n    },\n  },\n  advancedFilterBuilderParams: advancedFilterBuilderParams,\n  onAdvancedFilterBuilderVisibleChanged: onAdvancedFilterBuilderVisibleChanged,\n  onGridReady: (params) => {\n    // Could also be provided via grid option `advancedFilterParent`.\n    // Setting the parent removes the Advanced Filter input from the grid,\n    // allowing the Advanced Filter to be edited only via the Builder, launched via the API.\n    params.api.setGridOption(\n      \"advancedFilterParent\",\n      document.getElementById(\"advancedFilterParent\"),\n    );\n  },\n  onFilterChanged: onFilterChanged,\n};\n\nfunction onAdvancedFilterBuilderVisibleChanged(event) {\n  const eButton = document.getElementById(\"advancedFilterBuilderButton\");\n  if (event.visible) {\n    eButton.setAttribute(\"disabled\", \"\");\n  } else {\n    eButton.removeAttribute(\"disabled\");\n  }\n}\n\nfunction onFilterChanged() {\n  const advancedFilterApplied = !!gridApi.getAdvancedFilterModel();\n  document\n    .getElementById(\"advancedFilterIcon\")\n    .classList.toggle(\"filter-icon-disabled\", !advancedFilterApplied);\n}\n\nfunction showBuilder() {\n  gridApi.showAdvancedFilterBuilder();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"wrapper\" class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <div id=\"advancedFilterParent\" class=\"parent\"></div>\n        <button id=\"advancedFilterBuilderButton\" onclick=\"showBuilder()\">Advanced Filter Builder</button>\n        <i id=\"advancedFilterIcon\" class=\"fa fa-filter filter-icon\"></i>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}