{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: \"athlete\",\n      filterParams: {\n        caseSensitive: true,\n        filterOptions: [\"contains\"],\n      },\n    },\n    { field: \"country\", rowGroup: true, hide: true },\n    { field: \"sport\", hide: true },\n    { field: \"age\", minWidth: 100, filter: false },\n    {\n      headerName: \"Medals (+)\",\n      children: [\n        { field: \"gold\", minWidth: 100 },\n        { field: \"silver\", minWidth: 100 },\n        { field: \"bronze\", minWidth: 100 },\n      ],\n    },\n    {\n      headerName: \"Medals (-)\",\n      children: [\n        {\n          field: \"gold\",\n          headerValueGetter: (params) =>\n            params.location === \"advancedFilter\" ? \"Gold (-)\" : \"Gold\",\n          valueGetter: valueGetter,\n          cellDataType: \"number\",\n          minWidth: 100,\n        },\n        {\n          field: \"silver\",\n          headerValueGetter: (params) =>\n            params.location === \"advancedFilter\" ? \"Silver (-)\" : \"Silver\",\n          valueGetter: valueGetter,\n          cellDataType: \"number\",\n          minWidth: 100,\n        },\n        {\n          field: \"bronze\",\n          headerValueGetter: (params) =>\n            params.location === \"advancedFilter\" ? \"Bronze (-)\" : \"Bronze\",\n          valueGetter: valueGetter,\n          cellDataType: \"number\",\n          minWidth: 100,\n        },\n      ],\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 180,\n    filter: true,\n  },\n  groupDefaultExpanded: 1,\n  enableAdvancedFilter: true,\n};\n\nfunction valueGetter(params) {\n  return params.data ? params.data[params.colDef.field] * -1 : null;\n}\n\nlet includeHiddenColumns = false;\n\nfunction onIncludeHiddenColumnsToggled() {\n  includeHiddenColumns = !includeHiddenColumns;\n  gridApi.setGridOption(\n    \"includeHiddenColumnsInAdvancedFilter\",\n    includeHiddenColumns,\n  );\n  document.querySelector(\"#includeHiddenColumns\").textContent =\n    `${includeHiddenColumns ? \"Exclude\" : \"Include\"} Hidden Columns`;\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <button id=\"includeHiddenColumns\" onclick=\"onIncludeHiddenColumnsToggled()\">Include Hidden Columns</button>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}