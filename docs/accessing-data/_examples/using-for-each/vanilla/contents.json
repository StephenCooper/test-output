{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"country\", rowGroup: true, hide: true },\n    { field: \"athlete\", minWidth: 180 },\n    { field: \"age\" },\n    { field: \"year\" },\n    { field: \"date\", minWidth: 150 },\n    { field: \"sport\", minWidth: 150 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  groupDefaultExpanded: 1,\n};\n\nfunction onBtForEachNode() {\n  console.log(\"### api.forEachNode() ###\");\n  gridApi.forEachNode(printNode);\n}\n\nfunction onBtForEachNodeAfterFilter() {\n  console.log(\"### api.forEachNodeAfterFilter() ###\");\n  gridApi.forEachNodeAfterFilter(printNode);\n}\n\nfunction onBtForEachNodeAfterFilterAndSort() {\n  console.log(\"### api.forEachNodeAfterFilterAndSort() ###\");\n  gridApi.forEachNodeAfterFilterAndSort(printNode);\n}\n\nfunction onBtForEachLeafNode() {\n  console.log(\"### api.forEachLeafNode() ###\");\n  gridApi.forEachLeafNode(printNode);\n}\n\nconst printNode = (node, index) => {\n  if (node.group) {\n    console.log(index + \" -> group: \" + node.key);\n  } else {\n    console.log(\n      index + \" -> data: \" + node.data.country + \", \" + node.data.athlete,\n    );\n  }\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data.slice(0, 50)));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 1rem\">\n        <button onclick=\"onBtForEachNode()\">For-Each Node</button>\n        <button onclick=\"onBtForEachNodeAfterFilter()\">For-Each Node After Filter</button>\n        <button onclick=\"onBtForEachNodeAfterFilterAndSort()\">For-Each Node After Filter and Sort</button>\n        <button onclick=\"onBtForEachLeafNode()\">For-Each Leaf Node</button>\n    </div>\n\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}