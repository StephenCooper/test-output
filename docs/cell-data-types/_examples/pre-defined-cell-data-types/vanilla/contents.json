{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\" },\n    { field: \"age\", minWidth: 100 },\n    { field: \"hasGold\", minWidth: 100, headerName: \"Gold\" },\n    {\n      field: \"hasSilver\",\n      minWidth: 100,\n      headerName: \"Silver\",\n      cellRendererParams: { disabled: true },\n    },\n    { field: \"dateObject\", headerName: \"Date\" },\n    { field: \"date\", headerName: \"Date (String)\" },\n    { field: \"countryObject\", headerName: \"Country\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 180,\n    filter: true,\n    floatingFilter: true,\n    editable: true,\n    enableRowGroup: true,\n  },\n  dataTypeDefinitions: {\n    object: {\n      baseDataType: \"object\",\n      extendsDataType: \"object\",\n      valueParser: (params) => ({ name: params.newValue }),\n      valueFormatter: (params) =>\n        params.value == null ? \"\" : params.value.name,\n    },\n  },\n  rowGroupPanelShow: \"always\",\n  cellSelection: {\n    handle: { mode: \"fill\" },\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) =>\n      gridApi.setGridOption(\n        \"rowData\",\n        data.map((rowData) => {\n          const dateParts = rowData.date.split(\"/\");\n          return {\n            ...rowData,\n            date: `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`,\n            dateObject: new Date(\n              parseInt(dateParts[2]),\n              parseInt(dateParts[1]) - 1,\n              parseInt(dateParts[0]),\n            ),\n            countryObject: {\n              name: rowData.country,\n            },\n            hasGold: rowData.gold > 0,\n            hasSilver: rowData.silver > 0,\n          };\n        }),\n      ),\n    );\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}