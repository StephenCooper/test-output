{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const ALPHABET = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nfunction getColumnDefs() {\n  const columnDefs = [\n    { headerName: \"#\", width: 80, valueGetter: \"node.rowIndex\" },\n  ];\n\n  ALPHABET.forEach((letter) => {\n    columnDefs.push({\n      headerName: letter.toUpperCase(),\n      field: letter,\n      width: 150,\n    });\n  });\n  return columnDefs;\n}\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: getColumnDefs(),\n  rowModelType: \"infinite\",\n  rowSelection: { mode: \"multiRow\", headerCheckbox: false },\n  maxBlocksInCache: 2,\n  getRowId: (params) => {\n    return params.data.a;\n  },\n  datasource: getDataSource(100),\n  defaultColDef: {\n    sortable: false,\n  },\n};\n\nfunction getDataSource(count) {\n  const dataSource = {\n    rowCount: count,\n    getRows: (params) => {\n      const rowsThisPage = [];\n\n      for (\n        var rowIndex = params.startRow;\n        rowIndex < params.endRow;\n        rowIndex++\n      ) {\n        var record = {};\n        ALPHABET.forEach(function (letter, colIndex) {\n          const randomNumber = 17 + rowIndex + colIndex;\n          const cellKey = letter.toUpperCase() + (rowIndex + 1);\n          record[letter] = cellKey + \" = \" + randomNumber;\n        });\n        rowsThisPage.push(record);\n      }\n\n      // to mimic server call, we reply after a short delay\n      setTimeout(() => {\n        // no need to pass the second 'rowCount' parameter as we have already provided it\n        params.successCallback(rowsThisPage);\n      }, 100);\n    },\n  };\n  return dataSource;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}