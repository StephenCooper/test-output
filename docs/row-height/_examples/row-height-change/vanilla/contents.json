{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","data.js":"function getData() {\n    return [\n        {\n            athlete: 'Ryan Lochte',\n            age: 27,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 2,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Yekaterina Lobaznyuk',\n            age: 17,\n            country: 'Russia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Gymnastics',\n            gold: 0,\n            silver: 2,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Ryan Lochte',\n            age: 20,\n            country: 'United States',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 1,\n            bronze: 0,\n            total: 2,\n        },\n        {\n            athlete: 'Ericka Lorenz',\n            age: 23,\n            country: 'United States',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Waterpolo',\n            gold: 0,\n            silver: 0,\n            bronze: 1,\n            total: 1,\n        },\n        {\n            athlete: 'Ericka Lorenz',\n            age: 19,\n            country: 'United States',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Waterpolo',\n            gold: 0,\n            silver: 1,\n            bronze: 0,\n            total: 1,\n        },\n        {\n            athlete: 'Nikita Lobintsev',\n            age: 23,\n            country: 'Russia',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 0,\n            silver: 0,\n            bronze: 1,\n            total: 1,\n        },\n        {\n            athlete: 'Tatyana Logunova',\n            age: 24,\n            country: 'Russia',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Fencing',\n            gold: 1,\n            silver: 0,\n            bronze: 0,\n            total: 1,\n        },\n        {\n            athlete: 'Tatyana Logunova',\n            age: 20,\n            country: 'Russia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Fencing',\n            gold: 1,\n            silver: 0,\n            bronze: 0,\n            total: 1,\n        },\n        {\n            athlete: 'Nelson Loyola',\n            age: 32,\n            country: 'Cuba',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Fencing',\n            gold: 0,\n            silver: 0,\n            bronze: 1,\n            total: 1,\n        },\n    ];\n}\n","main.js":"let swimmingHeight;\nlet groupHeight;\nlet usaHeight;\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"country\", rowGroup: true },\n    { field: \"athlete\" },\n    { field: \"date\" },\n    { field: \"sport\" },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  rowData: getData(),\n  groupDefaultExpanded: 1,\n  getRowHeight: getRowHeight,\n};\n\nfunction getRowHeight(params) {\n  if (params.node.group && groupHeight != null) {\n    return groupHeight;\n  } else if (\n    params.data &&\n    params.data.country === \"United States\" &&\n    usaHeight != null\n  ) {\n    return usaHeight;\n  } else if (\n    params.data &&\n    params.data.sport === \"Swimming\" &&\n    swimmingHeight != null\n  ) {\n    return swimmingHeight;\n  }\n}\n\nfunction setSwimmingHeight(height) {\n  swimmingHeight = height;\n  gridApi.resetRowHeights();\n}\n\nfunction setGroupHeight(height) {\n  groupHeight = height;\n  gridApi.resetRowHeights();\n}\n\nfunction setUsaHeight(height) {\n  // this is used next time resetRowHeights is called\n  usaHeight = height;\n\n  gridApi.forEachNode(function (rowNode) {\n    if (rowNode.data && rowNode.data.country === \"United States\") {\n      rowNode.setRowHeight(height);\n    }\n  });\n  gridApi.onRowHeightChanged();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px; font-family: Verdana, Geneva, Tahoma, sans-serif; font-size: 13px\">\n        <div>\n            Top Level Groups:\n            <button onclick=\"setGroupHeight(42)\">42px</button>\n            <button onclick=\"setGroupHeight(75)\">75px</button>\n            <button onclick=\"setGroupHeight(125)\">125px</button>\n        </div>\n        <div style=\"margin-top: 5px\">\n            Swimming Leaf Rows:\n            <button onclick=\"setSwimmingHeight(42)\">42px</button>\n            <button onclick=\"setSwimmingHeight(75)\">75px</button>\n            <button onclick=\"setSwimmingHeight(125)\">125px</button>\n        </div>\n        <div style=\"margin-top: 5px\">\n            United States Leaf Rows:\n            <button onclick=\"setUsaHeight(42)\">42px</button>\n            <button onclick=\"setUsaHeight(75)\">75px</button>\n            <button onclick=\"setUsaHeight(125)\">125px</button>\n        </div>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}