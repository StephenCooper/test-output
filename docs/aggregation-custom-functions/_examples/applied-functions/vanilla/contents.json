{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: \"country\",\n      rowGroup: true,\n      hide: true,\n    },\n    {\n      headerName: \"Range in Total\",\n      field: \"total\",\n      aggFunc: (params) => {\n        const values = params.values;\n        return values.length > 0\n          ? Math.max(...values) - Math.min(...values)\n          : null;\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 150,\n  },\n  autoGroupColumnDef: {\n    field: \"athlete\",\n    minWidth: 220,\n  },\n  suppressAggFuncInHeader: true,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}