{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"country\", rowGroup: true, hide: true },\n    { field: \"year\", rowGroup: true, hide: true },\n    { field: \"total\", aggFunc: \"simpleRange\" },\n    { field: \"total\", aggFunc: \"range\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 150,\n  },\n  autoGroupColumnDef: {\n    minWidth: 220,\n  },\n  aggFuncs: {\n    simpleRange: (params) => {\n      const values = params.values;\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      return max - min;\n    },\n    range: (params) => {\n      const values = params.values;\n      if (params.rowNode.leafGroup) {\n        const max = Math.max(...values);\n        const min = Math.min(...values);\n        return {\n          max: max,\n          min: min,\n          value: max - min,\n        };\n      }\n\n      let max = values[0].max;\n      let min = values[0].min;\n      values.forEach((value) => {\n        max = Math.max(max, value.max);\n        min = Math.min(min, value.min);\n      });\n      return {\n        max: max,\n        min: min,\n        value: max - min,\n      };\n    },\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}