{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["companyLogoRenderer.js","companyRenderer.js","customButtonComponent.js","missionResultRenderer.js","priceRenderer.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.logo {\n    display: block;\n    width: 90px;\n    height: auto;\n    margin-right: 12px;\n    filter: brightness(1.1);\n}\n\n.imgSpan {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n}\n\n.imgSpanLogo {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n}\n\n.missionSpan {\n    display: flex;\n    justify-content: center;\n    height: 100%;\n    align-items: center;\n}\n\n.missionIcon {\n    width: auto;\n    height: auto;\n}\n\n.priceIcon {\n    display: block;\n    width: 15px;\n    height: auto;\n    max-height: 50%;\n    margin-right: 2px;\n}\n\n.logoCell {\n    background-color: #fff3;\n}\n","companyLogoRenderer.js":"\nclass CompanyLogoRenderer  {\n    eGui;\n\n    // Optional: Params for rendering. The same params that are passed to the cellRenderer function.\n    init(params) {\n        const companyLogo = document.createElement('img');\n        companyLogo.src = `https://www.ag-grid.com/example-assets/software-company-logos/${params.value.toLowerCase()}.svg`;\n        companyLogo.setAttribute('class', 'logo');\n\n        this.eGui = document.createElement('span');\n        this.eGui.setAttribute('class', 'imgSpanLogo');\n        this.eGui.appendChild(companyLogo);\n    }\n\n    // Required: Return the DOM element of the component, this is what the grid puts into the cell\n    getGui() {\n        return this.eGui;\n    }\n\n    // Required: Get the cell to refresh.\n    refresh(params) {\n        return false;\n    }\n}\n","companyRenderer.js":"\nfunction CompanyRenderer(params) {\n    const link = `<a href=\"${params.value}\" target=\"_blank\">${new URL(params.value).hostname}</a>`;\n    return link;\n}\n","customButtonComponent.js":"class CustomButtonComponent {\n    eGui;\n    eButton;\n    eventListener;\n\n    init() {\n        this.eGui = document.createElement('div');\n        const eButton = document.createElement('button');\n        eButton.className = 'btn-simple';\n        eButton.textContent = 'Launch!';\n        this.eventListener = () => alert('Software Launched');\n        eButton.addEventListener('click', this.eventListener);\n        this.eGui.appendChild(eButton);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh() {\n        return true;\n    }\n\n    destroy() {\n        if (this.eButton) {\n            this.eButton.removeEventListener('click', this.eventListener);\n        }\n    }\n}\n","missionResultRenderer.js":"\nclass MissionResultRenderer  {\n    eGui;\n\n    // Optional: Params for rendering. The same params that are passed to the cellRenderer function.\n    init(params) {\n        const icon = document.createElement('img');\n        icon.src = `https://www.ag-grid.com/example-assets/icons/${\n            params.value ? 'tick-in-circle' : 'cross-in-circle'\n        }.png`;\n        icon.setAttribute('class', 'missionIcon');\n\n        this.eGui = document.createElement('span');\n        this.eGui.setAttribute('class', 'missionSpan');\n        this.eGui.appendChild(icon);\n    }\n\n    // Required: Return the DOM element of the component, this is what the grid puts into the cell\n    getGui() {\n        return this.eGui;\n    }\n\n    // Required: Get the cell to refresh.\n    refresh(params) {\n        return false;\n    }\n}\n","priceRenderer.js":"\nfunction PriceRenderer(params) {\n    let priceMultiplier = 1;\n\n    if (params.value > 300_000_000_000) {\n        priceMultiplier = 5;\n    } else if (params.value > 20_000_000_000) {\n        priceMultiplier = 4;\n    } else if (params.value > 10_000_000_000) {\n        priceMultiplier = 3;\n    } else if (params.value > 5_000_000_000) {\n        priceMultiplier = 2;\n    }\n\n    const priceSpan = document.createElement('span');\n    priceSpan.setAttribute('class', 'imgSpan');\n    for (let i = 0; i < priceMultiplier; i++) {\n        const priceElement = document.createElement('img');\n        priceElement.src = `https://www.ag-grid.com/example-assets/icons/pound-coin-color-icon.svg`;\n        priceElement.setAttribute('class', 'priceIcon');\n        priceSpan.appendChild(priceElement);\n    }\n    return priceSpan;\n}\n","main.js":"// Grid API: Access to Grid API methods\nlet gridApi;\n\n// Row Data Interface\n\nconst gridOptions = {\n  defaultColDef: {\n    flex: 10,\n  },\n  // Data to be displayed\n  rowData: [],\n  // Columns to be displayed (Should match rowData properties)\n  columnDefs: [\n    {\n      field: \"company\",\n      flex: 6,\n    },\n    {\n      field: \"website\",\n      cellRenderer: CompanyRenderer,\n    },\n    {\n      headerName: \"Logo\",\n      field: \"company\",\n      cellRenderer: CompanyLogoRenderer,\n      cellClass: \"logoCell\",\n      minWidth: 100,\n    },\n    {\n      field: \"revenue\",\n      cellRenderer: PriceRenderer,\n    },\n    {\n      field: \"hardware\",\n      headerName: \"Hardware\",\n      cellRenderer: MissionResultRenderer,\n    },\n    {\n      field: \"actions\",\n      headerName: \"Actions\",\n      cellRenderer: CustomButtonComponent,\n    },\n  ],\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/small-company-data.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}