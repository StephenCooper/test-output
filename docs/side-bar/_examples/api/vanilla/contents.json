{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".api-panel {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n\n.api-column {\n    padding: 0px 5px 5px;\n    text-align: center;\n    width: 215px;\n    max-height: 200px;\n}\n\n.api-column button {\n    width: 100%;\n}\n\n.api-column button:first-child {\n    margin-top: 5px;\n}\n\n.api-panel button {\n    margin: 2px;\n}\n\n.grid-div {\n    height: 100%;\n}\n\n.parent-div {\n    height: 100%;\n    display: grid;\n    grid-template-rows: auto 1fr;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", filter: \"agTextColumnFilter\", minWidth: 200 },\n    { field: \"age\" },\n    { field: \"country\", minWidth: 200 },\n    { field: \"year\" },\n    { field: \"date\", minWidth: 160 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    // allow every column to be aggregated\n    enableValue: true,\n    // allow every column to be grouped\n    enableRowGroup: true,\n    // allow every column to be pivoted\n    enablePivot: true,\n    filter: true,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  sideBar: {\n    toolPanels: [\n      {\n        id: \"columns\",\n        labelDefault: \"Columns\",\n        labelKey: \"columns\",\n        iconKey: \"columns\",\n        toolPanel: \"agColumnsToolPanel\",\n      },\n      {\n        id: \"filters\",\n        labelDefault: \"Filters\",\n        labelKey: \"filters\",\n        iconKey: \"filter\",\n        toolPanel: \"agFiltersToolPanel\",\n      },\n    ],\n    defaultToolPanel: \"filters\",\n    hiddenByDefault: true,\n  },\n  onToolPanelVisibleChanged: (event) => {\n    console.log(\"toolPanelVisibleChanged\", event);\n  },\n  onToolPanelSizeChanged: (event) => {\n    console.log(\"toolPanelSizeChanged\", event);\n  },\n};\n\nfunction setSideBarVisible(value) {\n  gridApi.setSideBarVisible(value);\n}\n\nfunction isSideBarVisible() {\n  alert(gridApi.isSideBarVisible());\n}\n\nfunction openToolPanel(key) {\n  gridApi.openToolPanel(key);\n}\n\nfunction closeToolPanel() {\n  gridApi.closeToolPanel();\n}\n\nfunction getOpenedToolPanel() {\n  alert(gridApi.getOpenedToolPanel());\n}\n\nfunction setSideBar(def) {\n  gridApi.setGridOption(\"sideBar\", def);\n}\n\nfunction getSideBar() {\n  const sideBar = gridApi.getSideBar();\n  alert(JSON.stringify(sideBar));\n  console.log(sideBar);\n}\n\nfunction setSideBarPosition(position) {\n  gridApi.setSideBarPosition(position);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"parent-div\">\n    <div class=\"api-panel\">\n        <div class=\"api-column\">\n            Visibility\n            <button onclick=\"setSideBarVisible(true)\">setSideBarVisible(true)</button>\n            <button onclick=\"setSideBarVisible(false)\">setSideBarVisible(false)</button>\n            <button onclick=\"isSideBarVisible()\">isSideBarVisible()</button>\n        </div>\n        <div class=\"api-column\">\n            Open & Close\n            <button onclick=\"openToolPanel('columns')\">openToolPanel('columns')</button>\n            <button onclick=\"openToolPanel('filters')\">openToolPanel('filters')</button>\n            <button onclick=\"closeToolPanel()\">closeToolPanel()</button>\n            <button onclick=\"getOpenedToolPanel()\">getOpenedToolPanel()</button>\n        </div>\n        <div class=\"api-column\">\n            Reset\n            <button onclick=\"setSideBar(['filters','columns'])\">setSideBar(['filters','columns'])</button>\n            <button onclick=\"setSideBar('columns')\">setSideBar('columns')</button>\n            <button onclick=\"getSideBar()\">getSideBar()</button>\n        </div>\n        <div class=\"api-column\">\n            Position\n            <button onclick=\"setSideBarPosition('left')\">setSideBarPosition('left')</button>\n            <button onclick=\"setSideBarPosition('right')\">setSideBarPosition('right')</button>\n        </div>\n    </div>\n\n    <div id=\"myGrid\" class=\"grid-div\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}