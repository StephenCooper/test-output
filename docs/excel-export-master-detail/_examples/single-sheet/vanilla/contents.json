{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n    flex-grow: 1;\n}\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n","main.js":"const getRows = (params) => {\n  const rows = [\n    {\n      outlineLevel: 1,\n      cells: [\n        cell(\"\"),\n        cell(\"Call Id\", \"header\"),\n        cell(\"Direction\", \"header\"),\n        cell(\"Number\", \"header\"),\n        cell(\"Duration\", \"header\"),\n        cell(\"Switch Code\", \"header\"),\n      ],\n    },\n  ].concat(\n    ...params.node.data.callRecords.map((record) => [\n      {\n        outlineLevel: 1,\n        cells: [\n          cell(\"\"),\n          cell(record.callId, \"body\"),\n          cell(record.direction, \"body\"),\n          cell(record.number, \"body\"),\n          cell(record.duration, \"body\"),\n          cell(record.switchCode, \"body\"),\n        ],\n      },\n    ]),\n  );\n  return rows;\n};\n\nconst defaultCsvExportParams = {\n  getCustomContentBelowRow: (params) => {\n    const rows = getRows(params);\n\n    return rows.map((row) => row.cells);\n  },\n};\nconst defaultExcelExportParams = {\n  getCustomContentBelowRow: (params) => getRows(params),\n  columnWidth: 120,\n  fileName: \"ag-grid.xlsx\",\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    // group cell renderer needed for expand / collapse icons\n    { field: \"name\", cellRenderer: \"agGroupCellRenderer\" },\n    { field: \"account\" },\n    { field: \"calls\" },\n    { field: \"minutes\", valueFormatter: \"x.toLocaleString() + 'm'\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  masterDetail: true,\n  detailCellRendererParams: {\n    detailGridOptions: {\n      columnDefs: [\n        { field: \"callId\" },\n        { field: \"direction\" },\n        { field: \"number\", minWidth: 150 },\n        { field: \"duration\", valueFormatter: \"x.toLocaleString() + 's'\" },\n        { field: \"switchCode\", minWidth: 150 },\n      ],\n      defaultColDef: {\n        flex: 1,\n      },\n    },\n    getDetailRowData: (params) => {\n      params.successCallback(params.data.callRecords);\n    },\n  },\n  defaultCsvExportParams: defaultCsvExportParams,\n  defaultExcelExportParams: defaultExcelExportParams,\n  excelStyles: [\n    {\n      id: \"header\",\n      interior: {\n        color: \"#aaaaaa\",\n        pattern: \"Solid\",\n      },\n    },\n    {\n      id: \"body\",\n      interior: {\n        color: \"#dddddd\",\n        pattern: \"Solid\",\n      },\n    },\n  ],\n};\n\nfunction cell(text, styleId) {\n  return {\n    styleId: styleId,\n    data: {\n      type: /^\\d+$/.test(text) ? \"Number\" : \"String\",\n      value: String(text),\n    },\n  };\n}\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/master-detail-data.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div class=\"container\">\n    <div>\n        <button onclick=\"onBtExport()\" style=\"margin-bottom: 5px; font-weight: bold\">Export to Excel</button>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface ICallRecord {\n    name: string;\n    callId: number;\n    duration: number;\n    switchCode: string;\n    direction: string;\n    number: string;\n}\n\nexport interface IAccount {\n    name: string;\n    account: number;\n    calls: number;\n    minutes: number;\n    callRecords: ICallRecord[];\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}