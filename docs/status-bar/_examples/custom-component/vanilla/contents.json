{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["clickableStatusBarComponent.js","countStatusBarComponent.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".container {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin: 5px;\n    background-color: lightgrey;\n    padding: 3px 5px 3px 5px;\n    border-radius: 5px;\n}\n\n.component {\n    margin-left: 5px;\n    padding-top: 0;\n    padding-bottom: 0;\n}\n\n.status-bar-input {\n    height: initial !important;\n}\n","clickableStatusBarComponent.js":"\nclass ClickableStatusBarComponent  {\n    params;\n    eGui;\n    eButton;\n    buttonListener;\n\n    init(params) {\n        this.params = params;\n\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-status-name-value';\n\n        const label = document.createElement('span');\n        label.textContent = 'Status Bar Component ';\n        this.eGui.appendChild(label);\n\n        this.eButton = document.createElement('button');\n\n        this.buttonListener = this.onButtonClicked.bind(this);\n        this.eButton.addEventListener('click', this.buttonListener);\n        this.eButton.textContent = 'Click Me';\n\n        this.eGui.appendChild(this.eButton);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    destroy() {\n        this.eButton.removeEventListener('click', this.buttonListener);\n    }\n\n    onButtonClicked() {\n        alert('Selected Row Count: ' + this.params.api.getSelectedRows().length);\n    }\n}\n","countStatusBarComponent.js":"\nclass CountStatusBarComponent  {\n    params;\n    eGui;\n    eCount;\n\n    init(params) {\n        this.params = params;\n\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-status-name-value';\n\n        const label = document.createElement('span');\n        label.textContent = 'Row Count Component: ';\n        this.eGui.appendChild(label);\n\n        this.eCount = document.createElement('span');\n        this.eCount.className = 'ag-status-name-value-value';\n\n        this.eGui.appendChild(this.eCount);\n\n        params.api.addEventListener('rowDataUpdated', this.onRowDataUpdated.bind(this));\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    destroy() {\n        if (!this.params.api.isDestroyed()) {\n            this.params.api.removeEventListener('rowDataUpdated', this.onRowDataUpdated);\n        }\n    }\n\n    onRowDataUpdated() {\n        this.eCount.textContent = this.params.api.getDisplayedRowCount() + '';\n    }\n}\n","main.js":"const columnDefs = [\n  {\n    field: \"row\",\n  },\n  {\n    field: \"name\",\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  },\n  columnDefs: columnDefs,\n  rowData: [\n    { row: \"Row 1\", name: \"Michael Phelps\" },\n    { row: \"Row 2\", name: \"Natalie Coughlin\" },\n    { row: \"Row 3\", name: \"Aleksey Nemov\" },\n    { row: \"Row 4\", name: \"Alicia Coutts\" },\n    { row: \"Row 5\", name: \"Missy Franklin\" },\n    { row: \"Row 6\", name: \"Ryan Lochte\" },\n    { row: \"Row 7\", name: \"Allison Schmitt\" },\n    { row: \"Row 8\", name: \"Natalie Coughlin\" },\n    { row: \"Row 9\", name: \"Ian Thorpe\" },\n    { row: \"Row 10\", name: \"Bob Mill\" },\n    { row: \"Row 11\", name: \"Willy Walsh\" },\n    { row: \"Row 12\", name: \"Sarah McCoy\" },\n    { row: \"Row 13\", name: \"Jane Jack\" },\n    { row: \"Row 14\", name: \"Tina Wills\" },\n  ],\n  rowSelection: {\n    mode: \"multiRow\",\n  },\n  statusBar: {\n    statusPanels: [\n      {\n        statusPanel: CountStatusBarComponent,\n      },\n      {\n        statusPanel: ClickableStatusBarComponent,\n      },\n      {\n        statusPanel: \"agAggregationComponent\",\n        statusPanelParams: {\n          aggFuncs: [\"count\", \"sum\"],\n        },\n      },\n    ],\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}