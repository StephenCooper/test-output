{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["detailCellRenderer.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.full-width-panel {\n    position: relative;\n    height: 100%;\n    width: 100%;\n    padding: 5px;\n}\n\n.call-record-cell {\n    text-align: right;\n}\n\n.full-width-detail {\n    padding-top: 4px;\n}\n\n.full-width-details {\n    float: left;\n    padding: 5px;\n    margin: 5px;\n    width: 150px;\n}\n\n.full-width-grid {\n    margin-left: 125px;\n    padding: 25px;\n    display: block;\n    height: calc(100% - 50px);\n}\n\n.full-width-grid-toolbar {\n    top: 4px;\n    left: 30px;\n    margin-left: 150px;\n    display: block;\n    position: absolute;\n}\n\n.full-width-phone-icon {\n    padding-right: 10px;\n}\n\n.full-width-search {\n    margin-left: 10px;\n}\n","detailCellRenderer.js":"class DetailCellRenderer {\n    eGui;\n    params;\n    detailGridApi;\n\n    init(params) {\n        this.params = params;\n\n        // trick to convert string of HTML into DOM object\n        var eTemp = document.createElement('div');\n        eTemp.innerHTML = this.getTemplate();\n        this.eGui = eTemp.firstElementChild;\n\n        this.setupDetailGrid();\n    }\n\n    setupDetailGrid() {\n        var eDetailGrid = this.eGui.querySelector('.full-width-grid');\n        var detailGridOptions = {\n            columnDefs: [\n                { field: 'callId' },\n                { field: 'direction' },\n                { field: 'number' },\n                { field: 'duration', valueFormatter: \"x.toLocaleString() + 's'\" },\n                { field: 'switchCode' },\n            ],\n            defaultColDef: {\n                flex: 1,\n                minWidth: 120,\n            },\n            rowData: this.params.data.callRecords,\n        };\n\n        this.detailGridApi = agGrid.createGrid(eDetailGrid, detailGridOptions);\n\n        var masterGridApi = this.params.api;\n        var rowId = this.params.node.id;\n\n        var gridInfo = {\n            id: rowId,\n            api: this.detailGridApi,\n        };\n\n        console.log('adding detail grid info with id: ', rowId);\n        masterGridApi.addDetailGridInfo(rowId, gridInfo);\n    }\n\n    getTemplate() {\n        var data = this.params.data;\n        var template =\n            '<div role=\"gridcell\" class=\"full-width-panel\">' +\n            '  <div class=\"full-width-details\">' +\n            '    <div class=\"full-width-detail\"><b>Name: </b>' +\n            data.name +\n            '</div>' +\n            '    <div class=\"full-width-detail\"><b>Account: </b>' +\n            data.account +\n            '</div>' +\n            '  </div>' +\n            `  <div class=\"full-width-grid\"></div>` +\n            '</div>';\n\n        return template;\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        return false;\n    }\n\n    destroy() {\n        var rowId = this.params.node.id;\n        console.log('removing Grid Info with id: ' + rowId);\n        var masterGridApi = this.params.api;\n        masterGridApi.removeDetailGridInfo(rowId);\n\n        console.log('destroying detail grid');\n        this.detailGridApi.destroy();\n    }\n}\n","main.js":"let gridApi;\nconst gridOptions = {\n  columnDefs: [\n    // group cell renderer needed for expand / collapse icons\n    { field: \"name\", cellRenderer: \"agGroupCellRenderer\" },\n    { field: \"account\" },\n    { field: \"calls\" },\n    { field: \"minutes\", valueFormatter: \"x.toLocaleString() + 'm'\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  masterDetail: true,\n  detailRowHeight: 310,\n  detailCellRenderer: DetailCellRenderer,\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction expandCollapseAll() {\n  gridApi.forEachNode(function (node) {\n    node.expanded = !!window.collapsed;\n  });\n\n  window.collapsed = !window.collapsed;\n  gridApi.onGroupExpandedOrCollapsed();\n}\n\nfunction onFirstDataRendered(params) {\n  // arbitrarily expand a row for presentational purposes\n  setTimeout(() => {\n    params.api.getDisplayedRowAtIndex(1).setExpanded(true);\n  }, 0);\n}\n\nfunction printDetailGridInfo() {\n  console.log(\"Currently registered detail grid's: \");\n  gridApi.forEachDetailGridInfo(function (detailGridInfo) {\n    console.log(detailGridInfo);\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/master-detail-data.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px\">\n        <button onclick=\"printDetailGridInfo()\">Print Detail Grid Info</button>\n        <button onclick=\"expandCollapseAll()\">Toggle Expand / Collapse</button>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface ICallRecord {\n    name: string;\n    callId: number;\n    duration: number;\n    switchCode: string;\n    direction: string;\n    number: string;\n}\n\nexport interface IAccount {\n    name: string;\n    account: number;\n    calls: number;\n    minutes: number;\n    callRecords: ICallRecord[];\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}