{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"data.ts":"export function getData(): any[] {\n    return [\n        {\n            symbol: 'A',\n            name: 'Agilent Technologies Inc. Common Stock',\n            lastPrice: '179.28',\n            marketCap: 54272119919,\n            volume: 971760,\n            sector: 'Capital Goods',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    33.93, -80.12, -42.44, -89.49, -8.98, 34.8, -55.92, -31.91, 84.37, 3.23, -82.01, 3.17, -1.84, 78.56,\n                    -44.85, -20.95, -56.8, -70.3, -29.7, -7.13,\n                ],\n            },\n        },\n        {\n            symbol: 'AAL',\n            name: 'American Airlines Group Inc. Common Stock',\n            lastPrice: '19.37',\n            marketCap: 12541258186,\n            volume: 20309670,\n            sector: 'Transportation',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    -37.3, 16.92, -19.8, -62.8, -25.91, -23.02, -8.53, -38.4, -93.91, -26.14, 4.11, 79.6, 42.44, 8.54,\n                    92.72, 20.75, -36.54, 10.62, 80.15, 69.32,\n                ],\n            },\n        },\n        {\n            symbol: 'AAP',\n            name: 'Advance Auto Parts Inc Advance Auto Parts Inc W/I',\n            lastPrice: '199.44',\n            marketCap: 12564867785,\n            volume: 699427,\n            sector: 'Consumer Services',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    -86.27, -14.97, -67.87, -41.28, 79.57, -96.77, 54.63, 44.47, 92.09, 62.25, 3.47, -71.6, -64.1,\n                    -58.08, -11.5, 43.01, 18.23, 33.11, -79.95, -47.22,\n                ],\n            },\n        },\n        {\n            symbol: 'AAPL',\n            name: 'Apple Inc. Common Stock',\n            lastPrice: '154.30',\n            marketCap: 2675150000000,\n            volume: 57807909,\n            sector: 'Technology',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    -40.6, -48.07, -35.32, -92.55, -84.49, -67.75, 23.72, -8.39, -46.75, -91.68, -38.42, -17.42, -90.4,\n                    92.86, -36, -82.44, -41.09, -76.65, -23.33, -47.76,\n                ],\n            },\n        },\n        {\n            symbol: 'ABB',\n            name: 'ABB Ltd Common Stock',\n            lastPrice: '37.67',\n            marketCap: 75566020000,\n            volume: 901811,\n            sector: 'Consumer Durables',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    27.92, 78.59, -85.38, 96.6, -76, 72.19, -75.34, 13.81, -76.99, 89.68, 13, 32.89, 11.57, 81.91,\n                    -46.1, 35.34, -96.12, -12.15, -60.36, 30.58,\n                ],\n            },\n        },\n        {\n            symbol: 'ABBV',\n            name: 'AbbVie Inc. Common Stock',\n            lastPrice: '111.62',\n            marketCap: 197252000000,\n            volume: 5364090,\n            sector: 'Health Care',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    84.02, 74.34, 65.46, 32.27, 58.87, 4.78, 30.44, 9.11, 35.96, 4.43, 50.69, 51.93, 22.52, 40.04,\n                    69.03, 14.11, 14.04, 1.98, 62.13, 80.15,\n                ],\n            },\n        },\n        {\n            symbol: 'ABC',\n            name: 'AmerisourceBergen Corporation Common Stock',\n            lastPrice: '125.14',\n            marketCap: 26002479696,\n            volume: 549618,\n            sector: 'Health Care',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    50.73, 24.81, -84, 19.03, 69.72, 88.25, 70.3, 86.63, 83.77, 21.81, 35.01, 38.29, 93.69, 48.42,\n                    24.27, 42.99, 21.94, 62.64, 97.49, 10.03,\n                ],\n            },\n        },\n        {\n            symbol: 'ABEV',\n            name: 'Ambev S.A. American Depositary Shares (Each representing 1 Common Share)',\n            lastPrice: '3.14',\n            marketCap: 49414685958,\n            volume: 27226664,\n            sector: 'Consumer Non-Durables',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    -22.48, -54.87, -76.5, -79.68, -82.13, -1.2, -34.04, -92.44, -45.51, -76.13, -3.33, -86.27, -34.81,\n                    -6.82, -88.12, -19.01, -29.05, -33.52, -72.66, -13.08,\n                ],\n            },\n        },\n        {\n            symbol: 'ABMD',\n            name: 'ABIOMED Inc. Common Stock',\n            lastPrice: '372.69',\n            marketCap: 16912759037,\n            volume: 137763,\n            sector: 'Health Care',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    -83.29, 52.28, 61.05, 14.37, 48.23, 17.6, 34.12, 7.74, 60.32, -28.43, 71.11, 56.19, 1.24, 16.26,\n                    44.49, 37.39, 42.82, 25.26, 79.4, 83.61,\n                ],\n            },\n        },\n        {\n            symbol: 'ABNB',\n            name: 'Airbnb Inc. Class A Common Stock',\n            lastPrice: '158.00',\n            marketCap: 94231043106,\n            volume: 4456806,\n            sector: 'Capital Goods',\n            rateOfChange: {\n                x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20],\n                y: [\n                    19.76, 82.41, 29.97, 92.73, 75.48, 86.8, 8.96, 37.67, 68.04, 18.43, 41.35, 44.72, 52.99, 96.18,\n                    91.32, 79.07, 51.61, 32.11, 52.84, 1.64,\n                ],\n            },\n        },\n    ];\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","app.component.ts":"import { Component, ViewChild } from \"@angular/core\";\nimport { AgGridAngular } from \"ag-grid-angular\";\nimport {\n  AgChartsCommunityModule,\n  AgSparklineOptions,\n} from \"ag-charts-community\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  ValidationModule,\n  ValueGetterParams,\n  createGrid,\n} from \"ag-grid-community\";\nimport { SparklinesModule } from \"ag-grid-enterprise\";\nimport { getData } from \"./data\";\nModuleRegistry.registerModules([\n  ClientSideRowModelModule,\n  SparklinesModule.with(AgChartsCommunityModule),\n  ValidationModule /* Development Only */,\n]);\n\n@Component({\n  selector: \"my-app\",\n  standalone: true,\n  imports: [AgGridAngular],\n  template: `<ag-grid-angular\n    style=\"width: 100%; height: 100%;\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [rowData]=\"rowData\"\n    [rowHeight]=\"rowHeight\"\n  /> `,\n})\nexport class AppComponent {\n  columnDefs: ColDef[] = [\n    { field: \"symbol\", maxWidth: 110 },\n    { field: \"name\", minWidth: 250 },\n    {\n      headerName: \"Rate of Change\",\n      cellRenderer: \"agSparklineCellRenderer\",\n      cellRendererParams: {\n        sparklineOptions: {\n          type: \"area\",\n        } as AgSparklineOptions,\n      },\n      valueGetter: (params: ValueGetterParams) => {\n        const formattedData: any = [];\n        const rateOfChange = params.data.rateOfChange;\n        const { x, y } = rateOfChange;\n        x.map((xVal: any, i: number) => formattedData.push([xVal, y[i]]));\n        return formattedData;\n      },\n    },\n    { field: \"volume\", maxWidth: 140 },\n  ];\n  defaultColDef: ColDef = {\n    flex: 1,\n    minWidth: 100,\n  };\n  rowData: any[] | null = getData();\n  rowHeight = 50;\n\n  /** DARK INTEGRATED START **/\n  @ViewChild(AgGridAngular)\n  set agGrid(grid) {\n    const isInitialModeDark =\n      document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n    // update chart themes based on dark mode status\n    const updateChartThemes = (isDark: boolean): void => {\n      const themes: string[] = [\n        \"ag-default\",\n        \"ag-material\",\n        \"ag-sheets\",\n        \"ag-polychroma\",\n        \"ag-vivid\",\n      ];\n      const currentThemes = grid?.api.getGridOption(\"chartThemes\");\n      const customTheme =\n        currentThemes &&\n        currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n      let modifiedThemes: string[] = customTheme\n        ? isDark\n          ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n          : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n        : Array.from(\n            new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n          );\n\n      // updating the 'chartThemes' grid option will cause the chart to reactively update!\n      grid?.api.setGridOption(\"chartThemes\", modifiedThemes);\n    };\n\n    // update chart themes when example first loads\n    let initialSet = false;\n    const maxTries = 5;\n    let tries = 0;\n    const trySetInitial = (delay) => {\n      if (grid?.api) {\n        initialSet = true;\n        updateChartThemes(isInitialModeDark);\n      } else {\n        if (tries < maxTries) {\n          setTimeout(() => trySetInitial(), 250);\n          tries++;\n        }\n      }\n    };\n    trySetInitial(0);\n\n    interface ColorSchemeChangeEventDetail {\n      darkMode: boolean;\n    }\n\n    // event handler for color scheme changes\n    const handleColorSchemeChange = (\n      event: CustomEvent<ColorSchemeChangeEventDetail>,\n    ): void => {\n      const { darkMode } = event.detail;\n      updateChartThemes(darkMode);\n    };\n\n    // listen for user-triggered dark mode changes (not removing listener is fine here!)\n    document.addEventListener(\n      \"color-scheme-change\",\n      handleColorSchemeChange as EventListener,\n    );\n  } /** DARK INTEGRATED END **/\n}\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^19';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/core/primitives/event-dispatch':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/event-dispatch.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"@angular/core":"^19","@angular/common":"^19","@angular/forms":"^19","@angular/platform-browser":"^19","ag-grid-angular":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}