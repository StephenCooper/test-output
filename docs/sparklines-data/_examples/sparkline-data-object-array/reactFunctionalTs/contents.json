{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"index.tsx","mainFileName":"index.tsx","styleFiles":[],"files":{"data.tsx":"export function getStockData() {\n    return [\n        {\n            symbol: 'A',\n            name: 'Agilent Technologies Inc. Common Stock',\n            lastPrice: '179.28',\n            marketCap: 54272119919,\n            volume: 971760,\n            sector: 'Capital Goods',\n            rateOfChange: [\n                { xVal: 1, yVal: -37.3 },\n                { xVal: 2, yVal: 16.92 },\n                { xVal: 3, yVal: -19.8 },\n                { xVal: 4, yVal: -62.8 },\n                { xVal: 5, yVal: -25.91 },\n                { xVal: 6, yVal: -23.02 },\n                { xVal: 7, yVal: -8.53 },\n                { xVal: 8, yVal: -38.4 },\n                { xVal: 9, yVal: -93.91 },\n                { xVal: 10, yVal: -26.14 },\n                { xVal: 11, yVal: 4.11 },\n                { xVal: 12, yVal: 79.6 },\n                { xVal: 13, yVal: 42.44 },\n                { xVal: 14, yVal: 8.54 },\n                { xVal: 15, yVal: 92.72 },\n                { xVal: 16, yVal: 20.75 },\n                { xVal: 17, yVal: -36.54 },\n                { xVal: 18, yVal: 10.62 },\n                { xVal: 19, yVal: 80.15 },\n                { xVal: 20, yVal: 69.32 },\n            ],\n        },\n        {\n            symbol: 'AAL',\n            name: 'American Airlines Group Inc. Common Stock',\n            lastPrice: '19.37',\n            marketCap: 12541258186,\n            volume: 20309670,\n            sector: 'Transportation',\n            rateOfChange: [\n                { xVal: 1, yVal: 33.93 },\n                { xVal: 2, yVal: -80.12 },\n                { xVal: 3, yVal: -42.44 },\n                { xVal: 4, yVal: -89.49 },\n                { xVal: 5, yVal: -8.98 },\n                { xVal: 6, yVal: 34.8 },\n                { xVal: 7, yVal: -55.92 },\n                { xVal: 8, yVal: -31.91 },\n                { xVal: 9, yVal: 84.37 },\n                { xVal: 10, yVal: 3.23 },\n                { xVal: 11, yVal: -82.01 },\n                { xVal: 12, yVal: 3.17 },\n                { xVal: 13, yVal: -1.84 },\n                { xVal: 14, yVal: 78.56 },\n                { xVal: 15, yVal: -44.85 },\n                { xVal: 16, yVal: -20.95 },\n                { xVal: 17, yVal: -56.8 },\n                { xVal: 18, yVal: -70.3 },\n                { xVal: 19, yVal: -29.7 },\n                { xVal: 20, yVal: -7.13 },\n            ],\n        },\n        {\n            symbol: 'AAP',\n            name: 'Advance Auto Parts Inc Advance Auto Parts Inc W/I',\n            lastPrice: '199.44',\n            marketCap: 12564867785,\n            volume: 699427,\n            sector: 'Consumer Services',\n            rateOfChange: [\n                { xVal: 1, yVal: -86.27 },\n                { xVal: 2, yVal: -14.97 },\n                { xVal: 3, yVal: -67.87 },\n                { xVal: 4, yVal: -41.28 },\n                { xVal: 5, yVal: 79.57 },\n                { xVal: 6, yVal: -96.77 },\n                { xVal: 7, yVal: 54.63 },\n                { xVal: 8, yVal: 44.47 },\n                { xVal: 9, yVal: 92.09 },\n                { xVal: 10, yVal: 62.25 },\n                { xVal: 11, yVal: 3.47 },\n                { xVal: 12, yVal: -71.6 },\n                { xVal: 13, yVal: -64.1 },\n                { xVal: 14, yVal: -58.08 },\n                { xVal: 15, yVal: -11.5 },\n                { xVal: 16, yVal: 43.01 },\n                { xVal: 17, yVal: 18.23 },\n                { xVal: 18, yVal: 33.11 },\n                { xVal: 19, yVal: -79.95 },\n                { xVal: 20, yVal: -47.22 },\n            ],\n        },\n        {\n            symbol: 'AAPL',\n            name: 'Apple Inc. Common Stock',\n            lastPrice: '154.30',\n            marketCap: 2675150000000,\n            volume: 57807909,\n            sector: 'Technology',\n            rateOfChange: [\n                { xVal: 1, yVal: -40.6 },\n                { xVal: 2, yVal: -48.07 },\n                { xVal: 3, yVal: -35.32 },\n                { xVal: 4, yVal: -92.55 },\n                { xVal: 5, yVal: -84.49 },\n                { xVal: 6, yVal: -67.75 },\n                { xVal: 7, yVal: 23.72 },\n                { xVal: 8, yVal: -8.39 },\n                { xVal: 9, yVal: -46.75 },\n                { xVal: 10, yVal: -91.68 },\n                { xVal: 11, yVal: -38.42 },\n                { xVal: 12, yVal: -17.42 },\n                { xVal: 13, yVal: -90.4 },\n                { xVal: 14, yVal: 92.86 },\n                { xVal: 15, yVal: -36 },\n                { xVal: 16, yVal: -82.44 },\n                { xVal: 17, yVal: -41.09 },\n                { xVal: 18, yVal: -76.65 },\n                { xVal: 19, yVal: -23.33 },\n                { xVal: 20, yVal: -47.76 },\n            ],\n        },\n        {\n            symbol: 'ABB',\n            name: 'ABB Ltd Common Stock',\n            lastPrice: '37.67',\n            marketCap: 75566020000,\n            volume: 901811,\n            sector: 'Consumer Durables',\n            rateOfChange: [\n                { xVal: 1, yVal: 27.92 },\n                { xVal: 2, yVal: 78.59 },\n                { xVal: 3, yVal: -85.38 },\n                { xVal: 4, yVal: 96.6 },\n                { xVal: 5, yVal: -76 },\n                { xVal: 6, yVal: 72.19 },\n                { xVal: 7, yVal: -75.34 },\n                { xVal: 8, yVal: 13.81 },\n                { xVal: 9, yVal: -76.99 },\n                { xVal: 10, yVal: 89.68 },\n                { xVal: 11, yVal: 13 },\n                { xVal: 12, yVal: 32.89 },\n                { xVal: 13, yVal: 11.57 },\n                { xVal: 14, yVal: 81.91 },\n                { xVal: 15, yVal: -46.1 },\n                { xVal: 16, yVal: 35.34 },\n                { xVal: 17, yVal: -96.12 },\n                { xVal: 18, yVal: -12.15 },\n                { xVal: 19, yVal: -60.36 },\n                { xVal: 20, yVal: 30.58 },\n            ],\n        },\n        {\n            symbol: 'ABBV',\n            name: 'AbbVie Inc. Common Stock',\n            lastPrice: '111.62',\n            marketCap: 197252000000,\n            volume: 5364090,\n            sector: 'Health Care',\n            rateOfChange: [\n                { xVal: 1, yVal: 84.02 },\n                { xVal: 2, yVal: 74.34 },\n                { xVal: 3, yVal: 65.46 },\n                { xVal: 4, yVal: 32.27 },\n                { xVal: 5, yVal: 58.87 },\n                { xVal: 6, yVal: 4.78 },\n                { xVal: 7, yVal: 30.44 },\n                { xVal: 8, yVal: 9.11 },\n                { xVal: 9, yVal: 35.96 },\n                { xVal: 10, yVal: 4.43 },\n                { xVal: 11, yVal: 50.69 },\n                { xVal: 12, yVal: 51.93 },\n                { xVal: 13, yVal: 22.52 },\n                { xVal: 14, yVal: 40.04 },\n                { xVal: 15, yVal: 69.03 },\n                { xVal: 16, yVal: 14.11 },\n                { xVal: 17, yVal: 14.04 },\n                { xVal: 18, yVal: 1.98 },\n                { xVal: 19, yVal: 62.13 },\n                { xVal: 20, yVal: 80.15 },\n            ],\n        },\n        {\n            symbol: 'ABC',\n            name: 'AmerisourceBergen Corporation Common Stock',\n            lastPrice: '125.14',\n            marketCap: 26002479696,\n            volume: 549618,\n            sector: 'Health Care',\n            rateOfChange: [\n                { xVal: 1, yVal: 50.73 },\n                { xVal: 2, yVal: 24.81 },\n                { xVal: 3, yVal: -84 },\n                { xVal: 4, yVal: 19.03 },\n                { xVal: 5, yVal: 69.72 },\n                { xVal: 6, yVal: 88.25 },\n                { xVal: 7, yVal: 70.3 },\n                { xVal: 8, yVal: 86.63 },\n                { xVal: 9, yVal: 83.77 },\n                { xVal: 10, yVal: 21.81 },\n                { xVal: 11, yVal: 35.01 },\n                { xVal: 12, yVal: 38.29 },\n                { xVal: 13, yVal: 93.69 },\n                { xVal: 14, yVal: 48.42 },\n                { xVal: 15, yVal: 24.27 },\n                { xVal: 16, yVal: 42.99 },\n                { xVal: 17, yVal: 21.94 },\n                { xVal: 18, yVal: 62.64 },\n                { xVal: 19, yVal: 97.49 },\n                { xVal: 20, yVal: 10.03 },\n            ],\n        },\n        {\n            symbol: 'ABEV',\n            name: 'Ambev S.A. American Depositary Shares (Each representing 1 Common Share)',\n            lastPrice: '3.14',\n            marketCap: 49414685958,\n            volume: 27226664,\n            sector: 'Consumer Non-Durables',\n            rateOfChange: [\n                { xVal: 1, yVal: -22.48 },\n                { xVal: 2, yVal: -54.87 },\n                { xVal: 3, yVal: -76.5 },\n                { xVal: 4, yVal: -79.68 },\n                { xVal: 5, yVal: -82.13 },\n                { xVal: 6, yVal: -1.2 },\n                { xVal: 7, yVal: -34.04 },\n                { xVal: 8, yVal: -92.44 },\n                { xVal: 9, yVal: -45.51 },\n                { xVal: 10, yVal: -76.13 },\n                { xVal: 11, yVal: -3.33 },\n                { xVal: 12, yVal: -86.27 },\n                { xVal: 13, yVal: -34.81 },\n                { xVal: 14, yVal: -6.82 },\n                { xVal: 15, yVal: -88.12 },\n                { xVal: 16, yVal: -19.01 },\n                { xVal: 17, yVal: -29.05 },\n                { xVal: 18, yVal: -33.52 },\n                { xVal: 19, yVal: -72.66 },\n                { xVal: 20, yVal: -13.08 },\n            ],\n        },\n        {\n            symbol: 'ABMD',\n            name: 'ABIOMED Inc. Common Stock',\n            lastPrice: '372.69',\n            marketCap: 16912759037,\n            volume: 137763,\n            sector: 'Health Care',\n            rateOfChange: [\n                { xVal: 1, yVal: -83.29 },\n                { xVal: 2, yVal: 52.28 },\n                { xVal: 3, yVal: 61.05 },\n                { xVal: 4, yVal: 14.37 },\n                { xVal: 5, yVal: 48.23 },\n                { xVal: 6, yVal: 17.6 },\n                { xVal: 7, yVal: 34.12 },\n                { xVal: 8, yVal: 7.74 },\n                { xVal: 9, yVal: 60.32 },\n                { xVal: 10, yVal: -28.43 },\n                { xVal: 11, yVal: 71.11 },\n                { xVal: 12, yVal: 56.19 },\n                { xVal: 13, yVal: 1.24 },\n                { xVal: 14, yVal: 16.26 },\n                { xVal: 15, yVal: 44.49 },\n                { xVal: 16, yVal: 37.39 },\n                { xVal: 17, yVal: 42.82 },\n                { xVal: 18, yVal: 25.26 },\n                { xVal: 19, yVal: 79.4 },\n                { xVal: 20, yVal: 83.61 },\n            ],\n        },\n        {\n            symbol: 'ABNB',\n            name: 'Airbnb Inc. Class A Common Stock',\n            lastPrice: '158.00',\n            marketCap: 94231043106,\n            volume: 4456806,\n            sector: 'Capital Goods',\n            rateOfChange: [\n                { xVal: 1, yVal: 19.76 },\n                { xVal: 2, yVal: 82.41 },\n                { xVal: 3, yVal: 29.97 },\n                { xVal: 4, yVal: 92.73 },\n                { xVal: 5, yVal: 75.48 },\n                { xVal: 6, yVal: 86.8 },\n                { xVal: 7, yVal: 8.96 },\n                { xVal: 8, yVal: 37.67 },\n                { xVal: 9, yVal: 68.04 },\n                { xVal: 10, yVal: 18.43 },\n                { xVal: 11, yVal: 41.35 },\n                { xVal: 12, yVal: 44.72 },\n                { xVal: 13, yVal: 52.99 },\n                { xVal: 14, yVal: 96.18 },\n                { xVal: 15, yVal: 91.32 },\n                { xVal: 16, yVal: 79.07 },\n                { xVal: 17, yVal: 51.61 },\n                { xVal: 18, yVal: 32.11 },\n                { xVal: 19, yVal: 52.84 },\n                { xVal: 20, yVal: 1.64 },\n            ],\n        },\n    ];\n}\n","index.tsx":"\"use client\";\n\nimport React, {\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n  useEffect,\n  StrictMode,\n} from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport {\n  AgChartsCommunityModule,\n  AgSparklineOptions,\n} from \"ag-charts-community\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  ModuleRegistry,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { SparklinesModule } from \"ag-grid-enterprise\";\nimport { getStockData } from \"./data\";\nModuleRegistry.registerModules([\n  ClientSideRowModelModule,\n  SparklinesModule.with(AgChartsCommunityModule),\n  ValidationModule /* Development Only */,\n]);\n\nconst GridExample = () => {\n  const gridRef = useRef<AgGridReact>(null);\n  const containerStyle = useMemo(() => ({ width: \"100%\", height: \"100%\" }), []);\n  const gridStyle = useMemo(() => ({ height: \"100%\", width: \"100%\" }), []);\n  const [rowData, setRowData] = useState<any[]>(getStockData());\n  const [columnDefs, setColumnDefs] = useState<ColDef[]>([\n    { field: \"symbol\", maxWidth: 110 },\n    { field: \"name\", minWidth: 250 },\n    {\n      field: \"rateOfChange\",\n      cellRenderer: \"agSparklineCellRenderer\",\n      cellRendererParams: {\n        sparklineOptions: {\n          type: \"bar\",\n          direction: \"vertical\",\n          xKey: \"xVal\",\n          yKey: \"yVal\",\n          axis: {\n            type: \"number\",\n          },\n        } as AgSparklineOptions,\n      },\n    },\n    { field: \"volume\", maxWidth: 140 },\n  ]);\n  const defaultColDef = useMemo<ColDef>(() => {\n    return {\n      flex: 1,\n      minWidth: 100,\n    };\n  }, []);\n\n  /** DARK INTEGRATED START **/ const [tick, setTick] = useState(0);\n  useEffect(() => {\n    setTick(1);\n    const isInitialModeDark =\n      document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n    // update chart themes based on dark mode status\n    const updateChartThemes = (isDark: boolean): void => {\n      const themes: string[] = [\n        \"ag-default\",\n        \"ag-material\",\n        \"ag-sheets\",\n        \"ag-polychroma\",\n        \"ag-vivid\",\n      ];\n      const currentThemes = gridRef.current?.api.getGridOption(\"chartThemes\");\n      const customTheme =\n        currentThemes &&\n        currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n      let modifiedThemes: string[] = customTheme\n        ? isDark\n          ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n          : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n        : Array.from(\n            new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n          );\n\n      // updating the 'chartThemes' grid option will cause the chart to reactively update!\n      gridRef.current?.api.setGridOption(\"chartThemes\", modifiedThemes);\n    };\n\n    // update chart themes when example first loads\n    let initialSet = false;\n    const maxTries = 5;\n    let tries = 0;\n    const trySetInitial = (delay) => {\n      if (gridRef.current?.api) {\n        initialSet = true;\n        updateChartThemes(isInitialModeDark);\n      } else {\n        if (tries < maxTries) {\n          setTimeout(() => trySetInitial(), 250);\n          tries++;\n        }\n      }\n    };\n    trySetInitial(0);\n\n    interface ColorSchemeChangeEventDetail {\n      darkMode: boolean;\n    }\n\n    // event handler for color scheme changes\n    const handleColorSchemeChange = (\n      event: CustomEvent<ColorSchemeChangeEventDetail>,\n    ): void => {\n      const { darkMode } = event.detail;\n      updateChartThemes(darkMode);\n    };\n\n    // listen for user-triggered dark mode changes (not removing listener is fine here!)\n    document.addEventListener(\n      \"color-scheme-change\",\n      handleColorSchemeChange as EventListener,\n    );\n  }, [gridRef.current]); /** DARK INTEGRATED END **/\n\n  return (\n    <div style={containerStyle}>\n      <div style={gridStyle}>\n        <AgGridReact\n          ref={gridRef}\n          rowData={rowData}\n          columnDefs={columnDefs}\n          defaultColDef={defaultColDef}\n          rowHeight={50}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst root = createRoot(document.getElementById(\"root\")!);\nroot.render(\n  <StrictMode>\n    <GridExample />\n  </StrictMode>,\n);\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            jsx: 'react',\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.production.min.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.tsx',\n                defaultExtension: 'tsx',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","ag-grid-react":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}