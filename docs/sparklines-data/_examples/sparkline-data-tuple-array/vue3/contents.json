{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":[],"files":{"data.ts":"export function getStockData() {\n    return [\n        {\n            symbol: 'A',\n            name: 'Agilent Technologies Inc. Common Stock',\n            lastPrice: '179.28',\n            marketCap: 54272119919,\n            volume: 971760,\n            sector: 'Capital Goods',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), -37.3],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 16.92],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -19.8],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), -62.8],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), -25.9],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), -23.0],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), -8.53],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), -38.4],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), -93.9],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), -26.1],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 4.11],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 79.6],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 42.44],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 8.54],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), 92.72],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 20.75],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), -36.5],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 10.62],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), 80.15],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 69.32],\n            ],\n        },\n        {\n            symbol: 'AAL',\n            name: 'American Airlines Group Inc. Common Stock',\n            lastPrice: '19.37',\n            marketCap: 12541258186,\n            volume: 20309670,\n            sector: 'Transportation',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), 33.93],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), -80.1],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -42.4],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), -89.4],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), -8.98],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 34.8],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), -55.9],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), -31.9],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 84.37],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 3.23],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), -82.0],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 3.17],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), -1.84],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 78.56],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), -44.8],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), -20.9],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), -56.8],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), -70.3],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), -29.7],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), -7.13],\n            ],\n        },\n        {\n            symbol: 'AAP',\n            name: 'Advance Auto Parts Inc Advance Auto Parts Inc W/I',\n            lastPrice: '199.44',\n            marketCap: 12564867785,\n            volume: 699427,\n            sector: 'Consumer Services',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), -86.2],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), -14.9],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -67.8],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), -41.2],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), 79.57],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), -96.7],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 54.63],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 44.47],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 92.09],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 62.25],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 3.47],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), -71.6],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), -64.1],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), -58.0],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), -11.5],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 43.01],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), 18.23],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 33.11],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), -79.9],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), -47.2],\n            ],\n        },\n        {\n            symbol: 'AAPL',\n            name: 'Apple Inc. Common Stock',\n            lastPrice: '154.30',\n            marketCap: 2675150000000,\n            volume: 57807909,\n            sector: 'Technology',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), -40.6],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), -48.07],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -35.32],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), -92.55],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), -84.49],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), -67.75],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 23.72],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), -8.39],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), -46.75],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), -91.68],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), -38.42],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), -19.42],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), -90.4],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 92.86],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), -36],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), -82.44],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), -41.09],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), -76.65],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), -23.33],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), -47.76],\n            ],\n        },\n        {\n            symbol: 'ABB',\n            name: 'ABB Ltd Common Stock',\n            lastPrice: '37.67',\n            marketCap: 75566020000,\n            volume: 901811,\n            sector: 'Consumer Durables',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), 27.92],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 78.59],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -85.38],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), 96.6],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), -76],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 72.19],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), -75.34],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 13.81],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), -76.99],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 89.68],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 13],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 32.89],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 11.57],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 81.91],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), -46.1],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 35.34],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), -96.12],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), -12.15],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), -60.36],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 30.58],\n            ],\n        },\n        {\n            symbol: 'ABBV',\n            name: 'AbbVie Inc. Common Stock',\n            lastPrice: '111.62',\n            marketCap: 197252000000,\n            volume: 5364090,\n            sector: 'Health Care',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), 84.02],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 74.34],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), 65.46],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), 32.27],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), 58.87],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 4.78],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 30.44],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 9.11],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 35.96],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 4.43],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 50.69],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 51.93],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 22.52],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 40.04],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), 69.03],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 14.11],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), 14.04],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 1.98],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), 62.13],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 80.15],\n            ],\n        },\n        {\n            symbol: 'ABC',\n            name: 'AmerisourceBergen Corporation Common Stock',\n            lastPrice: '125.14',\n            marketCap: 26002479696,\n            volume: 549618,\n            sector: 'Health Care',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), 50.73],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 24.81],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -84][(new Date(1979, 6, 4, 12, 30, 0, 0), 19.03)],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), 69.72],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 88.25],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 70.3],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 86.63],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 83.77],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 21.81],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 35.01],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 38.29],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 93.69],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 48.42],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), 24.27],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 42.99],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), 21.94],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 62.64],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), 97.49],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 10.03],\n            ],\n        },\n        {\n            symbol: 'ABEV',\n            name: 'Ambev S.A. American Depositary Shares (Each representing 1 Common Share)',\n            lastPrice: '3.14',\n            marketCap: 49414685958,\n            volume: 27226664,\n            sector: 'Consumer Non-Durables',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), -22.48],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), -54.87],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), -76.5],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), -79.68],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), -82.13],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), -1.2],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), -34.04],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), -92.44],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), -45.51],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), -76.13],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), -3.33],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), -86.27],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), -34.81],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), -6.82],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), -88.12],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), -19.01],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), -29.05],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), -33.52],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), -72.66],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), -13.08],\n            ],\n        },\n        {\n            symbol: 'ABMD',\n            name: 'ABIOMED Inc. Common Stock',\n            lastPrice: '372.69',\n            marketCap: 16912759037,\n            volume: 137763,\n            sector: 'Health Care',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), -83.29],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 52.28],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), 61.05],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), 14.37],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), 48.23],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 19.6],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 34.12],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 7.74],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 60.32],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), -28.43],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 71.11],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 56.19],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 1.24],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 16.26],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), 44.49],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 37.39],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), 42.82],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 25.26],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), 79.4],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 83.61],\n            ],\n        },\n        {\n            symbol: 'ABNB',\n            name: 'Airbnb Inc. Class A Common Stock',\n            lastPrice: '158.00',\n            marketCap: 94231043106,\n            volume: 4456806,\n            sector: 'Capital Goods',\n            rateOfChange: [\n                [new Date(1976, 6, 4, 12, 30, 0, 0), 19.76],\n                [new Date(1977, 6, 4, 12, 30, 0, 0), 82.41],\n                [new Date(1978, 6, 4, 12, 30, 0, 0), 29.97],\n                [new Date(1979, 6, 4, 12, 30, 0, 0), 92.73],\n                [new Date(1980, 6, 4, 12, 30, 0, 0), 75.48],\n                [new Date(1981, 6, 4, 12, 30, 0, 0), 86.8],\n                [new Date(1982, 6, 4, 12, 30, 0, 0), 8.96],\n                [new Date(1983, 6, 4, 12, 30, 0, 0), 37.67],\n                [new Date(1984, 6, 4, 12, 30, 0, 0), 68.04],\n                [new Date(1985, 6, 4, 12, 30, 0, 0), 18.43],\n                [new Date(1986, 6, 4, 12, 30, 0, 0), 41.35],\n                [new Date(1987, 6, 4, 12, 30, 0, 0), 44.72],\n                [new Date(1988, 6, 4, 12, 30, 0, 0), 52.99],\n                [new Date(1989, 6, 4, 12, 30, 0, 0), 96.18],\n                [new Date(1990, 6, 4, 12, 30, 0, 0), 91.32],\n                [new Date(1991, 6, 4, 12, 30, 0, 0), 79.07],\n                [new Date(1992, 6, 4, 12, 30, 0, 0), 51.61],\n                [new Date(1993, 6, 4, 12, 30, 0, 0), 32.11],\n                [new Date(1994, 6, 4, 12, 30, 0, 0), 52.84],\n                [new Date(1995, 6, 4, 12, 30, 0, 0), 1.64],\n            ],\n        },\n    ];\n}\n","main.ts":"import {\n  createApp,\n  defineComponent,\n  onBeforeMount,\n  ref,\n  shallowRef,\n} from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport {\n  AgChartsCommunityModule,\n  AgSparklineOptions,\n} from \"ag-charts-community\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { SparklinesModule } from \"ag-grid-enterprise\";\nimport { getStockData } from \"./data\";\nModuleRegistry.registerModules([\n  ClientSideRowModelModule,\n  SparklinesModule.with(AgChartsCommunityModule),\n  ValidationModule /* Development Only */,\n]);\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%\">\n                <ag-grid-vue\n      style=\"width: 100%; height: 100%;\"\n      @grid-ready=\"onGridReady\"\n      :columnDefs=\"columnDefs\"\n      :defaultColDef=\"defaultColDef\"\n      :rowData=\"rowData\"\n      :rowHeight=\"rowHeight\"></ag-grid-vue>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n  },\n  setup(props) {\n    const gridApi = shallowRef<GridApi | null>(null);\n    const columnDefs = ref<ColDef[]>([\n      { field: \"symbol\", maxWidth: 110 },\n      { field: \"name\", minWidth: 250 },\n      {\n        field: \"rateOfChange\",\n        headerName: \"Rate of Change\",\n        cellRenderer: \"agSparklineCellRenderer\",\n        cellRendererParams: {\n          sparklineOptions: {\n            type: \"area\",\n            axis: {\n              type: \"time\",\n            },\n            marker: {\n              size: 3,\n            },\n          } as AgSparklineOptions,\n        },\n      },\n      { field: \"volume\", maxWidth: 140 },\n    ]);\n    const defaultColDef = ref<ColDef>({\n      flex: 1,\n      minWidth: 100,\n    });\n    const rowData = ref<any[] | null>(getStockData());\n    const rowHeight = ref(50);\n\n    const onGridReady = (params: GridReadyEvent) => {\n      /** DARK INTEGRATED START **/\n      const isInitialModeDark =\n        document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n      const updateChartThemes = (isDark) => {\n        const themes = [\n          \"ag-default\",\n          \"ag-material\",\n          \"ag-sheets\",\n          \"ag-polychroma\",\n          \"ag-vivid\",\n        ];\n        const currentThemes = params.api.getGridOption(\"chartThemes\");\n        const customTheme =\n          currentThemes &&\n          currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n        let modifiedThemes = customTheme\n          ? isDark\n            ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n            : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n          : Array.from(\n              new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n            );\n\n        // updating the 'chartThemes' grid option will cause the chart to reactively update!\n        params.api.setGridOption(\"chartThemes\", modifiedThemes);\n      };\n\n      // update chart themes when example first loads\n      let initialSet = false;\n      const maxTries = 5;\n      let tries = 0;\n      const trySetInitial = (delay) => {\n        if (params.api) {\n          initialSet = true;\n          updateChartThemes(isInitialModeDark);\n        } else {\n          if (tries < maxTries) {\n            setTimeout(() => trySetInitial(), 250);\n            tries++;\n          }\n        }\n      };\n      trySetInitial(0);\n\n      const handleColorSchemeChange = (event) => {\n        const { darkMode } = event.detail;\n        updateChartThemes(darkMode);\n      };\n\n      // listen for user-triggered dark mode changes (not removing listener is fine here!)\n      document.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n      /** DARK INTEGRATED END **/\n      gridApi.value = params.api;\n    };\n\n    return {\n      gridApi,\n      columnDefs,\n      defaultColDef,\n      rowData,\n      rowHeight,\n      onGridReady,\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}