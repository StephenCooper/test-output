{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getStockData() {\n    return [\n        {\n            symbol: 'A',\n            name: 'Agilent Technologies Inc. Common Stock',\n            lastPrice: '179.28',\n            marketCap: 54272119919,\n            volume: 971760,\n            sector: 'Capital Goods',\n            rateOfChange: [1, 2, -6, -7, -2, -7, 3, 4, -3, -8],\n        },\n        {\n            symbol: 'AAL',\n            name: 'American Airlines Group Inc. Common Stock',\n            lastPrice: '19.37',\n            marketCap: 12541258186,\n            volume: 20309670,\n            sector: 'Transportation',\n            rateOfChange: [4, 9, 8, 6, 1, -3, 0, -8, 2, -8],\n        },\n        {\n            symbol: 'AAP',\n            name: 'Advance Auto Parts Inc Advance Auto Parts Inc W/I',\n            lastPrice: '199.44',\n            marketCap: 12564867785,\n            volume: 699427,\n            sector: 'Consumer Services',\n            rateOfChange: [-10, 0, 7, -6, 7, 4, 1, 9, 7, 7],\n        },\n        {\n            symbol: 'AAPL',\n            name: 'Apple Inc. Common Stock',\n            lastPrice: '154.30',\n            marketCap: 2675150000000,\n            volume: 57807909,\n            sector: 'Technology',\n            rateOfChange: [-6, 0, -1, -2, -6, -1, -5, -2, -8, 4],\n        },\n        {\n            symbol: 'ABB',\n            name: 'ABB Ltd Common Stock',\n            lastPrice: '37.67',\n            marketCap: 75566020000,\n            volume: 901811,\n            sector: 'Consumer Durables',\n            rateOfChange: [8, -2, -6, 5, 2, 0, -7, -5, 2, -2],\n        },\n        {\n            symbol: 'ABBV',\n            name: 'AbbVie Inc. Common Stock',\n            lastPrice: '111.62',\n            marketCap: 197252000000,\n            volume: 5364090,\n            sector: 'Health Care',\n            rateOfChange: [5, 9, 10, 8, 0, 9, 3, 1, 3, 2],\n        },\n        {\n            symbol: 'ABC',\n            name: 'AmerisourceBergen Corporation Common Stock',\n            lastPrice: '125.14',\n            marketCap: 26002479696,\n            volume: 549618,\n            sector: 'Health Care',\n            rateOfChange: [9, 6, 4, 8, 10, 5, 1, 9, 8, 3],\n        },\n        {\n            symbol: 'ABEV',\n            name: 'Ambev S.A. American Depositary Shares (Each representing 1 Common Share)',\n            lastPrice: '3.14',\n            marketCap: 49414685958,\n            volume: 27226664,\n            sector: 'Consumer Non-Durables',\n            rateOfChange: [6, 0, 4, 8, -5, 0, -2, -2, -4, -6],\n        },\n        {\n            symbol: 'ABMD',\n            name: 'ABIOMED Inc. Common Stock',\n            lastPrice: '372.69',\n            marketCap: 16912759037,\n            volume: 137763,\n            sector: 'Health Care',\n            rateOfChange: [-1, -8, -6, -5, -2, -2, 0, -8, 0, 8],\n        },\n        {\n            symbol: 'ABNB',\n            name: 'Airbnb Inc. Class A Common Stock',\n            lastPrice: '158.00',\n            marketCap: 94231043106,\n            volume: 4456806,\n            sector: 'Capital Goods',\n            rateOfChange: [-4, -8, -4, -9, -5, -5, -1, -1, -3, -1],\n        },\n    ];\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"symbol\", maxWidth: 110 },\n    { field: \"name\", minWidth: 250 },\n    {\n      field: \"rateOfChange\",\n      cellRenderer: \"agSparklineCellRenderer\",\n      cellRendererParams: {\n        sparklineOptions: {\n          type: \"area\",\n        },\n      },\n    },\n    { field: \"volume\", maxWidth: 140 },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  rowData: getStockData(),\n  rowHeight: 50,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(\n    gridDiv,\n    gridOptions,\n  ); /** DARK INTEGRATED START **/\n  const isInitialModeDark =\n    document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n  const updateChartThemes = (isDark) => {\n    const themes = [\n      \"ag-default\",\n      \"ag-material\",\n      \"ag-sheets\",\n      \"ag-polychroma\",\n      \"ag-vivid\",\n    ];\n    const currentThemes = gridApi.getGridOption(\"chartThemes\");\n    const customTheme =\n      currentThemes &&\n      currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n    let modifiedThemes = customTheme\n      ? isDark\n        ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n        : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n      : Array.from(\n          new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n        );\n\n    // updating the 'chartThemes' grid option will cause the chart to reactively update!\n    gridApi.setGridOption(\"chartThemes\", modifiedThemes);\n  };\n\n  // update chart themes when example first loads\n  let initialSet = false;\n  const maxTries = 5;\n  let tries = 0;\n  const trySetInitial = (delay) => {\n    if (gridApi) {\n      initialSet = true;\n      updateChartThemes(isInitialModeDark);\n    } else {\n      if (tries < maxTries) {\n        setTimeout(() => trySetInitial(), 250);\n        tries++;\n      }\n    }\n  };\n  trySetInitial(0);\n\n  const handleColorSchemeChange = (event) => {\n    const { darkMode } = event.detail;\n    updateChartThemes(darkMode);\n  };\n\n  // listen for user-triggered dark mode changes (not removing listener is fine here!)\n  document.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n  /** DARK INTEGRATED END **/\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}