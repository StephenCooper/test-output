{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".ag-details-row {\n    padding: 5px 5px 5px 40px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    // group cell renderer needed for expand / collapse icons\n    { field: \"name\", cellRenderer: \"agGroupCellRenderer\" },\n    { field: \"account\" },\n    { field: \"calls\" },\n    { field: \"minutes\", valueFormatter: \"x.toLocaleString() + 'm'\" },\n  ],\n  masterDetail: true,\n  detailRowHeight: 200,\n  detailCellRendererParams: {\n    detailGridOptions: {\n      columnDefs: [\n        { field: \"callId\" },\n        { field: \"direction\" },\n        { field: \"number\", minWidth: 150 },\n        { field: \"duration\", valueFormatter: \"x.toLocaleString() + 's'\" },\n        { field: \"switchCode\", minWidth: 150 },\n      ],\n      defaultColDef: {\n        flex: 1,\n        editable: true,\n      },\n    },\n    getDetailRowData: (params) => {\n      params.successCallback(params.data.callRecords);\n    },\n  },\n  getRowId: (params) => {\n    // use 'account' as the row ID\n    return String(params.data.account);\n  },\n  defaultColDef: {\n    flex: 1,\n    editable: true,\n  },\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction onFirstDataRendered(params) {\n  setTimeout(() => {\n    params.api.forEachNode(function (node) {\n      node.setExpanded(true);\n    });\n  }, 0);\n}\n\nfunction flashMilaSmithOnly() {\n  // flash Mila Smith - we know her account is 177001 and we use the account for the row ID\n  const detailGrid = gridApi.getDetailGridInfo(\"detail_177001\");\n  if (detailGrid) {\n    detailGrid.api.flashCells();\n  }\n}\n\nfunction flashAll() {\n  gridApi.forEachDetailGridInfo(function (detailGridApi) {\n    detailGridApi.api.flashCells();\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/master-detail-data.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div style=\"padding-bottom: 4px\">\n        <button onclick=\"flashMilaSmithOnly()\">Flash Mila Smith</button>\n        <button onclick=\"flashAll()\">Flash All</button>\n    </div>\n    <div id=\"myGrid\" style=\"flex: 1 1 0px\"></div>\n</div>\n","interfaces.ts":"\nexport interface ICallRecord {\n    name: string;\n    callId: number;\n    duration: number;\n    switchCode: string;\n    direction: string;\n    number: string;\n}\n\nexport interface IAccount {\n    name: string;\n    account: number;\n    calls: number;\n    minutes: number;\n    callRecords: ICallRecord[];\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}