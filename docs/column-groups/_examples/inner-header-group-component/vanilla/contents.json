{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["customInnerHeaderGroup.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".customInnerHeaderGroup {\n    display: flex;\n    gap: 0.25rem;\n    align-items: center;\n}\n\n.customInnerHeaderGroup span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.fa {\n    color: cornflowerblue;\n}\n","customInnerHeaderGroup.js":"\n\n\n\n\nclass CustomInnerHeaderGroup  {\n     agParams;\n     eGui;\n\n    init(agParams) {\n        const eGui = (this.eGui = document.createElement('div'));\n        eGui.classList.add('customInnerHeaderGroup');\n        const textNode = document.createElement('span');\n\n        textNode.textContent = agParams.displayName;\n\n        if (agParams.icon) {\n            const icon = document.createElement('i');\n            icon.classList.add('fa', `${agParams.icon}`);\n            eGui.appendChild(icon);\n        }\n\n        eGui.appendChild(textNode);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete Details\",\n    headerGroupComponentParams: {\n      innerHeaderGroupComponent: CustomInnerHeaderGroup,\n      icon: \"fa-user\",\n    },\n    children: [\n      { field: \"athlete\", width: 150 },\n      { field: \"age\", width: 90, columnGroupShow: \"open\" },\n      {\n        field: \"country\",\n        width: 120,\n        columnGroupShow: \"open\",\n      },\n    ],\n  },\n  {\n    headerName: \"Medal details\",\n    headerGroupComponentParams: {\n      innerHeaderGroupComponent: CustomInnerHeaderGroup,\n    },\n    children: [\n      { field: \"year\", width: 90 },\n      { field: \"date\", width: 110 },\n      {\n        field: \"sport\",\n        width: 110,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"gold\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"silver\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"bronze\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"total\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    width: 100,\n  },\n};\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}