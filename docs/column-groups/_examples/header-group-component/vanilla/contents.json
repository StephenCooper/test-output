{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["customHeaderGroup.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".customExpandButton {\n    float: right;\n    margin-top: 2px;\n    margin-left: 3px;\n}\n\n.expanded {\n    animation-name: toExpanded;\n    animation-duration: 1s;\n    -webkit-transform: rotate(180deg); /* Chrome, Safari, Opera */\n    transform: rotate(180deg);\n}\n\n.fa-arrow-right {\n    color: cornflowerblue;\n}\n\n.collapsed {\n    animation-name: toCollapsed;\n    animation-duration: 1s;\n    -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */\n    transform: rotate(0deg);\n}\n\n.ag-header-group-cell-label {\n    display: flex;\n    gap: 0.25rem;\n    overflow: hidden;\n}\n\n.customHeaderLabel {\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.customHeaderMenuButton,\n.customHeaderLabel,\n.customSortDownLabel,\n.customSortUpLabel,\n.customSortRemoveLabel {\n    margin-top: 2px;\n    margin-left: 4px;\n    float: left;\n}\n\n.customSortDownLabel {\n    margin-left: 10px;\n}\n\n.customSortUpLabel {\n    margin-left: 1px;\n}\n\n.customSortRemoveLabel {\n    float: left;\n    font-size: 11px;\n}\n\n@keyframes toExpanded {\n    from {\n        -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */\n        transform: rotate(0deg);\n    }\n    to {\n        -webkit-transform: rotate(180deg); /* Chrome, Safari, Opera */\n        transform: rotate(180deg);\n    }\n}\n\n@keyframes toCollapsed {\n    from {\n        -webkit-transform: rotate(180deg); /* Chrome, Safari, Opera */\n        transform: rotate(180deg);\n    }\n    to {\n        -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */\n        transform: rotate(0deg);\n    }\n}\n","customHeaderGroup.js":"\nclass CustomHeaderGroup  {\n    params;\n    eGui;\n    onExpandButtonClickedListener;\n    eExpandButton;\n    onExpandChangedListener;\n\n    init(params) {\n        this.params = params;\n        this.eGui = document.createElement('div');\n        this.eGui.className = 'ag-header-group-cell-label';\n        this.eGui.innerHTML =\n            '' +\n            '<div class=\"customHeaderLabel\">' +\n            this.params.displayName +\n            '</div>' +\n            '<div class=\"customExpandButton\"><i class=\"fa fa-arrow-right\"></i></div>';\n\n        this.onExpandButtonClickedListener = this.expandOrCollapse.bind(this);\n        this.eExpandButton = this.eGui.querySelector('.customExpandButton');\n        this.eExpandButton.addEventListener('click', this.onExpandButtonClickedListener);\n\n        this.onExpandChangedListener = this.syncExpandButtons.bind(this);\n        this.params.columnGroup\n            .getProvidedColumnGroup()\n            .addEventListener('expandedChanged', this.onExpandChangedListener);\n\n        this.syncExpandButtons();\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    expandOrCollapse() {\n        const currentState = this.params.columnGroup.getProvidedColumnGroup().isExpanded();\n        this.params.setExpanded(!currentState);\n    }\n\n    syncExpandButtons() {\n        function collapsed(toDeactivate) {\n            toDeactivate.className = toDeactivate.className.split(' ')[0] + ' collapsed';\n        }\n\n        function expanded(toActivate) {\n            toActivate.className = toActivate.className.split(' ')[0] + ' expanded';\n        }\n\n        if (this.params.columnGroup.getProvidedColumnGroup().isExpanded()) {\n            expanded(this.eExpandButton);\n        } else {\n            collapsed(this.eExpandButton);\n        }\n    }\n\n    destroy() {\n        this.eExpandButton.removeEventListener('click', this.onExpandButtonClickedListener);\n    }\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete Details\",\n    headerGroupComponent: CustomHeaderGroup,\n    children: [\n      { field: \"athlete\", width: 150 },\n      { field: \"age\", width: 90, columnGroupShow: \"open\" },\n      {\n        field: \"country\",\n        width: 120,\n        columnGroupShow: \"open\",\n      },\n    ],\n  },\n  {\n    headerName: \"Medal details\",\n    headerGroupComponent: CustomHeaderGroup,\n    children: [\n      { field: \"year\", width: 90 },\n      { field: \"date\", width: 110 },\n      {\n        field: \"sport\",\n        width: 110,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"gold\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"silver\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"bronze\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n      {\n        field: \"total\",\n        width: 100,\n        columnGroupShow: \"open\",\n      },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    width: 100,\n  },\n};\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}