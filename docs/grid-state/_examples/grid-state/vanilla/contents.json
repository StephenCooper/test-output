{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.button-group {\n    padding-bottom: 4px;\n    display: inline-block;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n}\n\n.button-group > * {\n    margin-right: 4px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: \"athlete\",\n      minWidth: 150,\n    },\n    { field: \"age\", maxWidth: 90 },\n    { field: \"country\", minWidth: 150 },\n    { field: \"year\", maxWidth: 90 },\n    { field: \"date\", minWidth: 150 },\n    { field: \"sport\", minWidth: 150 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n  },\n  sideBar: true,\n  pagination: true,\n  rowSelection: { mode: \"multiRow\" },\n  suppressColumnMoveAnimation: true,\n  onGridPreDestroyed: onGridPreDestroyed,\n  onStateUpdated: onStateUpdated,\n};\n\nfunction onGridPreDestroyed(event) {\n  console.log(\"Grid state on destroy (can be persisted)\", event.state);\n}\n\nfunction onStateUpdated(event) {\n  console.log(\"State updated\", event.state);\n}\n\nfunction reloadGrid() {\n  const state = gridApi.getState();\n\n  gridApi.destroy();\n\n  const gridDiv = document.querySelector(\"#myGrid\");\n\n  gridOptions.initialState = state;\n\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n}\n\nfunction printState() {\n  console.log(\"Grid state\", gridApi.getState());\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <span class=\"button-group\">\n            <button onclick=\"reloadGrid()\">Recreate Grid with Current State</button>\n            <button onclick=\"printState()\">Print State</button>\n        </span>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}