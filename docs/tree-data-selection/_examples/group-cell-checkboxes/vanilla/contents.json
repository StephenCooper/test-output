{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"const files = [\n    { path: ['Desktop', 'ProjectAlpha', 'Proposal.docx'], size: 512000, created: '2023-07-10', modified: '2023-08-01' },\n    {\n        path: ['Desktop', 'ProjectAlpha', 'Timeline.xlsx'],\n        size: 1048576,\n        created: '2023-07-12',\n        modified: '2023-08-03',\n    },\n    { path: ['Desktop', 'ToDoList.txt'], size: 51200, created: '2023-08-05', modified: '2023-08-10' },\n    { path: ['Desktop', 'MeetingNotes_August.pdf'], size: 460800, created: '2023-08-15', modified: '2023-08-15' },\n    { path: ['Documents', 'Work', 'ProjectAlpha'] },\n    {\n        path: ['Documents', 'Work', 'ProjectAlpha', 'Proposal.docx'],\n        size: 512000,\n        created: '2023-07-10',\n        modified: '2023-08-01',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectAlpha', 'Timeline.xlsx'],\n        size: 1048576,\n        created: '2023-07-12',\n        modified: '2023-08-03',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectBeta', 'Report.pdf'],\n        size: 1024000,\n        created: '2023-06-22',\n        modified: '2023-07-15',\n    },\n    {\n        path: ['Documents', 'Work', 'ProjectBeta', 'Budget.xlsx'],\n        size: 1048576,\n        created: '2023-06-25',\n        modified: '2023-07-18',\n    },\n    {\n        path: ['Documents', 'Work', 'Meetings', 'TeamMeeting_August.pdf'],\n        size: 512000,\n        created: '2023-08-20',\n        modified: '2023-08-21',\n    },\n    {\n        path: ['Documents', 'Work', 'Meetings', 'ClientMeeting_July.pdf'],\n        size: 1048576,\n        created: '2023-07-15',\n        modified: '2023-07-16',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2022.pdf'],\n        size: 1024000,\n        created: '2023-04-10',\n        modified: '2023-04-10',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2021.pdf'],\n        size: 1048576,\n        created: '2022-04-05',\n        modified: '2022-04-06',\n    },\n    {\n        path: ['Documents', 'Personal', 'Taxes', '2020.pdf'],\n        size: 1024000,\n        created: '2021-04-03',\n        modified: '2021-04-03',\n    },\n    { path: ['Pictures', 'Vacation2019', 'Beach.jpg'], size: 1048576, created: '2019-07-10', modified: '2019-07-12' },\n    {\n        path: ['Pictures', 'Vacation2019', 'Mountain.png'],\n        size: 2048000,\n        created: '2019-07-11',\n        modified: '2019-07-13',\n    },\n    { path: ['Pictures', 'Family', 'Birthday2022.jpg'], size: 3072000, created: '2022-12-15', modified: '2022-12-20' },\n    { path: ['Pictures', 'Family', 'Christmas2021.png'], size: 2048000, created: '2021-12-25', modified: '2021-12-26' },\n    { path: ['Videos', 'Vacation2019', 'Beach.mov'], size: 4194304, created: '2019-07-10', modified: '2019-07-12' },\n    { path: ['Videos', 'Vacation2019', 'Hiking.mp4'], size: 4194304, created: '2019-07-15', modified: '2019-07-16' },\n    { path: ['Videos', 'Family', 'Birthday2022.mp4'], size: 6291456, created: '2022-12-15', modified: '2022-12-20' },\n    { path: ['Videos', 'Family', 'Christmas2021.mov'], size: 6291456, created: '2021-12-25', modified: '2021-12-26' },\n    { path: ['Downloads', 'SoftwareInstaller.exe'], size: 2097152, created: '2023-08-01', modified: '2023-08-01' },\n    { path: ['Downloads', 'Receipt_OnlineStore.pdf'], size: 1048576, created: '2023-08-05', modified: '2023-08-05' },\n    { path: ['Downloads', 'Ebook.pdf'], size: 1048576, created: '2023-08-08', modified: '2023-08-08' },\n];\n\nfunction getData() {\n    return files;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"created\" },\n    { field: \"modified\" },\n    {\n      field: \"size\",\n      aggFunc: \"sum\",\n      valueFormatter: (params) => {\n        const sizeInKb = params.value / 1024;\n\n        if (sizeInKb > 1024) {\n          return `${+(sizeInKb / 1024).toFixed(2)} MB`;\n        } else {\n          return `${+sizeInKb.toFixed(2)} KB`;\n        }\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  autoGroupColumnDef: {\n    headerName: \"File Explorer\",\n    minWidth: 280,\n    cellRenderer: \"agGroupCellRenderer\",\n    cellRendererParams: {\n      suppressCount: true,\n    },\n  },\n  rowData: getData(),\n  treeData: true,\n  getDataPath: (data) => data.path,\n  rowSelection: {\n    mode: \"multiRow\",\n    checkboxLocation: \"autoGroupColumn\",\n    headerCheckbox: false,\n  },\n  groupDefaultExpanded: -1,\n  suppressAggFuncInHeader: true,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}