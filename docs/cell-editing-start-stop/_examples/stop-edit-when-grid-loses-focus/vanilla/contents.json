{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n}\n\n.ag-cell-inline-editing {\n    border: 1px solid lightgreen !important;\n}\n.yearSelect {\n    padding: 4px;\n    border: 1px solid var(--ag-border-color);\n    background: var(--ag-header-background-color);\n    text-align: center;\n}\n\n.yearButton {\n    margin: 4px;\n}\n","main.js":"class YearCellEditor {\n  eGui;\n  value;\n\n  getGui() {\n    return this.eGui;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  isPopup() {\n    return true;\n  }\n\n  init(params) {\n    this.value = params.value;\n    const tempElement = document.createElement(\"div\");\n    tempElement.innerHTML =\n      '<div class=\"yearSelect\">' +\n      \"<div>Clicking here does not close the popup!</div>\" +\n      '<button id=\"bt2006\" class=\"yearButton\">2006</button>' +\n      '<button id=\"bt2008\" class=\"yearButton\">2008</button>' +\n      '<button id=\"bt2010\" class=\"yearButton\">2010</button>' +\n      '<button id=\"bt2012\" class=\"yearButton\">2012</button>' +\n      \"<div>\" +\n      '<input type=\"text\" style=\"width: 100%;\" placeholder=\"clicking on this text field does not close\"/>' +\n      \"</div>\" +\n      \"</div>\";\n\n    [2006, 2008, 2010, 2012].forEach((year) => {\n      tempElement.querySelector(\"#bt\" + year).addEventListener(\"click\", () => {\n        this.value = year;\n        params.stopEditing();\n      });\n    });\n\n    this.eGui = tempElement.firstChild;\n  }\n}\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 160 },\n    { field: \"age\" },\n    { field: \"country\", minWidth: 140 },\n    { field: \"year\", cellEditor: YearCellEditor, cellEditorPopup: true },\n    { field: \"date\", minWidth: 140 },\n    { field: \"sport\", minWidth: 160 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    editable: true,\n  },\n  // this property tells grid to stop editing if the\n  // grid loses focus\n  stopEditingWhenCellsLoseFocus: true,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        Clicking outside the grid will stop the editing <button style=\"font-size: 12px\">Dummy Save</button>\n        <input placeholder=\"click here, editing stops\" />\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}