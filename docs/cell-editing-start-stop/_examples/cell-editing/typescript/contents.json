{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.grid-wrapper {\n    flex: 1 1 0px;\n}\n\n#myGrid {\n    height: 100%;\n    width: 100%;\n}\n","data.ts":"export function getData(): any[] {\n    return [\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Bob',\n            lastName: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Mary',\n            lastName: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Zahid',\n            lastName: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            firstName: 'Jerry',\n            lastName: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n    ];\n}\n","main.ts":"import {\n  CellEditingStartedEvent,\n  CellEditingStoppedEvent,\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  ModuleRegistry,\n  NumberEditorModule,\n  PinnedRowModule,\n  RowEditingStartedEvent,\n  RowEditingStoppedEvent,\n  RowPinnedType,\n  TextEditorModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { getData } from \"./data\";\n\nModuleRegistry.registerModules([\n  NumberEditorModule,\n  TextEditorModule,\n  PinnedRowModule,\n  ClientSideRowModelModule,\n  ValidationModule /* Development Only */,\n]);\n\nlet gridApi: GridApi;\n\nconst gridOptions: GridOptions = {\n  columnDefs: [\n    { field: \"firstName\" },\n    { field: \"lastName\" },\n    { field: \"gender\" },\n    { field: \"age\" },\n    { field: \"mood\" },\n    { field: \"country\" },\n    { field: \"address\", minWidth: 550 },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 110,\n    editable: true,\n  },\n  rowData: getData(),\n  pinnedTopRowData: getPinnedTopData(),\n  pinnedBottomRowData: getPinnedBottomData(),\n  onRowEditingStarted: (event: RowEditingStartedEvent) => {\n    console.log(\"never called - not doing row editing\");\n  },\n  onRowEditingStopped: (event: RowEditingStoppedEvent) => {\n    console.log(\"never called - not doing row editing\");\n  },\n  onCellEditingStarted: (event: CellEditingStartedEvent) => {\n    console.log(\"cellEditingStarted\");\n  },\n  onCellEditingStopped: (event: CellEditingStoppedEvent) => {\n    console.log(\"cellEditingStopped\");\n  },\n};\n\nfunction getPinnedTopData() {\n  return [\n    {\n      firstName: \"##\",\n      lastName: \"##\",\n      gender: \"##\",\n      address: \"##\",\n      mood: \"##\",\n      country: \"##\",\n    },\n  ];\n}\n\nfunction getPinnedBottomData() {\n  return [\n    {\n      firstName: \"##\",\n      lastName: \"##\",\n      gender: \"##\",\n      address: \"##\",\n      mood: \"##\",\n      country: \"##\",\n    },\n  ];\n}\nfunction onBtStopEditing() {\n  gridApi!.stopEditing();\n}\n\nfunction onBtStartEditing(key?: string, pinned?: RowPinnedType) {\n  gridApi!.setFocusedCell(0, \"lastName\", pinned);\n\n  gridApi!.startEditingCell({\n    rowIndex: 0,\n    colKey: \"lastName\",\n    // set to 'top', 'bottom' or undefined\n    rowPinned: pinned,\n    key: key,\n  });\n}\n\nfunction onBtNextCell() {\n  gridApi!.tabToNextCell();\n}\n\nfunction onBtPreviousCell() {\n  gridApi!.tabToPreviousCell();\n}\n\nfunction onBtWhich() {\n  const cellDefs = gridApi!.getEditingCells();\n  if (cellDefs.length > 0) {\n    const cellDef = cellDefs[0];\n    console.log(\n      \"editing cell is: row = \" +\n        cellDef.rowIndex +\n        \", col = \" +\n        cellDef.column.getId() +\n        \", floating = \" +\n        cellDef.rowPinned,\n    );\n  } else {\n    console.log(\"no cells are editing\");\n  }\n}\n\n// setup the grid after the page has finished loading\nconst gridDiv = document.querySelector<HTMLElement>(\"#myGrid\")!;\ngridApi = createGrid(gridDiv, gridOptions);\n\nif (typeof window !== \"undefined\") {\n  // Attach external event handlers to window so they can be called from index.html\n  (<any>window).onBtStopEditing = onBtStopEditing;\n  (<any>window).onBtStartEditing = onBtStartEditing;\n  (<any>window).onBtNextCell = onBtNextCell;\n  (<any>window).onBtPreviousCell = onBtPreviousCell;\n  (<any>window).onBtWhich = onBtWhich;\n}\n","index.html":"<div class=\"example-wrapper\">\n    <div>\n        <div style=\"margin-bottom: 5px; display: flex\">\n            <button onclick=\"onBtStartEditing(undefined)\">edit (0)</button>\n            <button onclick=\"onBtStartEditing('Backspace')\">edit (0, Backspace)</button>\n            <button onclick=\"onBtStartEditing('T')\">edit (0, 'T')</button>\n            <button onclick=\"onBtStartEditing(undefined, 'top')\">edit (0, Top)</button>\n            <button onclick=\"onBtStartEditing(undefined, 'bottom')\">edit (0, Bottom)</button>\n        </div>\n        <div style=\"margin-bottom: 5px; display: flex\">\n            <button onclick=\"onBtStopEditing()\">stop ()</button>\n            <button onclick=\"onBtNextCell()\">next ()</button>\n            <button onclick=\"onBtPreviousCell()\">previous ()</button>\n            <button onclick=\"onBtWhich()\">which ()</button>\n        </div>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {},\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            // appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {},\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}