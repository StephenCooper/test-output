{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.example-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 5px;\n}\n\n.value {\n    margin-right: 20px;\n    font-weight: bold;\n    width: 50px;\n    display: inline-block;\n    text-align: right;\n    padding-right: 2px;\n}\n","main.js":"const columnDefs = [\n  // this row just shows the row index, doesn't use any data from the row\n  {\n    headerName: \"#\",\n    width: 70,\n    valueFormatter: (params) => {\n      return `${parseInt(params.node.id) + 1}`;\n    },\n  },\n  { headerName: \"Athlete\", field: \"athlete\", width: 150 },\n  { headerName: \"Age\", field: \"age\", width: 90 },\n  { headerName: \"Country\", field: \"country\", width: 120 },\n  { headerName: \"Year\", field: \"year\", width: 90 },\n  { headerName: \"Date\", field: \"date\", width: 110 },\n  { headerName: \"Sport\", field: \"sport\", width: 110 },\n  { headerName: \"Gold\", field: \"gold\", width: 100 },\n  { headerName: \"Silver\", field: \"silver\", width: 100 },\n  { headerName: \"Bronze\", field: \"bronze\", width: 100 },\n  { headerName: \"Total\", field: \"total\", width: 100 },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    filter: true,\n  },\n  rowSelection: {\n    mode: \"multiRow\",\n    checkboxes: true,\n    headerCheckbox: true,\n  },\n  paginationPageSize: 500,\n  paginationPageSizeSelector: [100, 500, 1000],\n  columnDefs,\n  pagination: true,\n  suppressPaginationPanel: true,\n  suppressScrollOnNewData: true,\n  onPaginationChanged: onPaginationChanged,\n};\n\nfunction setText(selector, text) {\n  document.querySelector(selector).innerHTML = text;\n}\n\nfunction onPaginationChanged() {\n  console.log(\"onPaginationPageLoaded\");\n\n  // Workaround for bug in events order\n  if (gridApi) {\n    setText(\"#lbLastPageFound\", gridApi.paginationIsLastPageFound());\n    setText(\"#lbPageSize\", gridApi.paginationGetPageSize());\n    // we +1 to current page, as pages are zero based\n    setText(\"#lbCurrentPage\", gridApi.paginationGetCurrentPage() + 1);\n    setText(\"#lbTotalPages\", gridApi.paginationGetTotalPages());\n\n    setLastButtonDisabled(!gridApi.paginationIsLastPageFound());\n  }\n}\n\nfunction setLastButtonDisabled(disabled) {\n  document.querySelector(\"#btLast\").disabled = disabled;\n}\n\nfunction onBtFirst() {\n  gridApi.paginationGoToFirstPage();\n}\n\nfunction onBtLast() {\n  gridApi.paginationGoToLastPage();\n}\n\nfunction onBtNext() {\n  gridApi.paginationGoToNextPage();\n}\n\nfunction onBtPrevious() {\n  gridApi.paginationGoToPreviousPage();\n}\n\nfunction onBtPageFive() {\n  // we say page 4, as the first page is zero\n  gridApi.paginationGoToPage(4);\n}\n\nfunction onBtPageFifty() {\n  // we say page 49, as the first page is zero\n  gridApi.paginationGoToPage(49);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <div>\n            <button onclick=\"onBtFirst()\">To First</button>\n            <button onclick=\"onBtLast()\" id=\"btLast\">To Last</button>\n            <button onclick=\"onBtPrevious()\">To Previous</button>\n            <button onclick=\"onBtNext()\">To Next</button>\n            <button onclick=\"onBtPageFive()\">To Page 5</button>\n            <button onclick=\"onBtPageFifty()\">To Page 50</button>\n        </div>\n\n        <div style=\"margin-top: 6px\">\n            <span class=\"label\">Last Page Found:</span>\n            <span class=\"value\" id=\"lbLastPageFound\">-</span>\n            <span class=\"label\">Page Size:</span>\n            <span class=\"value\" id=\"lbPageSize\">-</span>\n            <span class=\"label\">Total Pages:</span>\n            <span class=\"value\" id=\"lbTotalPages\">-</span>\n            <span class=\"label\">Current Page:</span>\n            <span class=\"value\" id=\"lbCurrentPage\">-</span>\n        </div>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}