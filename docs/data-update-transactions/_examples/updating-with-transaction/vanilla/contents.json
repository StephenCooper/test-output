{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    return [\n        {\n            make: 'Toyota',\n            model: 'Celica',\n            price: 35000,\n            zombies: 'Elly',\n            style: 'Smooth',\n            clothes: 'Jeans',\n        },\n        {\n            make: 'Ford',\n            model: 'Mondeo',\n            price: 32000,\n            zombies: 'Shane',\n            style: 'Filthy',\n            clothes: 'Shorts',\n        },\n        {\n            make: 'Porsche',\n            model: 'Boxster',\n            price: 72000,\n            zombies: 'Jack',\n            style: 'Dirty',\n            clothes: 'Padded',\n        },\n    ];\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"make\" },\n    { field: \"model\" },\n    { field: \"price\" },\n    { field: \"zombies\" },\n    { field: \"style\" },\n    { field: \"clothes\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  rowData: getData(),\n  rowSelection: { mode: \"multiRow\" },\n};\n\nlet newCount = 1;\n\nfunction createNewRowData() {\n  const newData = {\n    make: \"Toyota \" + newCount,\n    model: \"Celica \" + newCount,\n    price: 35000 + newCount * 17,\n    zombies: \"Headless\",\n    style: \"Little\",\n    clothes: \"Airbag\",\n  };\n  newCount++;\n  return newData;\n}\n\nfunction getRowData() {\n  const rowData = [];\n  gridApi.forEachNode(function (node) {\n    rowData.push(node.data);\n  });\n  console.log(\"Row Data:\");\n  console.table(rowData);\n}\n\nfunction clearData() {\n  const rowData = [];\n  gridApi.forEachNode(function (node) {\n    rowData.push(node.data);\n  });\n  const res = gridApi.applyTransaction({\n    remove: rowData,\n  });\n  printResult(res);\n}\n\nfunction addItems(addIndex) {\n  const newItems = [createNewRowData(), createNewRowData(), createNewRowData()];\n  const res = gridApi.applyTransaction({\n    add: newItems,\n    addIndex: addIndex,\n  });\n  printResult(res);\n}\n\nfunction updateItems() {\n  // update the first 2 items\n  const itemsToUpdate = [];\n  gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\n    // only do first 2\n    if (index >= 2) {\n      return;\n    }\n\n    const data = rowNode.data;\n    data.price = Math.floor(Math.random() * 20000 + 20000);\n    itemsToUpdate.push(data);\n  });\n  const res = gridApi.applyTransaction({ update: itemsToUpdate });\n  printResult(res);\n}\n\nfunction onRemoveSelected() {\n  const selectedData = gridApi.getSelectedRows();\n  const res = gridApi.applyTransaction({ remove: selectedData });\n  printResult(res);\n}\n\nfunction printResult(res) {\n  console.log(\"---------------------------------------\");\n  if (res.add) {\n    res.add.forEach((rowNode) => {\n      console.log(\"Added Row Node\", rowNode);\n    });\n  }\n  if (res.remove) {\n    res.remove.forEach((rowNode) => {\n      console.log(\"Removed Row Node\", rowNode);\n    });\n  }\n  if (res.update) {\n    res.update.forEach((rowNode) => {\n      console.log(\"Updated Row Node\", rowNode);\n    });\n  }\n}\n\n// wait for the document to be loaded, otherwise\n// AG Grid will not find the div in the document.\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const eGridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(eGridDiv, gridOptions);\n});\n","index.html":"<div style=\"height: 100%; display: flex; flex-direction: column\">\n    <div style=\"margin-bottom: 4px\">\n        <button onclick=\"addItems(undefined)\">Add Items</button>\n        <button onclick=\"addItems(2)\">Add Items addIndex=2</button>\n        <button onclick=\"updateItems()\">Update Top 2</button>\n        <button onclick=\"onRemoveSelected()\">Remove Selected</button>\n        <button onclick=\"getRowData()\">Get Row Data</button>\n        <button onclick=\"clearData()\">Clear Data</button>\n    </div>\n    <div style=\"flex-grow: 1\">\n        <div id=\"myGrid\" style=\"height: 100%\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}