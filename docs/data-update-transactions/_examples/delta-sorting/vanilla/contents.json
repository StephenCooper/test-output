{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-grid {\n    height: 1px;\n    min-height: 1px;\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    margin-bottom: 1rem;\n}\n\n.test-header button:not(:first-child) {\n    margin-left: 5px;\n}\n","main.js":"let lastGen = 0;\nconst generateItem = (id = lastGen++) => {\n  return {\n    id,\n    sort: Math.floor(Math.random() * 3 + 2000),\n    sort1: Math.floor(Math.random() * 3 + 2000),\n    sort2: Math.floor(Math.random() * 100000 + 2000),\n  };\n};\n\nconst getRowData = (rows = 10) =>\n  new Array(rows).fill(undefined).map((_) => generateItem());\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"id\" },\n    { field: \"updatedBy\" },\n    { field: \"sort\", sortIndex: 0, sort: \"desc\" },\n    { field: \"sort1\", sortIndex: 1, sort: \"desc\" },\n    { field: \"sort2\", sortIndex: 2, sort: \"desc\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  rowData: getRowData(100000),\n  deltaSort: true,\n  getRowId: ({ data }) => String(data.id),\n};\n\nfunction addDelta() {\n  const transaction = {\n    add: getRowData(1).map((row) => ({ ...row, updatedBy: \"delta\" })),\n    update: [{ id: 1, make: \"Delta\", updatedBy: \"delta\" }],\n  };\n  gridApi.setGridOption(\"deltaSort\", true);\n  const startTime = new Date().getTime();\n  gridApi.applyTransaction(transaction);\n  document.getElementById(\"transactionDuration\").textContent =\n    `${new Date().getTime() - startTime} ms`;\n}\n\nfunction addDefault() {\n  const transaction = {\n    add: getRowData(1).map((row) => ({ ...row, updatedBy: \"default\" })),\n    update: [{ id: 2, make: \"Default\", updatedBy: \"default\" }],\n  };\n  gridApi.setGridOption(\"deltaSort\", false);\n  const startTime = new Date().getTime();\n  gridApi.applyTransaction(transaction);\n  document.getElementById(\"transactionDuration\").textContent =\n    `${new Date().getTime() - startTime} ms`;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const eGridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(eGridDiv, gridOptions);\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div>\n            <button onclick=\"addDefault()\">Default Transaction</button>\n            <button onclick=\"addDelta()\">Delta Transaction</button>\n            Transaction took: <span id=\"transactionDuration\">N/A</span>\n        </div>\n    </div>\n    <div id=\"myGrid\" class=\"test-grid\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}