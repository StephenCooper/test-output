{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"styles.css":".test-grid {\n    height: 1px;\n    min-height: 1px;\n    flex-grow: 1;\n}\n\n.test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    margin-bottom: 1rem;\n}\n\n.test-header button:not(:first-child) {\n    margin-left: 5px;\n}\n","data.ts":"const LINUX_DISTROS = [\n    'Manjaro',\n    'MX Linux',\n    'Mint',\n    'elementary',\n    'Ubuntu',\n    'Debian',\n    'Fedora',\n    'Solus',\n    'openSUSE',\n    'Zorin',\n    'ReactOS',\n    'CentOS',\n    'Arch',\n    'KDE neon',\n    'deepin',\n    'antiX',\n    'Antergos',\n    'Kali',\n    'Parrot',\n    'Lite',\n    'ArcoLinux',\n    'FreeBSD',\n    'Ubuntu Kylin',\n    'Lubuntu',\n    'SparkyLinux',\n    'Peppermint',\n    'SmartOS',\n    'PCLinuxOS',\n    'Mageia',\n    'Endless',\n];\n\nconst CITIES = [\n    'Tokyo',\n    'Jakarta',\n    'Delhi',\n    'Manila',\n    'Seoul',\n    'Shanghai',\n    'Mumbai',\n    'New York',\n    'Beijing',\n    'Sao Paulo',\n    'Mexico City',\n    'Guangzhou',\n    'Dhaka',\n    'Osaka-Kobe-Kyoto',\n    'Moscow',\n    'Cairo',\n    'Bangkok',\n    'Los Angeles',\n    'Buenos Aires',\n];\n\nconst LAPTOPS = ['Hewlett Packard', 'Lenovo', 'Dell', 'Asus', 'Apple', 'Acer', 'Microsoft', 'Razer'];\n\nlet idCounter = 0;\n\nfunction letter(i: number) {\n    return 'abcdefghijklmnopqrstuvwxyz'.substring(i, i + 1);\n}\n\nfunction randomLetter() {\n    return letter(Math.floor(Math.random() * 26 + 1));\n}\n\nexport function createDataItem(\n    name: string,\n    distro: string,\n    laptop: string,\n    city: string,\n    value: number,\n    idToUse: number | undefined = undefined\n): any {\n    const id = idToUse != null ? idToUse : idCounter++;\n    return {\n        id: id,\n        name: name,\n        city: city,\n        distro: distro,\n        laptop: laptop,\n        value: value,\n    };\n}\n\nexport function getData() {\n    const myRowData = [];\n    for (let i = 0; i < 10000; i++) {\n        const name =\n            'Mr ' +\n            randomLetter().toUpperCase() +\n            ' ' +\n            randomLetter().toUpperCase() +\n            randomLetter() +\n            randomLetter() +\n            randomLetter() +\n            randomLetter();\n        const city = CITIES[i % CITIES.length];\n        const distro = LINUX_DISTROS[i % LINUX_DISTROS.length] + ' v' + Math.floor(Math.random() * 100 + 1) / 10;\n        const university = LAPTOPS[i % LAPTOPS.length];\n        const value = Math.floor(Math.random() * 100) + 10; // between 10 and 110\n        myRowData.push(createDataItem(name, distro, university, city, value));\n    }\n    return myRowData;\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","app.component.ts":"import { Component } from \"@angular/core\";\nimport { AgGridAngular } from \"ag-grid-angular\";\nimport \"./styles.css\";\nimport {\n  ClientSideRowModelApiModule,\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  CustomFilterModule,\n  GetRowIdFunc,\n  GetRowIdParams,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  HighlightChangesModule,\n  IAggFuncParams,\n  IDoesFilterPassParams,\n  IFilterComp,\n  IFilterParams,\n  IFilterType,\n  IsGroupOpenByDefaultParams,\n  ModuleRegistry,\n  RowSelectionModule,\n  RowSelectionOptions,\n  TextFilterModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { RowGroupingModule } from \"ag-grid-enterprise\";\nimport { createDataItem, getData } from \"./data\";\nModuleRegistry.registerModules([\n  ClientSideRowModelApiModule,\n  TextFilterModule,\n  RowSelectionModule,\n  HighlightChangesModule,\n  ClientSideRowModelModule,\n  RowGroupingModule,\n  CustomFilterModule,\n  ValidationModule /* Development Only */,\n]);\n\n@Component({\n  selector: \"my-app\",\n  standalone: true,\n  imports: [AgGridAngular],\n  template: `<div class=\"test-container\">\n    <div class=\"test-header\">\n      <button (click)=\"onBtUpdate()\">Update</button>\n      <button (click)=\"onBtDuplicate()\">Duplicate</button>\n      <button (click)=\"onBtDelete()\">Delete</button>\n      <button (click)=\"onBtClearSelection()\">Clear Selection</button>\n    </div>\n    <ag-grid-angular\n      style=\"width: 100%; height: 100%;\"\n      class=\"test-grid\"\n      [getRowId]=\"getRowId\"\n      [columnDefs]=\"columnDefs\"\n      [defaultColDef]=\"defaultColDef\"\n      [rowSelection]=\"rowSelection\"\n      [autoGroupColumnDef]=\"autoGroupColumnDef\"\n      [isGroupOpenByDefault]=\"isGroupOpenByDefault\"\n      [rowData]=\"rowData\"\n      (gridReady)=\"onGridReady($event)\"\n    />\n  </div> `,\n})\nexport class AppComponent {\n  private gridApi!: GridApi;\n\n  columnDefs: ColDef[] = [\n    { field: \"city\", rowGroup: true, hide: true },\n    { field: \"laptop\", rowGroup: true, hide: true },\n    { field: \"distro\", sort: \"asc\", comparator: myComparator },\n    {\n      field: \"value\",\n      enableCellChangeFlash: true,\n      aggFunc: myAggFunc,\n      filter: myFilter,\n    },\n  ];\n  defaultColDef: ColDef = {\n    flex: 1,\n    filter: true,\n  };\n  rowSelection: RowSelectionOptions | \"single\" | \"multiple\" = {\n    mode: \"multiRow\",\n    groupSelects: \"descendants\",\n    headerCheckbox: false,\n  };\n  autoGroupColumnDef: ColDef = {\n    field: \"name\",\n  };\n  rowData!: any[];\n\n  onBtDuplicate() {\n    // get the first child of the\n    const selectedRows = this.gridApi.getSelectedRows();\n    if (!selectedRows || selectedRows.length === 0) {\n      console.log(\"No rows selected!\");\n      return;\n    }\n    const newItems: any = [];\n    selectedRows.forEach((selectedRow) => {\n      const newItem = createDataItem(\n        selectedRow.name,\n        selectedRow.distro,\n        selectedRow.laptop,\n        selectedRow.city,\n        selectedRow.value,\n      );\n      newItems.push(newItem);\n    });\n    timeOperation(\"Duplicate\", () => {\n      this.gridApi.applyTransaction({ add: newItems });\n    });\n  }\n\n  onBtUpdate() {\n    // get the first child of the\n    const selectedRows = this.gridApi.getSelectedRows();\n    if (!selectedRows || selectedRows.length === 0) {\n      console.log(\"No rows selected!\");\n      return;\n    }\n    const updatedItems: any[] = [];\n    selectedRows.forEach((oldItem) => {\n      const newValue = Math.floor(Math.random() * 100) + 10;\n      const newItem = createDataItem(\n        oldItem.name,\n        oldItem.distro,\n        oldItem.laptop,\n        oldItem.city,\n        newValue,\n        oldItem.id,\n      );\n      updatedItems.push(newItem);\n    });\n    timeOperation(\"Update\", () => {\n      this.gridApi.applyTransaction({ update: updatedItems });\n    });\n  }\n\n  onBtDelete() {\n    // get the first child of the\n    const selectedRows = this.gridApi.getSelectedRows();\n    if (!selectedRows || selectedRows.length === 0) {\n      console.log(\"No rows selected!\");\n      return;\n    }\n    timeOperation(\"Delete\", () => {\n      this.gridApi.applyTransaction({ remove: selectedRows });\n    });\n  }\n\n  onBtClearSelection() {\n    this.gridApi.deselectAll();\n  }\n\n  onGridReady(params: GridReadyEvent) {\n    this.gridApi = params.api;\n\n    params.api.setFilterModel({\n      value: { value: \"50\" },\n    });\n    timeOperation(\"Initialisation\", () => {\n      params.api.setGridOption(\"rowData\", getData());\n    });\n  }\n\n  getRowId = (params: GetRowIdParams) => {\n    return String(params.data.id);\n  };\n\n  isGroupOpenByDefault = (\n    params: IsGroupOpenByDefaultParams<IOlympicData, any>,\n  ) => {\n    return [\"Delhi\", \"Seoul\"].includes(params.key);\n  };\n}\n\nlet aggCallCount = 0;\nlet compareCallCount = 0;\nlet filterCallCount = 0;\nfunction myAggFunc(params: IAggFuncParams) {\n  aggCallCount++;\n  let total = 0;\n  for (let i = 0; i < params.values.length; i++) {\n    total += params.values[i];\n  }\n  return total;\n}\nfunction myComparator(a: any, b: any) {\n  compareCallCount++;\n  return a < b ? -1 : 1;\n}\nfunction getMyFilter(): IFilterType {\n  class MyFilter implements IFilterComp {\n    filterParams!: IFilterParams;\n    filterValue!: number | null;\n    eGui: any;\n    eInput: any;\n    init(params: IFilterParams) {\n      this.filterParams = params;\n      this.filterValue = null;\n      this.eGui = document.createElement(\"div\");\n      this.eGui.innerHTML = '<div>Greater Than: <input type=\"text\"/></div>';\n      this.eInput = this.eGui.querySelector(\"input\");\n      this.eInput.addEventListener(\"input\", () => {\n        this.getValueFromInput();\n        params.filterChangedCallback();\n      });\n    }\n    getGui() {\n      return this.eGui;\n    }\n    getValueFromInput() {\n      const value = parseInt(this.eInput.value);\n      this.filterValue = isNaN(value) ? null : value;\n    }\n    setModel(model: any) {\n      this.eInput.value = model == null ? null : model.value;\n      this.getValueFromInput();\n    }\n    getModel() {\n      if (!this.isFilterActive()) {\n        return null;\n      }\n      return { value: this.eInput.value };\n    }\n    isFilterActive() {\n      return this.filterValue !== null;\n    }\n    doesFilterPass(params: IDoesFilterPassParams) {\n      filterCallCount++;\n      const { node } = params;\n      const value = this.filterParams.getValue(node);\n      return value > (this.filterValue || 0);\n    }\n  }\n  return MyFilter;\n}\nconst myFilter = getMyFilter();\nfunction timeOperation(name: string, operation: any) {\n  aggCallCount = 0;\n  compareCallCount = 0;\n  filterCallCount = 0;\n  const start = new Date().getTime();\n  operation();\n  const end = new Date().getTime();\n  console.log(\n    name +\n      \" finished in \" +\n      (end - start) +\n      \"ms, aggCallCount = \" +\n      aggCallCount +\n      \", compareCallCount = \" +\n      compareCallCount +\n      \", filterCallCount = \" +\n      filterCallCount,\n  );\n}\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^19';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/core/primitives/event-dispatch':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/event-dispatch.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"@angular/core":"^19","@angular/common":"^19","@angular/forms":"^19","@angular/platform-browser":"^19","ag-grid-angular":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}