{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"country\", rowGroup: true, enableRowGroup: true },\n    { field: \"sport\", pivot: true, enablePivot: true },\n    { field: \"year\", pivot: true, enablePivot: true },\n    { field: \"gold\", aggFunc: \"sum\", enableValue: true },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 130,\n  },\n  autoGroupColumnDef: {\n    minWidth: 200,\n  },\n  pivotMode: true,\n  pivotPanelShow: \"onlyWhenPivoting\",\n\n  sideBar: {\n    defaultToolPanel: \"columns\",\n    toolPanels: [\n      {\n        id: \"columns\",\n        labelDefault: \"Columns\",\n        labelKey: \"columns\",\n        iconKey: \"columns\",\n        toolPanel: \"agColumnsToolPanel\",\n        toolPanelParams: {\n          suppressPivots: true,\n          suppressPivotMode: true,\n        },\n      },\n    ],\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}