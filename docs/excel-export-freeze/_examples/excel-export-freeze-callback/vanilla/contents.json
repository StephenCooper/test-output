{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".option {\n    display: block;\n    margin: 5px 10px 5px 0;\n}\n\n.grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n.columns {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 16px;\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete Details\",\n    children: [\n      {\n        field: \"athlete\",\n        width: 180,\n      },\n      {\n        field: \"age\",\n        width: 90,\n      },\n      { headerName: \"Country\", field: \"country\", width: 140 },\n    ],\n  },\n  {\n    headerName: \"Sports Results\",\n    children: [\n      { field: \"sport\", width: 140 },\n      {\n        columnGroupShow: \"closed\",\n        field: \"total\",\n        width: 100,\n      },\n      {\n        columnGroupShow: \"open\",\n        field: \"gold\",\n        width: 100,\n      },\n      {\n        columnGroupShow: \"open\",\n        field: \"silver\",\n        width: 100,\n      },\n      {\n        columnGroupShow: \"open\",\n        field: \"bronze\",\n        width: 100,\n      },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  // debug: true,\n  columnDefs: columnDefs,\n  defaultExcelExportParams: {\n    freezeRows: (params) => {\n      const node = params.node;\n      if (node == null) {\n        return true;\n      }\n      return node.rowIndex < 20;\n    },\n    freezeColumns: (params) => params.column.getColId() !== \"sport\",\n  },\n};\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"container\">\n    <div class=\"columns\">\n        <div>\n            <button onclick=\"onBtExport()\" style=\"font-weight: bold\">Export to Excel</button>\n        </div>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}