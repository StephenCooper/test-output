{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["medalRendererComponent.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n\n.total-value-renderer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n","medalRendererComponent.js":"\nclass MedalRenderer  {\n    eGui;\n    eButton;\n    buttonListener;\n    total;\n\n    init(params) {\n        this.total = params.data.total;\n\n        this.eGui = document.createElement('span');\n        this.eGui.classList.add('total-value-renderer');\n\n        const label = document.createElement('span');\n        label.innerText = params.valueFormatted ? params.valueFormatted : params.value;\n        this.eGui.appendChild(label);\n\n        this.eButton = document.createElement('button');\n        this.buttonListener = this.buttonClicked.bind(this);\n        this.eButton.addEventListener('click', this.buttonListener);\n        this.eButton.textContent = 'Push For Total';\n\n        this.eGui.appendChild(label);\n        this.eGui.appendChild(this.eButton);\n    }\n\n    buttonClicked() {\n        alert(`${this.total} medals won!`);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        return false;\n    }\n\n    destroy() {\n        this.eButton.removeEventListener('click', this.buttonListener);\n    }\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: \"Component By Name\",\n      field: \"country\",\n      cellRenderer: \"medalRenderer\",\n    },\n    {\n      headerName: \"Component By Direct Reference\",\n      field: \"country\",\n      cellRenderer: MedalRenderer,\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  components: {\n    medalRenderer: MedalRenderer,\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}