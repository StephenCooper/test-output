{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":true,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".wrapper {\n    display: grid;\n    grid-template-rows: 1fr 370px;\n    height: 100%;\n}\n\n#myGrid {\n    grid-row: 1 / 2;\n}\n\n#myChart {\n    grid-row: 2 / 3;\n}\n","data.js":"function generateData() {\n    return [\n        { division: 'Sales', resource: 'Online sales', revenue: 1587123, expenses: 151497, headcount: 168 },\n        { division: 'Sales', resource: 'Retail stores', revenue: 1304696, expenses: 389271, headcount: 783 },\n        { division: 'Marketing', resource: 'Online marketing', revenue: 65829, expenses: 185736, headcount: 59 },\n        { division: 'Marketing', resource: 'Public relations', revenue: 152696, expenses: 182745, headcount: 37 },\n        { division: 'Operations', resource: 'Customer service', revenue: 0, expenses: 258392, headcount: 72 },\n        { division: 'Operations', resource: 'Logistics', revenue: 134830, expenses: 412378, headcount: 48 },\n        { division: 'Operations', resource: 'Human resources', revenue: 0, expenses: 179364, headcount: 16 },\n        { division: 'Operations', resource: 'Legal', revenue: 49794, expenses: 152638, headcount: 12 },\n        { division: 'Operations', resource: 'Quality assurance', revenue: 0, expenses: 213572, headcount: 27 },\n        { division: 'Operations', resource: 'Sales operations', revenue: 116543, expenses: 359812, headcount: 52 },\n        { division: 'Finance', resource: 'Accounting', revenue: 0, expenses: 209573, headcount: 14 },\n        { division: 'Finance', resource: 'Loans', revenue: 117451, expenses: 327198, headcount: 23 },\n        { division: 'Finance', resource: 'Investments', revenue: 217451, expenses: 37198, headcount: 6 },\n    ];\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"division\", width: 150, rowGroup: true, hide: true },\n    { field: \"resource\", width: 150, hide: true },\n    { field: \"revenue\" },\n    { field: \"expenses\" },\n    { field: \"headcount\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n  },\n  rowData: generateData(),\n  cellSelection: true,\n  popupParent: document.body,\n  enableCharts: true,\n  groupDefaultExpanded: 1,\n  chartThemeOverrides: {\n    bar: {\n      axes: {\n        category: {\n          label: {\n            fontSize: 8,\n          },\n        },\n      },\n    },\n  },\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction onFirstDataRendered(params) {\n  params.api.createRangeChart({\n    chartContainer: document.querySelector(\"#myChart\"),\n    cellRange: {\n      rowStartIndex: 0,\n      rowEndIndex: 16,\n      columns: [\"expenses\"],\n    },\n    chartType: \"groupedColumn\",\n    aggFunc: \"sum\",\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(\n    gridDiv,\n    gridOptions,\n  ); /** DARK INTEGRATED START **/\n  const isInitialModeDark =\n    document.documentElement.dataset.agThemeMode?.includes(\"dark\");\n\n  const updateChartThemes = (isDark) => {\n    const themes = [\n      \"ag-default\",\n      \"ag-material\",\n      \"ag-sheets\",\n      \"ag-polychroma\",\n      \"ag-vivid\",\n    ];\n    const currentThemes = gridApi.getGridOption(\"chartThemes\");\n    const customTheme =\n      currentThemes &&\n      currentThemes.some((theme) => theme.startsWith(\"my-custom-theme\"));\n\n    let modifiedThemes = customTheme\n      ? isDark\n        ? [\"my-custom-theme-dark\", \"my-custom-theme-light\"]\n        : [\"my-custom-theme-light\", \"my-custom-theme-dark\"]\n      : Array.from(\n          new Set(themes.map((theme) => theme + (isDark ? \"-dark\" : \"\"))),\n        );\n\n    // updating the 'chartThemes' grid option will cause the chart to reactively update!\n    gridApi.setGridOption(\"chartThemes\", modifiedThemes);\n  };\n\n  // update chart themes when example first loads\n  let initialSet = false;\n  const maxTries = 5;\n  let tries = 0;\n  const trySetInitial = (delay) => {\n    if (gridApi) {\n      initialSet = true;\n      updateChartThemes(isInitialModeDark);\n    } else {\n      if (tries < maxTries) {\n        setTimeout(() => trySetInitial(), 250);\n        tries++;\n      }\n    }\n  };\n  trySetInitial(0);\n\n  const handleColorSchemeChange = (event) => {\n    const { darkMode } = event.detail;\n    updateChartThemes(darkMode);\n  };\n\n  // listen for user-triggered dark mode changes (not removing listener is fine here!)\n  document.addEventListener(\"color-scheme-change\", handleColorSchemeChange);\n  /** DARK INTEGRATED END **/\n});\n","index.html":"<div class=\"wrapper\">\n    <div id=\"myGrid\" class=\"my-grid\"></div>\n    <div id=\"myChart\" class=\"my-chart\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0","ag-charts-community":"latest","ag-charts-enterprise":"latest"}}}