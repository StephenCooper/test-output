{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".page-wrapper {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n.grid-wrapper {\n    flex: 1 1 0px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: \"date\",\n      headerName: \"ISO Format\",\n      cellClass: \"dateISO\",\n      minWidth: 150,\n    },\n    {\n      field: \"date\",\n      headerName: \"dd/mm/yy\",\n      cellClass: \"dateUK\",\n      valueFormatter: (params) => {\n        const date = new Date(params.value);\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const year = date.getFullYear().toString().substring(2);\n        return day + \"/\" + month + \"/\" + year;\n      },\n    },\n    {\n      field: \"date\",\n      headerName: \"mm/dd/yy\",\n      cellClass: \"dateUS\",\n      valueFormatter: (params) => {\n        const date = new Date(params.value);\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const year = date.getFullYear().toString().substring(2);\n        return month + \"/\" + day + \"/\" + year;\n      },\n    },\n    {\n      field: \"date\",\n      headerName: \"dd/mm/yyy h:mm:ss AM/PM\",\n      cellClass: \"dateLong\",\n      minWidth: 150,\n      valueFormatter: (params) => {\n        const date = new Date(params.value);\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const year = date.getFullYear().toString();\n        const hourNum = date.getHours() % 12;\n        const hour = (hourNum === 0 ? 12 : hourNum).toString().padStart(2, \"0\");\n        const min = date.getMinutes().toString().padStart(2, \"0\");\n        const sec = date.getSeconds().toString().padStart(2, \"0\");\n        const amPM = date.getHours() < 12 ? \"AM\" : \"PM\";\n\n        return (\n          day +\n          \"/\" +\n          month +\n          \"/\" +\n          year +\n          \" \" +\n          hour +\n          \":\" +\n          min +\n          \":\" +\n          sec +\n          \" \" +\n          amPM\n        );\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  excelStyles: [\n    {\n      id: \"dateISO\",\n      dataType: \"DateTime\",\n      numberFormat: {\n        format: \"yyy-mm-ddThh:mm:ss\",\n      },\n    },\n    {\n      id: \"dateUK\",\n      dataType: \"DateTime\",\n      numberFormat: {\n        format: \"dd/mm/yy\",\n      },\n    },\n    {\n      id: \"dateUS\",\n      dataType: \"DateTime\",\n      numberFormat: {\n        format: \"mm/dd/yy\",\n      },\n    },\n    {\n      id: \"dateLong\",\n      dataType: \"DateTime\",\n      numberFormat: {\n        format: \"dd/mm/yyy h:mm:ss AM/PM\",\n      },\n    },\n  ],\n  rowData: [\n    { date: \"2020-05-30T10:01:00\" },\n    { date: \"2015-04-21T16:30:00\" },\n    { date: \"2010-02-19T12:02:00\" },\n    { date: \"1995-10-04T03:27:00\" },\n  ],\n};\n\nfunction onBtnExportDataAsExcel() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"page-wrapper\">\n    <div>\n        <button onclick=\"onBtnExportDataAsExcel()\" style=\"margin-bottom: 5px; font-weight: bold\">\n            Export to Excel\n        </button>\n    </div>\n\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\" style=\"height: 100%\"></div>\n    </div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}