{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0;\n    width: 100%;\n}\n\n.example-header {\n    display: flex;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    align-items: center;\n    margin-bottom: 5px;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { headerName: \"provided\", field: \"rawValue\" },\n    { headerName: \"number\", field: \"rawValue\", cellClass: \"numberType\" },\n    { headerName: \"currency\", field: \"rawValue\", cellClass: \"currencyFormat\" },\n    { headerName: \"boolean\", field: \"rawValue\", cellClass: \"booleanType\" },\n    {\n      headerName: \"Negative\",\n      field: \"negativeValue\",\n      cellClass: \"negativeInBrackets\",\n    },\n    { headerName: \"string\", field: \"rawValue\", cellClass: \"stringType\" },\n    {\n      headerName: \"Date\",\n      field: \"dateValue\",\n      cellClass: \"dateType\",\n      minWidth: 220,\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  rowData: [\n    {\n      rawValue: 1,\n      negativeValue: -10,\n      dateValue: \"2009-04-20T00:00:00.000\",\n    },\n  ],\n  excelStyles: [\n    {\n      id: \"numberType\",\n      numberFormat: {\n        format: \"0\",\n      },\n    },\n    {\n      id: \"currencyFormat\",\n      numberFormat: {\n        format: \"#,##0.00 â‚¬\",\n      },\n    },\n    {\n      id: \"negativeInBrackets\",\n      numberFormat: {\n        format: \"$[blue] #,##0;$ [red](#,##0)\",\n      },\n    },\n    {\n      id: \"booleanType\",\n      dataType: \"Boolean\",\n    },\n    {\n      id: \"stringType\",\n      dataType: \"String\",\n    },\n    {\n      id: \"dateType\",\n      dataType: \"DateTime\",\n    },\n  ],\n  popupParent: document.body,\n};\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <button onclick=\"onBtExport()\" style=\"font-weight: bold\">Export to Excel</button>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}