{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["style.css"],"files":{"style.css":".ag-checkbox-input-wrapper {\n    border-radius: 4px;\n    /** You can reference theme parameters like `foregroundColor` in\n        your CSS, add the --ag- prefix and convert to kebab-case */\n    box-shadow: 0 0 10px var(--ag-foreground-color);\n    width: 16px;\n    height: 16px;\n\n    &.ag-checked {\n        box-shadow: 0 0 5px 4px red;\n        &::before {\n            content: 'âœ”';\n            position: absolute;\n            pointer-events: none;\n            inset: 0;\n            text-align: center;\n            line-height: 16px;\n            font-size: 14px;\n        }\n    }\n}\n\n.ag-checkbox-input {\n    width: 16px;\n    height: 16px;\n    margin: 0;\n    appearance: none;\n    -webkit-appearance: none;\n    border-radius: 4px;\n\n    &:focus {\n        box-shadow: 0 0 3px 3px yellow;\n        outline: none;\n    }\n}\n","main.js":"const myCustomTheme = agGrid.themeQuartz.withoutPart(\"checkboxStyle\");\n\nconst columnDefs = [{ field: \"make\" }, { field: \"model\" }, { field: \"price\" }];\n\nconst rowData = (() => {\n  const rowData = [];\n  for (let i = 0; i < 10; i++) {\n    rowData.push({ make: \"Toyota\", model: \"Celica\", price: 35000 + i * 1000 });\n    rowData.push({ make: \"Ford\", model: \"Mondeo\", price: 32000 + i * 1000 });\n    rowData.push({\n      make: \"Porsche\",\n      model: \"Boxster\",\n      price: 72000 + i * 1000,\n    });\n  }\n  return rowData;\n})();\n\nconst gridOptions = {\n  theme: myCustomTheme,\n  columnDefs,\n  rowData,\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  },\n  initialState: {\n    rowSelection: [\"1\", \"2\", \"3\"],\n  },\n  rowSelection: { mode: \"multiRow\", checkboxes: true },\n};\n\nagGrid.createGrid(document.querySelector(\"#myGrid\"), gridOptions);\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}