{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"main.ts","scriptFiles":[],"styleFiles":[],"files":{"main.ts":"import { computed, createApp, defineComponent, ref } from \"vue\";\n\nimport type { ColDef } from \"ag-grid-community\";\nimport {\n  AllCommunityModule,\n  ModuleRegistry,\n  colorSchemeDark,\n  colorSchemeDarkBlue,\n  colorSchemeDarkWarm,\n  colorSchemeLight,\n  colorSchemeLightCold,\n  colorSchemeLightWarm,\n  colorSchemeVariable,\n  iconSetAlpine,\n  iconSetMaterial,\n  iconSetQuartzBold,\n  iconSetQuartzLight,\n  iconSetQuartzRegular,\n  themeAlpine,\n  themeBalham,\n  themeQuartz,\n} from \"ag-grid-community\";\nimport { AllEnterpriseModule } from \"ag-grid-enterprise\";\nimport { AgGridVue } from \"ag-grid-vue3\";\n\nModuleRegistry.registerModules([AllCommunityModule, AllEnterpriseModule]);\n\nconst baseThemes = [\n  { id: \"themeQuartz\", theme: themeQuartz },\n  { id: \"themeBalham\", theme: themeBalham },\n  { id: \"themeAlpine\", theme: themeAlpine },\n];\n\nconst colorSchemes = [\n  { id: \"(unchanged)\", part: null },\n  { id: \"colorSchemeLight\", part: colorSchemeLight },\n  { id: \"colorSchemeLightCold\", part: colorSchemeLightCold },\n  { id: \"colorSchemeLightWarm\", part: colorSchemeLightWarm },\n  { id: \"colorSchemeDark\", part: colorSchemeDark },\n  { id: \"colorSchemeDarkWarm\", part: colorSchemeDarkWarm },\n  { id: \"colorSchemeDarkBlue\", part: colorSchemeDarkBlue },\n  { id: \"colorSchemeVariable\", part: colorSchemeVariable },\n];\n\nconst iconSets = [\n  { id: \"(unchanged)\", part: null },\n  { id: \"iconSetQuartzLight\", part: iconSetQuartzLight },\n  { id: \"iconSetQuartzRegular\", part: iconSetQuartzRegular },\n  { id: \"iconSetQuartzBold\", part: iconSetQuartzBold },\n  { id: \"iconSetAlpine\", part: iconSetAlpine },\n  { id: \"iconSetMaterial\", part: iconSetMaterial },\n];\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%; display: flex; flex-direction: column\">\n            <p style=\"flex: 0 1 0%\">\n                Theme:\n                <select style=\"margin-right: 16px\" v-model=\"baseTheme\">\n                    <option v-for=\"t in baseThemes\" :value=\"t\">{{ t.id }}</option>\n                </select>\n                Icons:\n                <select style=\"margin-right: 16px\" v-model=\"iconSet\">\n                    <option v-for=\"iconSet in iconSets\" :value=\"iconSet\">{{ iconSet.id }}</option>\n                </select>\n                Color scheme:\n                <select style=\"margin-right: 16px\" v-model=\"colorScheme\">\n                    <option v-for=\"colorScheme in colorSchemes\" :value=\"colorScheme\">{{ colorScheme.id }}</option>\n                </select>\n            </p>\n            <div style=\"flex: 1 1 0%\">\n                <ag-grid-vue\n                    style=\"height: 100%;\"\n                    :theme=\"theme\"\n                    :columnDefs=\"columnDefs\"\n                    :defaultColDef=\"defaultColDef\"\n                    :rowData=\"rowData\"\n                    :sideBar=\"true\"\n                ></ag-grid-vue>\n            </div>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n  },\n  setup(props) {\n    const baseTheme = ref(baseThemes[0]);\n    const iconSet = ref(iconSets[0]);\n    const colorScheme = ref(colorSchemes[0]);\n    return {\n      baseTheme,\n      baseThemes,\n\n      iconSet,\n      iconSets,\n\n      colorSchemes,\n      colorScheme,\n\n      theme: computed(() => {\n        let theme = baseTheme.value.theme;\n        if (colorScheme.value.part) {\n          theme = theme.withPart(colorScheme.value.part);\n        }\n        if (iconSet.value.part) {\n          theme = theme.withPart(iconSet.value.part);\n        }\n        return theme;\n      }),\n\n      columnDefs: <ColDef[]>[\n        { field: \"make\" },\n        { field: \"model\" },\n        { field: \"price\" },\n      ],\n      defaultColDef: <ColDef>{\n        editable: true,\n        flex: 1,\n        minWidth: 100,\n        filter: true,\n      },\n      rowData: (() => {\n        const rowData = [];\n        for (let i = 0; i < 10; i++) {\n          rowData.push({\n            make: \"Toyota\",\n            model: \"Celica\",\n            price: 35000 + i * 1000,\n          });\n          rowData.push({\n            make: \"Ford\",\n            model: \"Mondeo\",\n            price: 32000 + i * 1000,\n          });\n          rowData.push({\n            make: \"Porsche\",\n            model: \"Boxster\",\n            price: 72000 + i * 1000,\n          });\n        }\n        return rowData;\n      })(),\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}