{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"app.component.ts","styleFiles":[],"files":{"data.ts":"export function getData(): any[] {\n    return [\n        {\n            athlete: 'Michael Phelps',\n            age: 23,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 8,\n            silver: 0,\n            bronze: 0,\n            total: 8,\n        },\n        {\n            athlete: 'Michael Phelps',\n            age: 19,\n            country: 'United States',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 6,\n            silver: 0,\n            bronze: 2,\n            total: 8,\n        },\n        {\n            athlete: 'Michael Phelps',\n            age: 27,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 4,\n            silver: 2,\n            bronze: 0,\n            total: 6,\n        },\n        {\n            athlete: 'Natalie Coughlin',\n            age: 25,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 2,\n            bronze: 3,\n            total: 6,\n        },\n        {\n            athlete: 'Aleksey Nemov',\n            age: 24,\n            country: 'Russia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Gymnastics',\n            gold: 2,\n            silver: 1,\n            bronze: 3,\n            total: 6,\n        },\n        {\n            athlete: 'Alicia Coutts',\n            age: 24,\n            country: 'Australia',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 3,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Missy Franklin',\n            age: 17,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 4,\n            silver: 0,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Ryan Lochte',\n            age: 27,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 2,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Allison Schmitt',\n            age: 22,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 3,\n            silver: 1,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Natalie Coughlin',\n            age: 21,\n            country: 'United States',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 2,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Ian Thorpe',\n            age: 17,\n            country: 'Australia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 3,\n            silver: 2,\n            bronze: 0,\n            total: 5,\n        },\n        {\n            athlete: 'Dara Torres',\n            age: 33,\n            country: 'United States',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 0,\n            bronze: 3,\n            total: 5,\n        },\n        {\n            athlete: 'Cindy Klassen',\n            age: 26,\n            country: 'Canada',\n            year: 2006,\n            date: '26/02/2006',\n            sport: 'Speed Skating',\n            gold: 1,\n            silver: 2,\n            bronze: 2,\n            total: 5,\n        },\n        {\n            athlete: 'Nastia Liukin',\n            age: 18,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Gymnastics',\n            gold: 1,\n            silver: 3,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Marit Bj√∏rgen',\n            age: 29,\n            country: 'Norway',\n            year: 2010,\n            date: '28/02/2010',\n            sport: 'Cross Country Skiing',\n            gold: 3,\n            silver: 1,\n            bronze: 1,\n            total: 5,\n        },\n        {\n            athlete: 'Sun Yang',\n            age: 20,\n            country: 'China',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Kirsty Coventry',\n            age: 24,\n            country: 'Zimbabwe',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 3,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Libby Lenton-Trickett',\n            age: 23,\n            country: 'Australia',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Ryan Lochte',\n            age: 24,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 0,\n            bronze: 2,\n            total: 4,\n        },\n        {\n            athlete: 'Inge de Bruijn',\n            age: 30,\n            country: 'Netherlands',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 1,\n            bronze: 2,\n            total: 4,\n        },\n        {\n            athlete: 'Petria Thomas',\n            age: 28,\n            country: 'Australia',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 3,\n            silver: 1,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Ian Thorpe',\n            age: 21,\n            country: 'Australia',\n            year: 2004,\n            date: '29/08/2004',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Inge de Bruijn',\n            age: 27,\n            country: 'Netherlands',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 3,\n            silver: 1,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Gary Hall Jr.',\n            age: 25,\n            country: 'United States',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Michael Klim',\n            age: 23,\n            country: 'Australia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 2,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: \"Susie O'Neill\",\n            age: 27,\n            country: 'Australia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 3,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Jenny Thompson',\n            age: 27,\n            country: 'United States',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 3,\n            silver: 0,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Pieter van den Hoogenband',\n            age: 22,\n            country: 'Netherlands',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 0,\n            bronze: 2,\n            total: 4,\n        },\n        {\n            athlete: 'An Hyeon-Su',\n            age: 20,\n            country: 'South Korea',\n            year: 2006,\n            date: '26/02/2006',\n            sport: 'Short-Track Speed Skating',\n            gold: 3,\n            silver: 0,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Aliya Mustafina',\n            age: 17,\n            country: 'Russia',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Gymnastics',\n            gold: 1,\n            silver: 1,\n            bronze: 2,\n            total: 4,\n        },\n        {\n            athlete: 'Shawn Johnson',\n            age: 16,\n            country: 'United States',\n            year: 2008,\n            date: '24/08/2008',\n            sport: 'Gymnastics',\n            gold: 1,\n            silver: 3,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Dmitry Sautin',\n            age: 26,\n            country: 'Russia',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Diving',\n            gold: 1,\n            silver: 1,\n            bronze: 2,\n            total: 4,\n        },\n        {\n            athlete: 'Leontien Zijlaard-van Moorsel',\n            age: 30,\n            country: 'Netherlands',\n            year: 2000,\n            date: '01/10/2000',\n            sport: 'Cycling',\n            gold: 3,\n            silver: 1,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Petter Northug Jr.',\n            age: 24,\n            country: 'Norway',\n            year: 2010,\n            date: '28/02/2010',\n            sport: 'Cross Country Skiing',\n            gold: 2,\n            silver: 1,\n            bronze: 1,\n            total: 4,\n        },\n        {\n            athlete: 'Ole Einar Bj√∏rndalen',\n            age: 28,\n            country: 'Norway',\n            year: 2002,\n            date: '24/02/2002',\n            sport: 'Biathlon',\n            gold: 4,\n            silver: 0,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Janica Kostelic',\n            age: 20,\n            country: 'Croatia',\n            year: 2002,\n            date: '24/02/2002',\n            sport: 'Alpine Skiing',\n            gold: 3,\n            silver: 1,\n            bronze: 0,\n            total: 4,\n        },\n        {\n            athlete: 'Nathan Adrian',\n            age: 23,\n            country: 'United States',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Yannick Agnel',\n            age: 20,\n            country: 'France',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 2,\n            silver: 1,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Brittany Elmslie',\n            age: 18,\n            country: 'Australia',\n            year: 2012,\n            date: '12/08/2012',\n            sport: 'Swimming',\n            gold: 1,\n            silver: 2,\n            bronze: 0,\n            total: 3,\n        },\n    ];\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","app.component.ts":"import { Component } from \"@angular/core\";\nimport { AgGridAngular } from \"ag-grid-angular\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  ColumnApiModule,\n  GetRowIdFunc,\n  GetRowIdParams,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  NumberFilterModule,\n  RowDragModule,\n  RowDragMoveEvent,\n  TextFilterModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { getData } from \"./data\";\nModuleRegistry.registerModules([\n  RowDragModule,\n  TextFilterModule,\n  NumberFilterModule,\n  ClientSideRowModelModule,\n  ColumnApiModule,\n  ValidationModule /* Development Only */,\n]);\n\n@Component({\n  selector: \"my-app\",\n  standalone: true,\n  imports: [AgGridAngular],\n  template: `<ag-grid-angular\n    style=\"width: 100%; height: 100%;\"\n    [columnDefs]=\"columnDefs\"\n    [defaultColDef]=\"defaultColDef\"\n    [getRowId]=\"getRowId\"\n    [rowData]=\"rowData\"\n    (sortChanged)=\"onSortChanged($event)\"\n    (filterChanged)=\"onFilterChanged($event)\"\n    (rowDragMove)=\"onRowDragMove($event)\"\n    (gridReady)=\"onGridReady($event)\"\n  /> `,\n})\nexport class AppComponent {\n  private gridApi!: GridApi;\n\n  columnDefs: ColDef[] = [\n    { field: \"athlete\", rowDrag: true },\n    { field: \"country\" },\n    { field: \"year\", width: 100 },\n    { field: \"date\" },\n    { field: \"sport\" },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n  ];\n  defaultColDef: ColDef = {\n    width: 170,\n    filter: true,\n  };\n  rowData!: any[];\n\n  // listen for change on sort changed\n  onSortChanged() {\n    const colState = this.gridApi.getColumnState() || [];\n    sortActive = colState.some((c) => c.sort);\n    // suppress row drag if either sort or filter is active\n    const suppressRowDrag = sortActive || filterActive;\n    console.log(\n      \"sortActive = \" +\n        sortActive +\n        \", filterActive = \" +\n        filterActive +\n        \", allowRowDrag = \" +\n        suppressRowDrag,\n    );\n    this.gridApi.setGridOption(\"suppressRowDrag\", suppressRowDrag);\n  }\n\n  // listen for changes on filter changed\n  onFilterChanged() {\n    filterActive = this.gridApi.isAnyFilterPresent();\n    // suppress row drag if either sort or filter is active\n    const suppressRowDrag = sortActive || filterActive;\n    console.log(\n      \"sortActive = \" +\n        sortActive +\n        \", filterActive = \" +\n        filterActive +\n        \", allowRowDrag = \" +\n        suppressRowDrag,\n    );\n    this.gridApi.setGridOption(\"suppressRowDrag\", suppressRowDrag);\n  }\n\n  onRowDragMove(event: RowDragMoveEvent) {\n    const movingNode = event.node;\n    const overNode = event.overNode;\n    const rowNeedsToMove = movingNode !== overNode;\n    if (rowNeedsToMove) {\n      // the list of rows we have is data, not row nodes, so extract the data\n      const movingData = movingNode.data;\n      const overData = overNode!.data;\n      const fromIndex = immutableStore.indexOf(movingData);\n      const toIndex = immutableStore.indexOf(overData);\n      const newStore = immutableStore.slice();\n      moveInArray(newStore, fromIndex, toIndex);\n      immutableStore = newStore;\n      this.gridApi.setGridOption(\"rowData\", newStore);\n      this.gridApi.clearFocusedCell();\n    }\n    function moveInArray(arr: any[], fromIndex: number, toIndex: number) {\n      const element = arr[fromIndex];\n      arr.splice(fromIndex, 1);\n      arr.splice(toIndex, 0, element);\n    }\n  }\n\n  onGridReady(params: GridReadyEvent) {\n    this.gridApi = params.api;\n\n    // add id to each item, needed for immutable store to work\n    immutableStore.forEach(function (data, index) {\n      data.id = index;\n    });\n    params.api.setGridOption(\"rowData\", immutableStore);\n  }\n\n  getRowId = (params: GetRowIdParams) => {\n    return String(params.data.id);\n  };\n}\n\nlet immutableStore: any[] = getData();\nlet sortActive = false;\nlet filterActive = false;\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","main.ts":"import '@angular/compiler';\nimport { provideHttpClient } from '@angular/common/http';\nimport { enableProdMode } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\n\nif ((window as any).ENABLE_PROD_MODE) {\n    enableProdMode();\n}\n\nbootstrapApplication(AppComponent, {\n    providers: [provideHttpClient()],\n});\n","systemjs.config.js":"(function (global) {\n    var ANGULAR_VERSION = '^19';\n    window.ENABLE_PROD_MODE = true;\n\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true,\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        // map tells the System loader where to look for things\n        map: {\n            '@angular/compiler': 'npm:@angular/compiler@' + ANGULAR_VERSION + '/fesm2022/compiler.mjs',\n            '@angular/platform-browser-dynamic':\n                'npm:@angular/platform-browser-dynamic@' + ANGULAR_VERSION + '/fesm2022/platform-browser-dynamic.mjs',\n\n            '@angular/core': 'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/core.mjs',\n            '@angular/core/primitives/signals':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/signals.mjs',\n            '@angular/core/primitives/event-dispatch':\n                'npm:@angular/core@' + ANGULAR_VERSION + '/fesm2022/primitives/event-dispatch.mjs',\n            '@angular/common': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/common.mjs',\n            '@angular/common/http': 'npm:@angular/common@' + ANGULAR_VERSION + '/fesm2022/http.mjs',\n\n            '@angular/platform-browser':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/platform-browser.mjs',\n            '@angular/platform-browser/animations':\n                'npm:@angular/platform-browser@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n\n            '@angular/forms': 'npm:@angular/forms@' + ANGULAR_VERSION + '/fesm2022/forms.mjs',\n            '@angular/animations': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/animations.mjs',\n            '@angular/animations/browser': 'npm:@angular/animations@' + ANGULAR_VERSION + '/fesm2022/browser.mjs',\n\n            rxjs: 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n            'rxjs/operators': 'npm:rxjs@7.8.1/dist/bundles/rxjs.umd.min.js',\n\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@4.4/lib/typescript.min.js',\n\n            // our app is within the app folder, appLocation comes from index.html\n            app: appLocation,\n            ...systemJsMap,\n        },\n        // packages tells the System loader how to load when no filename and/or no extension\n        packages: {\n            css: {}, // Stop css.js from defaulting to apps .ts extension\n            app: {\n                main: './main.ts',\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-angular': {\n                main: './fesm2022/ag-grid-angular.mjs',\n                defaultExtension: 'mjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"@angular/core":"^19","@angular/common":"^19","@angular/forms":"^19","@angular/platform-browser":"^19","ag-grid-angular":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}