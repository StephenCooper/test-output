{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":[],"files":{"styles.css":".ag-header-cell-label {\n    /*Necessary to allow for text to grow vertically*/\n    height: 100%;\n    padding: 0;\n}\n\n.ag-header-cell-label .ag-header-cell-text {\n    /*Force the width corresponding to how much width\n    we need once the text is laid out vertically*/\n    width: 55px;\n    writing-mode: vertical-lr;\n    -ms-writing-mode: tb-lr;\n    line-height: 2em;\n    margin-top: 60px;\n}\n\n.ag-pivot-off .ag-header-group-cell {\n    font-size: 50px;\n}\n\n.ag-pivot-on .ag-header-group-cell {\n    font-size: 10px;\n    color: green;\n}\n\n.ag-pivot-off .ag-header-cell-label {\n    color: #8a6d3b;\n}\n\n.ag-pivot-on .ag-header-cell-label {\n    font-size: 10px;\n    height: 90px;\n    padding-top: 36px;\n    margin-left: 0px;\n    color: #1b6d85;\n    font-weight: bold;\n}\n\n.ag-pivot-on .ag-header-cell-label .ag-header-cell-text {\n    /*There is empty space left at the top from the menu and sort\n    icons not used*/\n    margin-top: 25px;\n}\n\n/*Floating filters*/\n.ag-floating-filter-body {\n    height: 50px;\n}\n\n.ag-floating-filter-body input {\n    height: 49px;\n}\n\n.ag-floating-filter-button {\n    margin-top: -49px;\n}\n\n.ag-floating-filter-button button {\n    height: 49px;\n}\n\n.ag-floating-filter-body input {\n    font-size: 15px;\n    font-weight: bold;\n}\n","main.ts":"import {\n  createApp,\n  defineComponent,\n  onBeforeMount,\n  ref,\n  shallowRef,\n} from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport \"./styles.css\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  NumberFilterModule,\n  TextFilterModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { RowGroupingModule } from \"ag-grid-enterprise\";\nimport { IOlympicData } from \"./interfaces\";\nModuleRegistry.registerModules([\n  TextFilterModule,\n  ClientSideRowModelModule,\n  RowGroupingModule,\n  NumberFilterModule,\n  ValidationModule /* Development Only */,\n]);\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%\">\n                <ag-grid-vue\n      style=\"width: 100%; height: 100%;\"\n      @grid-ready=\"onGridReady\"\n      :columnDefs=\"columnDefs\"\n      :groupHeaderHeight=\"groupHeaderHeight\"\n      :headerHeight=\"headerHeight\"\n      :floatingFiltersHeight=\"floatingFiltersHeight\"\n      :rowData=\"rowData\"></ag-grid-vue>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n  },\n  setup(props) {\n    const gridApi = shallowRef<GridApi<IOlympicData> | null>(null);\n    const columnDefs = ref<(ColDef | ColGroupDef)[]>([\n      {\n        headerName: \"Athlete Details\",\n        children: [\n          {\n            field: \"athlete\",\n            width: 150,\n            suppressSizeToFit: true,\n            enableRowGroup: true,\n            rowGroupIndex: 0,\n          },\n          {\n            field: \"age\",\n            width: 90,\n            minWidth: 75,\n            maxWidth: 100,\n            enableRowGroup: true,\n          },\n          {\n            field: \"country\",\n            width: 120,\n            enableRowGroup: true,\n          },\n          {\n            field: \"year\",\n            width: 90,\n            enableRowGroup: true,\n          },\n          { field: \"sport\", width: 110, enableRowGroup: true },\n          {\n            field: \"gold\",\n            width: 60,\n            enableValue: true,\n            suppressHeaderMenuButton: true,\n            suppressHeaderFilterButton: true,\n            filter: \"agNumberColumnFilter\",\n            aggFunc: \"sum\",\n          },\n          {\n            field: \"silver\",\n            width: 60,\n            enableValue: true,\n            suppressHeaderMenuButton: true,\n            suppressHeaderFilterButton: true,\n            filter: \"agNumberColumnFilter\",\n            aggFunc: \"sum\",\n          },\n          {\n            field: \"bronze\",\n            width: 60,\n            enableValue: true,\n            suppressHeaderMenuButton: true,\n            suppressHeaderFilterButton: true,\n            filter: \"agNumberColumnFilter\",\n            aggFunc: \"sum\",\n          },\n          {\n            field: \"total\",\n            width: 60,\n            enableValue: true,\n            suppressHeaderMenuButton: true,\n            suppressHeaderFilterButton: true,\n            filter: \"agNumberColumnFilter\",\n            aggFunc: \"sum\",\n          },\n        ],\n      },\n    ]);\n    const groupHeaderHeight = ref(75);\n    const headerHeight = ref(150);\n    const floatingFiltersHeight = ref(50);\n    const rowData = ref<IOlympicData[]>(null);\n\n    const onGridReady = (params: GridReadyEvent) => {\n      gridApi.value = params.api;\n\n      const updateData = (data) => (rowData.value = data);\n\n      fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n        .then((resp) => resp.json())\n        .then((data) => updateData(data));\n    };\n\n    return {\n      gridApi,\n      columnDefs,\n      groupHeaderHeight,\n      headerHeight,\n      floatingFiltersHeight,\n      rowData,\n      onGridReady,\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}