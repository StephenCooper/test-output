{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".ag-header-cell-label {\n    /*Necessary to allow for text to grow vertically*/\n    height: 100%;\n    padding: 0;\n}\n\n.ag-header-cell-label .ag-header-cell-text {\n    /*Force the width corresponding to how much width\n    we need once the text is laid out vertically*/\n    width: 55px;\n    writing-mode: vertical-lr;\n    -ms-writing-mode: tb-lr;\n    line-height: 2em;\n    margin-top: 60px;\n}\n\n.ag-pivot-off .ag-header-group-cell {\n    font-size: 50px;\n}\n\n.ag-pivot-on .ag-header-group-cell {\n    font-size: 10px;\n    color: green;\n}\n\n.ag-pivot-off .ag-header-cell-label {\n    color: #8a6d3b;\n}\n\n.ag-pivot-on .ag-header-cell-label {\n    font-size: 10px;\n    height: 90px;\n    padding-top: 36px;\n    margin-left: 0px;\n    color: #1b6d85;\n    font-weight: bold;\n}\n\n.ag-pivot-on .ag-header-cell-label .ag-header-cell-text {\n    /*There is empty space left at the top from the menu and sort\n    icons not used*/\n    margin-top: 25px;\n}\n\n/*Floating filters*/\n.ag-floating-filter-body {\n    height: 50px;\n}\n\n.ag-floating-filter-body input {\n    height: 49px;\n}\n\n.ag-floating-filter-button {\n    margin-top: -49px;\n}\n\n.ag-floating-filter-button button {\n    height: 49px;\n}\n\n.ag-floating-filter-body input {\n    font-size: 15px;\n    font-weight: bold;\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete Details\",\n    children: [\n      {\n        field: \"athlete\",\n        width: 150,\n        suppressSizeToFit: true,\n        enableRowGroup: true,\n        rowGroupIndex: 0,\n      },\n      {\n        field: \"age\",\n        width: 90,\n        minWidth: 75,\n        maxWidth: 100,\n        enableRowGroup: true,\n      },\n      {\n        field: \"country\",\n        width: 120,\n        enableRowGroup: true,\n      },\n      {\n        field: \"year\",\n        width: 90,\n        enableRowGroup: true,\n      },\n      { field: \"sport\", width: 110, enableRowGroup: true },\n      {\n        field: \"gold\",\n        width: 60,\n        enableValue: true,\n        suppressHeaderMenuButton: true,\n        suppressHeaderFilterButton: true,\n        filter: \"agNumberColumnFilter\",\n        aggFunc: \"sum\",\n      },\n      {\n        field: \"silver\",\n        width: 60,\n        enableValue: true,\n        suppressHeaderMenuButton: true,\n        suppressHeaderFilterButton: true,\n        filter: \"agNumberColumnFilter\",\n        aggFunc: \"sum\",\n      },\n      {\n        field: \"bronze\",\n        width: 60,\n        enableValue: true,\n        suppressHeaderMenuButton: true,\n        suppressHeaderFilterButton: true,\n        filter: \"agNumberColumnFilter\",\n        aggFunc: \"sum\",\n      },\n      {\n        field: \"total\",\n        width: 60,\n        enableValue: true,\n        suppressHeaderMenuButton: true,\n        suppressHeaderFilterButton: true,\n        filter: \"agNumberColumnFilter\",\n        aggFunc: \"sum\",\n      },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  groupHeaderHeight: 75,\n  headerHeight: 150,\n  floatingFiltersHeight: 50,\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}