{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const columnDefs = [\n  {\n    headerName: \"Athlete Name\",\n    field: \"athlete\",\n    suppressHeaderFilterButton: true,\n  },\n  { field: \"age\", sortable: false },\n  { field: \"country\", suppressHeaderFilterButton: true },\n  { field: \"year\", sortable: false },\n  { field: \"date\", suppressHeaderFilterButton: true, sortable: false },\n  { field: \"sport\", sortable: false },\n  { field: \"gold\" },\n  { field: \"silver\", sortable: false },\n  { field: \"bronze\", suppressHeaderFilterButton: true },\n  { field: \"total\", sortable: false },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    filter: true,\n    width: 150,\n    headerComponentParams: {\n      template: `<div class=\"ag-cell-label-container\" role=\"presentation\">\n                    <span data-ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\"></span>\n                    <span data-ref=\"eFilterButton\" class=\"ag-header-icon ag-header-cell-filter-button\"></span>\n                    <div data-ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\">\n                        <span data-ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order ag-hidden\"></span>\n                        <span data-ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon ag-hidden\"></span>\n                        <span data-ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon ag-hidden\"></span>\n                        <span data-ref=\"eSortMixed\" class=\"ag-header-icon ag-sort-mixed-icon ag-hidden\"></span>\n                        <span data-ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon ag-hidden\"></span>\n                        ** <span data-ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\"></span>\n                        <span data-ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\"></span>\n                    </div>\n                </div>`,\n    },\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}