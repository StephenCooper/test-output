{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["customInnerHeader.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".customInnerHeader {\n    display: flex;\n    gap: 0.25rem;\n    align-items: center;\n}\n\n.customInnerHeader span {\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.fa {\n    color: cornflowerblue;\n}\n","customInnerHeader.js":"\n\n\n\n\nclass CustomInnerHeader  {\n     agParams;\n     eGui;\n     eText;\n\n    init(agParams) {\n        const eGui = (this.eGui = document.createElement('div'));\n        eGui.classList.add('customInnerHeader');\n        const textNode = document.createElement('span');\n        this.eText = textNode;\n\n        textNode.textContent = agParams.displayName;\n\n        if (agParams.icon) {\n            const icon = document.createElement('i');\n            icon.classList.add('fa', `${agParams.icon}`);\n            eGui.appendChild(icon);\n        }\n\n        eGui.appendChild(textNode);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh(params) {\n        this.eText.textContent = params.displayName;\n        return true;\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\", suppressHeaderFilterButton: true, minWidth: 120 },\n  {\n    field: \"age\",\n    sortable: false,\n    headerComponentParams: {\n      icon: \"fa-user\",\n    },\n  },\n  { field: \"country\", suppressHeaderFilterButton: true, minWidth: 120 },\n  { field: \"year\", sortable: false },\n  { field: \"date\", suppressHeaderFilterButton: true },\n  { field: \"sport\", sortable: false },\n  {\n    field: \"gold\",\n    headerComponentParams: { icon: \"fa-cog\" },\n    minWidth: 120,\n  },\n  { field: \"silver\", sortable: false },\n  { field: \"bronze\", suppressHeaderFilterButton: true, minWidth: 120 },\n  { field: \"total\", sortable: false },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    headerComponentParams: {\n      innerHeaderComponent: CustomInnerHeader,\n    },\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      gridApi.setGridOption(\"rowData\", data);\n    });\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}},"extras":["fontawesome"]}