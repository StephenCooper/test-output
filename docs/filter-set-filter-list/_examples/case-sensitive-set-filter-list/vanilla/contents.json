{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    return [\n        {\n            colour: 'Black',\n        },\n        {\n            colour: 'BLACK',\n        },\n        {\n            colour: 'black',\n        },\n        {\n            colour: 'Red',\n        },\n        {\n            colour: 'RED',\n        },\n        {\n            colour: 'red',\n        },\n        {\n            colour: 'Orange',\n        },\n        {\n            colour: 'ORANGE',\n        },\n        {\n            colour: 'orange',\n        },\n        {\n            colour: 'White',\n        },\n        {\n            colour: 'WHITE',\n        },\n        {\n            colour: 'white',\n        },\n        {\n            colour: 'Yellow',\n        },\n        {\n            colour: 'YELLOW',\n        },\n        {\n            colour: 'yellow',\n        },\n        {\n            colour: 'Green',\n        },\n        {\n            colour: 'GREEN',\n        },\n        {\n            colour: 'green',\n        },\n        {\n            colour: 'Purple',\n        },\n        {\n            colour: 'PURPLE',\n        },\n        {\n            colour: 'purple',\n        },\n    ];\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: \"Case Insensitive (default)\",\n      field: \"colour\",\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        caseSensitive: false,\n        cellRenderer: colourCellRenderer,\n      },\n    },\n    {\n      headerName: \"Case Sensitive\",\n      field: \"colour\",\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        caseSensitive: true,\n        cellRenderer: colourCellRenderer,\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 225,\n    cellRenderer: colourCellRenderer,\n    floatingFilter: true,\n  },\n  sideBar: \"filters\",\n  onFirstDataRendered: onFirstDataRendered,\n  rowData: getData(),\n};\n\nconst FIXED_STYLES =\n  \"vertical-align: middle; border: 1px solid black; margin: 3px; display: inline-block; width: 10px; height: 10px\";\n\nfunction colourCellRenderer(params) {\n  if (!params.value || params.value === \"(Select All)\") {\n    return params.value;\n  }\n\n  return `<div style=\"background-color: ${params.value.toLowerCase()}; ${FIXED_STYLES}\"></div>${params.value}`;\n}\n\nfunction onFirstDataRendered(params) {\n  params.api.getToolPanelInstance(\"filters\").expandFilters();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div id=\"myGrid\" style=\"flex-grow: 1\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}