{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const filterParams = {\n  values: (params) => {\n    setTimeout(() => {\n      params.success([\"value 1\", \"value 2\"]);\n    }, 3000);\n  },\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  rowData: [\n    { value: \"value 1\" },\n    { value: \"value 1\" },\n    { value: \"value 1\" },\n    { value: \"value 1\" },\n    { value: \"value 2\" },\n    { value: \"value 2\" },\n    { value: \"value 2\" },\n    { value: \"value 2\" },\n    { value: \"value 2\" },\n  ],\n  columnDefs: [\n    {\n      headerName: \"Set filter column\",\n      field: \"value\",\n      flex: 1,\n      filter: \"agSetColumnFilter\",\n      floatingFilter: true,\n      filterParams: filterParams,\n    },\n  ],\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}