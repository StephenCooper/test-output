{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: \"No Value Formatter\",\n      field: \"country\",\n      valueFormatter: countryValueFormatter,\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        // no value formatter!\n      },\n    },\n    {\n      headerName: \"With Value Formatter\",\n      field: \"country\",\n      valueFormatter: countryValueFormatter,\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        valueFormatter: countryValueFormatter,\n      },\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 225,\n    floatingFilter: true,\n  },\n  sideBar: \"filters\",\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction countryValueFormatter(params) {\n  const value = params.value;\n  return value + \" (\" + COUNTRY_CODES[value].toUpperCase() + \")\";\n}\n\nfunction printFilterModel() {\n  const filterModel = gridApi.getFilterModel();\n  console.log(filterModel);\n}\n\nfunction onFirstDataRendered(params) {\n  params.api.getToolPanelInstance(\"filters\").expandFilters();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then(function (data) {\n      // only return data that has corresponding country codes\n      const dataWithFlags = data.filter(function (d) {\n        return COUNTRY_CODES[d.country];\n      });\n\n      gridApi.setGridOption(\"rowData\", dataWithFlags);\n    });\n});\n\nvar COUNTRY_CODES = {\n  Ireland: \"ie\",\n  Luxembourg: \"lu\",\n  Belgium: \"be\",\n  Spain: \"es\",\n  France: \"fr\",\n  Germany: \"de\",\n  Sweden: \"se\",\n  Italy: \"it\",\n  Greece: \"gr\",\n  Iceland: \"is\",\n  Portugal: \"pt\",\n  Malta: \"mt\",\n  Norway: \"no\",\n  Brazil: \"br\",\n  Argentina: \"ar\",\n  Colombia: \"co\",\n  Peru: \"pe\",\n  Venezuela: \"ve\",\n  Uruguay: \"uy\",\n};\n","index.html":"<div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div style=\"padding-bottom: 5px\">\n        <button onclick=\"printFilterModel()\">Print Filter Model</button>\n    </div>\n    <div id=\"myGrid\" style=\"flex-grow: 1\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}