{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["countryCellRenderer.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","countryCellRenderer.js":"\nclass CountryCellRenderer  {\n    eGui;\n\n    init(params) {\n        this.eGui = document.createElement('div');\n\n        if (!params.value) {\n            this.eGui.innerHTML = params.isFilterRenderer ? '(Blanks)' : params.value;\n        } else if (params.value === '(Select All)') {\n            this.eGui.innerHTML = params.value;\n        } else {\n            const url = `https://flags.fmcdn.net/data/flags/mini/${params.context.COUNTRY_CODES[params.value]}.png`;\n            const flagImage = `<img class=\"flag\" border=\"0\" width=\"15\" height=\"10\" src=\"${url}\">`;\n\n            this.eGui.innerHTML = `${flagImage} ${params.value}`;\n        }\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    refresh() {\n        return false;\n    }\n}\n","main.js":"const COUNTRY_CODES = {\n  Ireland: \"ie\",\n  Luxembourg: \"lu\",\n  Belgium: \"be\",\n  Spain: \"es\",\n  France: \"fr\",\n  Germany: \"de\",\n  Sweden: \"se\",\n  Italy: \"it\",\n  Greece: \"gr\",\n  Iceland: \"is\",\n  Portugal: \"pt\",\n  Malta: \"mt\",\n  Norway: \"no\",\n  Brazil: \"br\",\n  Argentina: \"ar\",\n  Colombia: \"co\",\n  Peru: \"pe\",\n  Venezuela: \"ve\",\n  Uruguay: \"uy\",\n};\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      headerName: \"No Cell Renderer\",\n      field: \"country\",\n      cellRenderer: CountryCellRenderer,\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        // no cell renderer!\n      },\n    },\n    {\n      headerName: \"With Cell Renderers\",\n      field: \"country\",\n      cellRenderer: CountryCellRenderer,\n      filter: \"agSetColumnFilter\",\n      filterParams: {\n        cellRenderer: CountryCellRenderer,\n        cellRendererParams: { isFilterRenderer: true },\n      },\n    },\n  ],\n  context: {\n    COUNTRY_CODES: COUNTRY_CODES,\n  },\n  defaultColDef: {\n    flex: 1,\n    minWidth: 225,\n    floatingFilter: true,\n  },\n  sideBar: \"filters\",\n  onFirstDataRendered: onFirstDataRendered,\n};\n\nfunction printFilterModel() {\n  const filterModel = gridApi.getFilterModel();\n  console.log(filterModel);\n}\n\nfunction onFirstDataRendered(params) {\n  params.api.getToolPanelInstance(\"filters\").expandFilters();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then(function (data) {\n      // only return data that has corresponding country codes\n      const dataWithFlags = data.filter(function (d) {\n        return COUNTRY_CODES[d.country];\n      });\n\n      // Empty data used to demonstrate custom (Blanks) handling in filter cell renderer\n      dataWithFlags[0].country = \"\";\n\n      gridApi.setGridOption(\"rowData\", dataWithFlags);\n    });\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px\">\n        <button onclick=\"printFilterModel()\">Print Filter Model</button>\n    </div>\n\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}