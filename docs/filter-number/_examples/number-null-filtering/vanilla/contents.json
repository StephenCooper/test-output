{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    align-items: center;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    padding-bottom: 8px;\n    display: flex;\n\n    & > :not(:first-child) {\n        margin-left: 16px;\n        display: flex;\n    }\n}\n\n.test-label {\n    margin-right: 8px;\n}\n","main.js":"const originalColumnDefs = [\n  { field: \"athlete\" },\n  {\n    field: \"age\",\n    maxWidth: 120,\n    filter: \"agNumberColumnFilter\",\n    filterParams: {\n      includeBlanksInEquals: false,\n      includeBlanksInNotEqual: false,\n      includeBlanksInLessThan: false,\n      includeBlanksInGreaterThan: false,\n      includeBlanksInRange: false,\n    },\n  },\n  {\n    headerName: \"Description\",\n    valueGetter: (params) => `Age is ${params.data.age}`,\n    minWidth: 340,\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: originalColumnDefs,\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n  },\n  rowData: [\n    {\n      athlete: \"Alberto Gutierrez\",\n      age: 36,\n    },\n    {\n      athlete: \"Niall Crosby\",\n      age: 40,\n    },\n    {\n      athlete: \"Sean Landsman\",\n      age: null,\n    },\n    {\n      athlete: \"Robert Clarke\",\n      age: undefined,\n    },\n  ],\n};\n\nfunction updateParams(toChange) {\n  const value = document.getElementById(`checkbox${toChange}`).checked;\n  originalColumnDefs[1].filterParams[`includeBlanksIn${toChange}`] = value;\n\n  gridApi.setGridOption(\"columnDefs\", originalColumnDefs);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div class=\"test-label\">Include NULL<br />in age:</div>\n        <label><input type=\"checkbox\" id=\"checkboxEquals\" onchange=\"updateParams('Equals')\" />&nbsp;equals</label>\n        <label><input type=\"checkbox\" id=\"checkboxNotEqual\" onchange=\"updateParams('NotEqual')\" />&nbsp;notEqual</label>\n        <label><input type=\"checkbox\" id=\"checkboxLessThan\" onchange=\"updateParams('LessThan')\" />&nbsp;lessThan</label>\n        <label\n            ><input\n                type=\"checkbox\"\n                id=\"checkboxGreaterThan\"\n                onchange=\"updateParams('GreaterThan')\"\n            />&nbsp;greaterThan</label\n        >\n        <label><input type=\"checkbox\" id=\"checkboxRange\" onchange=\"updateParams('Range')\" />&nbsp;inRange</label>\n    </div>\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}