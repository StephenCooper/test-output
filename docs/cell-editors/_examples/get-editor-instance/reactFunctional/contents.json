{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"index.jsx","mainFileName":"index.jsx","scriptFiles":[],"styleFiles":[],"files":{"style.css":".my-simple-editor {\n    box-sizing: border-box;\n    padding-left: var(--ag-spacing);\n    width: 100%;\n    height: 100%;\n}\n","index.jsx":"'use client';\nimport React, {\n  StrictMode,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport {\n  ClientSideRowModelModule,\n  CustomEditorModule,\n  ModuleRegistry,\n  NumberEditorModule,\n  TextEditorModule,\n  TextFilterModule,\n  ValidationModule,\n} from \"ag-grid-community\";\nimport { AgGridReact, getInstance } from \"ag-grid-react\";\n\nimport MySimpleEditor from \"./mySimpleEditor.jsx\";\nimport \"./style.css\";\n\nModuleRegistry.registerModules([\n  NumberEditorModule,\n  TextEditorModule,\n  TextFilterModule,\n  CustomEditorModule,\n  ClientSideRowModelModule,\n  ValidationModule /* Development Only */,\n]);\n\nconst createRowData = () => {\n  const cloneObject = (obj) => JSON.parse(JSON.stringify(obj));\n  const students = [\n    {\n      first_name: \"Bob\",\n      last_name: \"Harrison\",\n      gender: \"Male\",\n      address:\n        \"1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763\",\n      mood: \"Happy\",\n      country: \"Ireland\",\n    },\n    {\n      first_name: \"Mary\",\n      last_name: \"Wilson\",\n      gender: \"Female\",\n      age: 11,\n      address: \"3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215\",\n      mood: \"Sad\",\n      country: \"Ireland\",\n    },\n    {\n      first_name: \"Zahid\",\n      last_name: \"Khan\",\n      gender: \"Male\",\n      age: 12,\n      address:\n        \"3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186\",\n      mood: \"Happy\",\n      country: \"Ireland\",\n    },\n    {\n      first_name: \"Jerry\",\n      last_name: \"Mane\",\n      gender: \"Male\",\n      age: 12,\n      address:\n        \"2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634\",\n      mood: \"Happy\",\n      country: \"Ireland\",\n    },\n  ];\n  students.forEach((item) => {\n    students.push(cloneObject(item));\n  });\n  students.forEach((item) => {\n    students.push(cloneObject(item));\n  });\n  students.forEach((item) => {\n    students.push(cloneObject(item));\n  });\n  return students;\n};\n\nconst GridExample = () => {\n  const gridRef = useRef(null);\n  const [rowData] = useState(createRowData());\n  const columnDefs = useMemo(() => [\n    {\n      field: \"first_name\",\n      headerName: \"First Name\",\n      width: 120,\n      editable: true,\n    },\n    {\n      field: \"last_name\",\n      headerName: \"Last Name\",\n      width: 120,\n      editable: true,\n    },\n    {\n      field: \"gender\",\n      width: 100,\n      cellEditor: MySimpleEditor,\n    },\n    {\n      field: \"age\",\n      width: 80,\n      cellEditor: MySimpleEditor,\n    },\n    {\n      field: \"mood\",\n      width: 90,\n      cellEditor: MySimpleEditor,\n    },\n    {\n      field: \"country\",\n      width: 110,\n      cellEditor: MySimpleEditor,\n    },\n    {\n      field: \"address\",\n      minWidth: 502,\n      cellEditor: MySimpleEditor,\n    },\n  ]);\n\n  const onGridReady = useCallback((params) => {\n    if (gridRef.current) {\n      const interval = window.setInterval(() => {\n        const instances = params.api.getCellEditorInstances();\n        if (instances.length > 0) {\n          getInstance(instances[0], (instance) => {\n            if (instance && instance.myCustomFunction) {\n              const result = instance.myCustomFunction();\n              console.log(\n                `found editing cell: row index = ${result.rowIndex}, column = ${result.colId}.`,\n              );\n            } else {\n              console.log(\n                \"found editing cell, but method myCustomFunction not found, must be the default editor.\",\n              );\n            }\n          });\n        } else {\n          console.log(\"found not editing cell.\");\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  const defaultColDef = useMemo(\n    () => ({\n      editable: true,\n      flex: 1,\n      minWidth: 100,\n      filter: true,\n    }),\n    [],\n  );\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <AgGridReact\n          ref={gridRef}\n          defaultColDef={defaultColDef}\n          rowData={rowData}\n          columnDefs={columnDefs}\n          onGridReady={onGridReady}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <GridExample />\n  </StrictMode>,\n);\n","mySimpleEditor.jsx":"import React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\n\n// backspace starts the editor on Windows\nconst KEY_BACKSPACE = \"Backspace\";\n\nexport default forwardRef(\n  ({ value, onValueChange, eventKey, rowIndex, column }, ref) => {\n    const updateValue = (val) => {\n      onValueChange(val === \"\" ? null : val);\n    };\n\n    useEffect(() => {\n      let startValue;\n\n      if (eventKey === KEY_BACKSPACE) {\n        startValue = \"\";\n      } else if (eventKey && eventKey.length === 1) {\n        startValue = eventKey;\n      } else {\n        startValue = value;\n      }\n      if (startValue == null) {\n        startValue = \"\";\n      }\n\n      updateValue(startValue);\n\n      refInput.current.focus();\n    }, []);\n\n    const refInput = useRef(null);\n\n    useImperativeHandle(ref, () => {\n      return {\n        myCustomFunction() {\n          return {\n            rowIndex: rowIndex,\n            colId: column.getId(),\n          };\n        },\n      };\n    });\n\n    return (\n      <input\n        value={value || \"\"}\n        ref={refInput}\n        onChange={(event) => updateValue(event.target.value)}\n        className=\"my-simple-editor\"\n      />\n    );\n  },\n);\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n            jsx: 'react',\n        },\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            // react\n            react: 'npm:react@18.2.0',\n            'react-dom': 'npm:react-dom@18.2.0',\n            'react-dom/client': 'npm:react-dom@18.2.0',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            css: {},\n            react: {\n                main: './umd/react.production.min.js',\n            },\n            'react-dom': {\n                main: './umd/react-dom.production.min.js',\n            },\n            'react-dom/server': {\n                main: '../umd/react-dom-server.browser.production.min.js',\n            },\n            app: {\n                main: './index.jsx',\n                defaultExtension: 'jsx',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-react': {\n                main: './dist/package/index.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"react":"18","react-dom":"18","@types/react":"18","@types/react-dom":"18","ag-grid-react":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}