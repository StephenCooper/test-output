{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","mySimpleEditor.js","main.js"],"styleFiles":["style.css"],"files":{"style.css":".my-simple-editor {\n    box-sizing: border-box;\n    padding-left: var(--ag-spacing);\n    width: 100%;\n    height: 100%;\n}\n","data.js":"function getData() {\n    const cloneObject = (obj) => JSON.parse(JSON.stringify(obj));\n\n    const students = [\n        {\n            first_name: 'Bob',\n            last_name: 'Harrison',\n            gender: 'Male',\n            address: '1197 Thunder Wagon Common, Cataract, RI, 02987-1016, US, (401) 747-0763',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            first_name: 'Mary',\n            last_name: 'Wilson',\n            gender: 'Female',\n            age: 11,\n            address: '3685 Rocky Glade, Showtucket, NU, X1E-9I0, CA, (867) 371-4215',\n            mood: 'Sad',\n            country: 'Ireland',\n        },\n        {\n            first_name: 'Zahid',\n            last_name: 'Khan',\n            gender: 'Male',\n            age: 12,\n            address: '3235 High Forest, Glen Campbell, MS, 39035-6845, US, (601) 638-8186',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n        {\n            first_name: 'Jerry',\n            last_name: 'Mane',\n            gender: 'Male',\n            age: 12,\n            address: '2234 Sleepy Pony Mall , Drain, DC, 20078-4243, US, (202) 948-3634',\n            mood: 'Happy',\n            country: 'Ireland',\n        },\n    ];\n\n    // double the array twice, make more data!\n    students.forEach((item) => {\n        students.push(cloneObject(item));\n    });\n    students.forEach((item) => {\n        students.push(cloneObject(item));\n    });\n    students.forEach((item) => {\n        students.push(cloneObject(item));\n    });\n\n    return students;\n}\n","mySimpleEditor.js":"\n// backspace starts the editor on Windows\nconst KEY_BACKSPACE = 'Backspace';\n\nclass MySimpleEditor  {\n    gui;\n    params;\n\n    init(params) {\n        this.gui = document.createElement('input');\n        this.gui.type = 'text';\n        this.gui.classList.add('my-simple-editor');\n\n        this.params = params;\n\n        let startValue = params.value;\n        const eventKey = params.eventKey;\n        const isBackspace = eventKey === KEY_BACKSPACE;\n\n        if (isBackspace) {\n            startValue = '';\n        } else if (eventKey && eventKey.length === 1) {\n            startValue = eventKey;\n        }\n\n        if (startValue !== null && startValue !== undefined) {\n            this.gui.value = startValue;\n        }\n    }\n\n    getGui() {\n        return this.gui;\n    }\n\n    getValue() {\n        return this.gui.value;\n    }\n\n    afterGuiAttached() {\n        this.gui.focus();\n    }\n\n    myCustomFunction() {\n        return {\n            rowIndex: this.params.rowIndex,\n            colId: this.params.column.getId(),\n        };\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"first_name\", headerName: \"First Name\", width: 120, editable: true },\n  { field: \"last_name\", headerName: \"Last Name\", width: 120, editable: true },\n  {\n    field: \"gender\",\n    width: 100,\n    cellEditor: MySimpleEditor,\n  },\n  {\n    field: \"age\",\n    width: 80,\n    cellEditor: MySimpleEditor,\n  },\n  {\n    field: \"mood\",\n    width: 90,\n    cellEditor: MySimpleEditor,\n  },\n  {\n    field: \"country\",\n    width: 110,\n    cellEditor: MySimpleEditor,\n  },\n  {\n    field: \"address\",\n    width: 502,\n    cellEditor: MySimpleEditor,\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    editable: true,\n    minWidth: 100,\n    filter: true,\n  },\n  rowData: getData(),\n  onGridReady: (params) => {\n    setInterval(() => {\n      const instances = gridApi.getCellEditorInstances();\n      if (instances.length > 0) {\n        const instance = instances[0];\n        if (instance.myCustomFunction) {\n          const result = instance.myCustomFunction();\n          console.log(\n            `found editing cell: row index = ${result.rowIndex}, column = ${result.colId}.`,\n          );\n        } else {\n          console.log(\n            \"found editing cell, but method myCustomFunction not found, must be the default editor.\",\n          );\n        }\n      } else {\n        console.log(\"found not editing cell.\");\n      }\n    }, 2000);\n  },\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}