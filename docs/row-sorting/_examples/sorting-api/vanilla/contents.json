{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\" },\n  { field: \"age\", width: 90 },\n  { field: \"country\" },\n  { field: \"year\", width: 90 },\n  { field: \"date\" },\n  { field: \"sport\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n  { field: \"total\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n};\n\nfunction sortByAthleteAsc() {\n  gridApi.applyColumnState({\n    state: [{ colId: \"athlete\", sort: \"asc\" }],\n    defaultState: { sort: null },\n  });\n}\n\nfunction sortByAthleteDesc() {\n  gridApi.applyColumnState({\n    state: [{ colId: \"athlete\", sort: \"desc\" }],\n    defaultState: { sort: null },\n  });\n}\n\nfunction sortByCountryThenSport() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"country\", sort: \"asc\", sortIndex: 0 },\n      { colId: \"sport\", sort: \"asc\", sortIndex: 1 },\n    ],\n    defaultState: { sort: null },\n  });\n}\n\nfunction sortBySportThenCountry() {\n  gridApi.applyColumnState({\n    state: [\n      { colId: \"country\", sort: \"asc\", sortIndex: 1 },\n      { colId: \"sport\", sort: \"asc\", sortIndex: 0 },\n    ],\n    defaultState: { sort: null },\n  });\n}\n\nfunction clearSort() {\n  gridApi.applyColumnState({\n    defaultState: { sort: null },\n  });\n}\n\nlet savedSort;\n\nfunction saveSort() {\n  const colState = gridApi.getColumnState();\n  const sortState = colState\n    .filter(function (s) {\n      return s.sort != null;\n    })\n    .map(function (s) {\n      return { colId: s.colId, sort: s.sort, sortIndex: s.sortIndex };\n    });\n  savedSort = sortState;\n  console.log(\"saved sort\", sortState);\n}\n\nfunction restoreFromSave() {\n  gridApi.applyColumnState({\n    state: savedSort,\n    defaultState: { sort: null },\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 1rem\">\n        <div>\n            <button onclick=\"sortByAthleteAsc()\">Athlete Ascending</button>\n            <button onclick=\"sortByAthleteDesc()\">Athlete Descending</button>\n            <button onclick=\"sortByCountryThenSport()\">Country, then Sport</button>\n            <button onclick=\"sortBySportThenCountry()\">Sport, then Country</button>\n        </div>\n        <div style=\"margin-top: 0.25rem\">\n            <button onclick=\"clearSort()\">Clear Sort</button>\n            <button onclick=\"saveSort()\">Save Sort</button>\n            <button onclick=\"restoreFromSave()\">Restore from Save</button>\n        </div>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}