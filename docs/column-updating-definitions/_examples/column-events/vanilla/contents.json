{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".test-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.test-header {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 13px;\n    margin-bottom: 0.5rem;\n}\n\n.test-header .example-section {\n    margin-bottom: 0.5rem;\n}\n\n.test-button-group {\n    display: inline-block;\n    margin-right: 20px;\n    margin-bottom: 10px;\n}\n\n.test-button-group button {\n    margin: 4px;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n}\n","main.js":"function getColumnDefs() {\n  return [\n    { field: \"athlete\" },\n    { field: \"age\" },\n    { field: \"country\" },\n    { field: \"sport\" },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n  ];\n}\n\nfunction onSortChanged(e) {\n  console.log(\"Event Sort Changed\", e);\n}\n\nfunction onColumnResized(e) {\n  console.log(\"Event Column Resized\", e);\n}\n\nfunction onColumnVisible(e) {\n  console.log(\"Event Column Visible\", e);\n}\n\nfunction onColumnPivotChanged(e) {\n  console.log(\"Event Pivot Changed\", e);\n}\n\nfunction onColumnRowGroupChanged(e) {\n  console.log(\"Event Row Group Changed\", e);\n}\n\nfunction onColumnValueChanged(e) {\n  console.log(\"Event Value Changed\", e);\n}\n\nfunction onColumnMoved(e) {\n  console.log(\"Event Column Moved\", e);\n}\n\nfunction onColumnPinned(e) {\n  console.log(\"Event Column Pinned\", e);\n}\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    width: 150,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n  },\n  columnDefs: getColumnDefs(),\n  onSortChanged: onSortChanged,\n  onColumnResized: onColumnResized,\n  onColumnVisible: onColumnVisible,\n  onColumnPivotChanged: onColumnPivotChanged,\n  onColumnRowGroupChanged: onColumnRowGroupChanged,\n  onColumnValueChanged: onColumnValueChanged,\n  onColumnMoved: onColumnMoved,\n  onColumnPinned: onColumnPinned,\n};\n\nfunction onBtSortOn() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"age\") {\n      colDef.sort = \"desc\";\n    }\n    if (colDef.field === \"athlete\") {\n      colDef.sort = \"asc\";\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtSortOff() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.sort = null;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtWidthNarrow() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"age\" || colDef.field === \"athlete\") {\n      colDef.width = 100;\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtWidthNormal() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.width = 200;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtHide() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"age\" || colDef.field === \"athlete\") {\n      colDef.hide = true;\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtShow() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.hide = false;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtPivotOn() {\n  gridApi.setGridOption(\"pivotMode\", true);\n\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"country\") {\n      colDef.pivot = true;\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtPivotOff() {\n  gridApi.setGridOption(\"pivotMode\", false);\n\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.pivot = false;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtRowGroupOn() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"sport\") {\n      colDef.rowGroup = true;\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtRowGroupOff() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.rowGroup = false;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtAggFuncOn() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (\n      colDef.field === \"gold\" ||\n      colDef.field === \"silver\" ||\n      colDef.field === \"bronze\"\n    ) {\n      colDef.aggFunc = \"sum\";\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtAggFuncOff() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.aggFunc = null;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtPinnedOn() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    if (colDef.field === \"athlete\") {\n      colDef.pinned = \"left\";\n    }\n    if (colDef.field === \"age\") {\n      colDef.pinned = \"right\";\n    }\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\nfunction onBtPinnedOff() {\n  const columnDefs = getColumnDefs();\n  columnDefs.forEach((colDef) => {\n    colDef.pinned = null;\n  });\n  gridApi.setGridOption(\"columnDefs\", columnDefs);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div class=\"test-button-row\">\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtSortOn()\">Sort On</button>\n                <br />\n                <button onclick=\"onBtSortOff()\">Sort Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtWidthNarrow()\">Width Narrow</button>\n                <br />\n                <button onclick=\"onBtWidthNormal()\">Width Normal</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtHide()\">Hide Cols</button>\n                <br />\n                <button onclick=\"onBtShow()\">Show Cols</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPivotOn()\">Pivot On</button>\n                <br />\n                <button onclick=\"onBtPivotOff()\">Pivot Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtRowGroupOn()\">Row Group On</button>\n                <br />\n                <button onclick=\"onBtRowGroupOff()\">Row Group Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtAggFuncOn()\">Agg Func On</button>\n                <br />\n                <button onclick=\"onBtAggFuncOff()\">Agg Func Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPinnedOn()\">Pinned On</button>\n                <br />\n                <button onclick=\"onBtPinnedOff()\">Pinned Off</button>\n            </div>\n        </div>\n    </div>\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}