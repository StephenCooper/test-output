{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","main.js"],"styleFiles":[],"files":{"data.js":"function getData() {\n    const rowData = [];\n    const words = [\n        'One',\n        'Apple',\n        'Moon',\n        'Sugar',\n        'Grid',\n        'Banana',\n        'Sunshine',\n        'Stars',\n        'Black',\n        'White',\n        'Salt',\n        'Beach',\n    ];\n\n    for (let i = 0; i < 100; i++) {\n        rowData.push({\n            simple: words[i % words.length],\n            numberBad: Math.floor(((i + 2) * 173456) % 10000),\n            numberGood: Math.floor(((i + 2) * 476321) % 10000),\n        });\n    }\n\n    return rowData;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { headerName: \"Name\", field: \"simple\" },\n    { headerName: \"Bad Number\", field: \"numberBad\" },\n    {\n      headerName: \"Good Number\",\n      field: \"numberGood\",\n      valueParser: numberParser,\n    },\n  ],\n  defaultColDef: {\n    flex: 1,\n    editable: true,\n    cellDataType: false,\n  },\n  rowData: getData(),\n  onCellValueChanged: onCellValueChanged,\n};\n\nfunction onCellValueChanged(event) {\n  console.log(\"data after changes is: \", event.data);\n}\n\nfunction numberParser(params) {\n  return Number(params.newValue);\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}