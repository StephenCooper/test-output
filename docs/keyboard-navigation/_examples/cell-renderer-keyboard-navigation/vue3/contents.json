{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":[],"files":{"styles.css":"html,\nbody {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n}\n\nhtml {\n    position: absolute;\n    top: 0;\n    left: 0;\n    padding: 0;\n    overflow: auto;\n}\n\nbody {\n    padding: 1rem;\n    overflow: auto;\n}\n\n.custom-element {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    height: 100%;\n}\n\n.custom-element button {\n    width: 80px;\n    padding: 5px;\n    height: initial;\n    margin: 0;\n}\n\n.custom-element input {\n    width: 100px;\n    padding: 5px;\n    height: initial;\n    margin: 0;\n}\n\n.custom-element a {\n    line-height: 1rem;\n}\n\n.custom-element a:focus-visible {\n    outline: 2px solid blue;\n    outline-offset: 2px;\n    border-radius: 2px;\n}\n\na {\n    color: inherit;\n}\n","customElementsVue.ts":"export default {\n    template: `\n        <div class=\"custom-element\">        \n            <button>Age: {{params.data.age ? params.data.age : '?'}}</button>\n            <input :value=\"params.data.country ? params.data.country : ''\" />\n            <a :href=\"'https://www.google.com/search?q=' + params.data.sport\" target=\"_blank\">{{params.data.sport}}</a>\n        </div>`,\n};\n","main.ts":"import {\n  createApp,\n  defineComponent,\n  onBeforeMount,\n  ref,\n  shallowRef,\n} from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport \"./styles.css\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  SuppressKeyboardEventParams,\n  TextFilterModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport CustomElements from \"./customElementsVue\";\nModuleRegistry.registerModules([\n  TextFilterModule,\n  ClientSideRowModelModule,\n  ValidationModule /* Development Only */,\n]);\n\nconst GRID_CELL_CLASSNAME = \"ag-cell\";\n\nfunction getAllFocusableElementsOf(el: HTMLElement) {\n  return Array.from<HTMLElement>(\n    el.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n    ),\n  ).filter((focusableEl) => {\n    return focusableEl.tabIndex !== -1;\n  });\n}\n\nfunction getEventPath(event: Event): HTMLElement[] {\n  const path: HTMLElement[] = [];\n  let currentTarget: any = event.target;\n  while (currentTarget) {\n    path.push(currentTarget);\n    currentTarget = currentTarget.parentElement;\n  }\n  return path;\n}\n\n/**\n * Capture whether the user is tabbing forwards or backwards and suppress keyboard event if tabbing\n * outside of the children\n */\nfunction suppressKeyboardEvent({ event }: SuppressKeyboardEventParams<any>) {\n  const { key, shiftKey } = event;\n  const path = getEventPath(event);\n  const isTabForward = key === \"Tab\" && shiftKey === false;\n  const isTabBackward = key === \"Tab\" && shiftKey === true;\n  let suppressEvent = false;\n  // Handle cell children tabbing\n  if (isTabForward || isTabBackward) {\n    const eGridCell = path.find((el) => {\n      if (el.classList === undefined) return false;\n      return el.classList.contains(GRID_CELL_CLASSNAME);\n    });\n    if (!eGridCell) {\n      return suppressEvent;\n    }\n    const focusableChildrenElements = getAllFocusableElementsOf(eGridCell);\n    const lastCellChildEl =\n      focusableChildrenElements[focusableChildrenElements.length - 1];\n    const firstCellChildEl = focusableChildrenElements[0];\n    // Suppress keyboard event if tabbing forward within the cell and the current focused element is not the last child\n    if (focusableChildrenElements.length === 0) {\n      return false;\n    }\n    const currentIndex = focusableChildrenElements.indexOf(\n      document.activeElement as HTMLElement,\n    );\n    if (isTabForward) {\n      const isLastChildFocused =\n        lastCellChildEl && document.activeElement === lastCellChildEl;\n      if (!isLastChildFocused) {\n        suppressEvent = true;\n        if (currentIndex !== -1 || document.activeElement === eGridCell) {\n          event.preventDefault();\n          focusableChildrenElements[currentIndex + 1].focus();\n        }\n      }\n    }\n    // Suppress keyboard event if tabbing backwards within the cell, and the current focused element is not the first child\n    else {\n      const cellHasFocusedChildren =\n        eGridCell.contains(document.activeElement) &&\n        eGridCell !== document.activeElement;\n      // Manually set focus to the last child element if cell doesn't have focused children\n      if (!cellHasFocusedChildren) {\n        lastCellChildEl.focus();\n        // Cancel keyboard press, so that it doesn't focus on the last child and then pass through the keyboard press to\n        // move to the 2nd last child element\n        event.preventDefault();\n      }\n      const isFirstChildFocused =\n        firstCellChildEl && document.activeElement === firstCellChildEl;\n      if (!isFirstChildFocused) {\n        suppressEvent = true;\n        if (currentIndex !== -1 || document.activeElement === eGridCell) {\n          event.preventDefault();\n          focusableChildrenElements[currentIndex - 1].focus();\n        }\n      }\n    }\n  }\n  return suppressEvent;\n}\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%\">\n                <ag-grid-vue\n      style=\"width: 100%; height: 100%;\"\n      @grid-ready=\"onGridReady\"\n      :columnDefs=\"columnDefs\"\n      :defaultColDef=\"defaultColDef\"\n      :rowData=\"rowData\"></ag-grid-vue>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n    CustomElements,\n  },\n  setup(props) {\n    const gridApi = shallowRef<GridApi | null>(null);\n    const columnDefs = ref<ColDef[]>([\n      {\n        field: \"athlete\",\n      },\n      {\n        field: \"country\",\n        flex: 1,\n        cellRenderer: \"CustomElements\",\n      },\n    ]);\n    const defaultColDef = ref<ColDef>({\n      minWidth: 130,\n      suppressKeyboardEvent,\n    });\n    const rowData = ref<any[]>(null);\n\n    const onGridReady = (params: GridReadyEvent) => {\n      gridApi.value = params.api;\n\n      const updateData = (data) => {\n        rowData.value = data;\n      };\n\n      fetch(\"https://www.ag-grid.com/example-assets/small-olympic-winners.json\")\n        .then((resp) => resp.json())\n        .then((data) => updateData(data));\n    };\n\n    return {\n      gridApi,\n      columnDefs,\n      defaultColDef,\n      rowData,\n      onGridReady,\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","index.html":"<div id=\"myGrid\" style=\"height: 100%; width: 100%\"></div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}