{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":[],"files":{"main.js":"const columnDefs = [\n  {\n    field: \"athlete\",\n    minWidth: 170,\n    suppressKeyboardEvent: (params) => {\n      return suppressEnter(params) || suppressNavigation(params);\n    },\n  },\n  { field: \"age\" },\n  {\n    field: \"country\",\n    minWidth: 130,\n    suppressHeaderKeyboardEvent: (params) => {\n      const key = params.event.key;\n\n      return key === \"ArrowLeft\" || key === \"ArrowRight\" || key === \"Enter\";\n    },\n  },\n  { field: \"year\" },\n  { field: \"date\" },\n  { field: \"sport\" },\n  { field: \"gold\" },\n  { field: \"silver\" },\n  { field: \"bronze\" },\n  { field: \"total\" },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  rowData: null,\n  columnDefs,\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    suppressKeyboardEvent: suppressNavigation,\n    suppressHeaderKeyboardEvent: suppressUpDownNavigation,\n  },\n  rowSelection: {\n    mode: \"multiRow\",\n    checkboxes: false,\n    headerCheckbox: false,\n  },\n};\n\nfunction suppressEnter(params) {\n  const KEY_ENTER = \"Enter\";\n\n  const event = params.event;\n  const key = event.key;\n  const suppress = key === KEY_ENTER;\n\n  return suppress;\n}\n\nfunction suppressNavigation(params) {\n  const KEY_A = \"A\";\n  const KEY_C = \"C\";\n  const KEY_V = \"V\";\n  const KEY_D = \"D\";\n\n  const KEY_PAGE_UP = \"PageUp\";\n  const KEY_PAGE_DOWN = \"PageDown\";\n  const KEY_TAB = \"Tab\";\n  const KEY_LEFT = \"ArrowLeft\";\n  const KEY_UP = \"ArrowUp\";\n  const KEY_RIGHT = \"ArrowRight\";\n  const KEY_DOWN = \"ArrowDown\";\n  const KEY_F2 = \"F2\";\n  const KEY_BACKSPACE = \"Backspace\";\n  const KEY_ESCAPE = \"Escape\";\n  const KEY_SPACE = \" \";\n  const KEY_DELETE = \"Delete\";\n  const KEY_PAGE_HOME = \"Home\";\n  const KEY_PAGE_END = \"End\";\n\n  const event = params.event;\n  const key = event.key;\n\n  let keysToSuppress = [\n    KEY_PAGE_UP,\n    KEY_PAGE_DOWN,\n    KEY_TAB,\n    KEY_F2,\n    KEY_ESCAPE,\n  ];\n\n  const editingKeys = [\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_UP,\n    KEY_DOWN,\n    KEY_BACKSPACE,\n    KEY_DELETE,\n    KEY_SPACE,\n    KEY_PAGE_HOME,\n    KEY_PAGE_END,\n  ];\n\n  if (event.ctrlKey || event.metaKey) {\n    keysToSuppress.push(KEY_A);\n    keysToSuppress.push(KEY_V);\n    keysToSuppress.push(KEY_C);\n    keysToSuppress.push(KEY_D);\n  }\n\n  if (!params.editing) {\n    keysToSuppress = keysToSuppress.concat(editingKeys);\n  }\n\n  if (\n    params.column.getId() === \"country\" &&\n    (key === KEY_UP || key === KEY_DOWN)\n  ) {\n    return false;\n  }\n\n  const suppress = keysToSuppress.some(function (suppressedKey) {\n    return suppressedKey === key || key.toUpperCase() === suppressedKey;\n  });\n\n  return suppress;\n}\n\nfunction suppressUpDownNavigation(params) {\n  const key = params.event.key;\n\n  return key === \"ArrowUp\" || key === \"ArrowDown\";\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div id=\"myGrid\" style=\"height: 100%\"></div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}