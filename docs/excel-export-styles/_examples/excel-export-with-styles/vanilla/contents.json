{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".page-wrapper {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.grid-wrapper {\n    flex: 1 1 0px;\n}\n\n.greenBackground {\n    background-color: #33cc3344;\n}\n\n.redFont {\n    color: #bb0000;\n    font-style: italic;\n    text-decoration: underline;\n}\n\n.darkGreyBackground {\n    background-color: #99999944;\n}\n\n.notInExcel {\n    color: #1b6d85;\n}\n","main.js":"const columnDefs = [\n  { field: \"athlete\", minWidth: 200 },\n  {\n    field: \"age\",\n    cellClassRules: {\n      greenBackground: (params) => {\n        return params.value < 23;\n      },\n      redFont: (params) => {\n        return params.value < 20;\n      },\n    },\n  },\n  {\n    field: \"country\",\n    minWidth: 200,\n    cellClassRules: {\n      redFont: (params) => {\n        return params.value === \"United States\";\n      },\n    },\n  },\n  {\n    headerName: \"Group\",\n    valueGetter: \"data.country.charAt(0)\",\n    cellClass: [\"redFont\", \"greenBackground\"],\n  },\n  {\n    field: \"year\",\n    cellClassRules: {\n      notInExcel: (params) => {\n        return true;\n      },\n    },\n  },\n  { field: \"sport\", minWidth: 150 },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    cellClassRules: {\n      darkGreyBackground: (params) => {\n        return (params.node.rowIndex || 0) % 2 == 0;\n      },\n    },\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  columnDefs: columnDefs,\n\n  excelStyles: [\n    {\n      id: \"cell\",\n      alignment: {\n        vertical: \"Center\",\n      },\n    },\n    {\n      id: \"greenBackground\",\n      interior: {\n        color: \"#b5e6b5\",\n        pattern: \"Solid\",\n      },\n    },\n    {\n      id: \"redFont\",\n      font: {\n        fontName: \"Calibri Light\",\n        underline: \"Single\",\n        italic: true,\n        color: \"#BB0000\",\n      },\n    },\n    {\n      id: \"darkGreyBackground\",\n      interior: {\n        color: \"#888888\",\n        pattern: \"Solid\",\n      },\n      font: {\n        fontName: \"Calibri Light\",\n        color: \"#ffffff\",\n      },\n    },\n  ],\n};\n\nfunction onBtnExportDataAsExcel() {\n  gridApi.exportDataAsExcel();\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) => gridApi.setGridOption(\"rowData\", data));\n});\n","index.html":"<div class=\"page-wrapper\">\n    <div>\n        <button onclick=\"onBtnExportDataAsExcel()\" style=\"margin-bottom: 5px; font-weight: bold\">\n            Export to Excel\n        </button>\n    </div>\n\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\" style=\"height: 100%\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}