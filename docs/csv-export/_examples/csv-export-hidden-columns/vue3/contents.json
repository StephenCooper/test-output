{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.ts","mainFileName":"main.ts","styleFiles":[],"files":{"data.ts":"export function getData(): any[] {\n    return [\n        {\n            athlete: 'Eamon Sullivan',\n            country: 'Australia',\n            sport: 'Swimming',\n            gold: 0,\n            ' silver': 2,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Dara Torres',\n            country: 'United States',\n            sport: 'Swimming',\n            gold: 0,\n            ' silver': 3,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Amanda Beard',\n            country: 'United States',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 2,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Antje Buschschulte',\n            country: 'Germany',\n            sport: 'Swimming',\n            gold: 0,\n            ' silver': 0,\n            bronze: 3,\n            total: 3,\n        },\n        {\n            athlete: 'Kirsty Coventry',\n            country: 'Zimbabwe',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 1,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Ian Crocker',\n            country: 'United States',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 1,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Grant Hackett',\n            country: 'Australia',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 2,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Brendan Hansen',\n            country: 'United States',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 1,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Jodie Henry',\n            country: 'Australia',\n            sport: 'Swimming',\n            gold: 3,\n            ' silver': 0,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Otylia Jedrzejczak',\n            country: 'Poland',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 2,\n            bronze: 0,\n            total: 3,\n        },\n        {\n            athlete: 'Leisel Jones',\n            country: 'Australia',\n            sport: 'Swimming',\n            gold: 1,\n            ' silver': 1,\n            bronze: 1,\n            total: 3,\n        },\n        {\n            athlete: 'Kosuke Kitajima',\n            country: 'Japan',\n            sport: 'Swimming',\n            gold: 2,\n            ' silver': 0,\n            bronze: 1,\n            total: 3,\n        },\n    ];\n}\n","main.ts":"import {\n  createApp,\n  defineComponent,\n  onBeforeMount,\n  ref,\n  shallowRef,\n} from \"vue\";\nimport { AgGridVue } from \"ag-grid-vue3\";\nimport {\n  ClientSideRowModelModule,\n  ColDef,\n  ColGroupDef,\n  CsvExportModule,\n  GridApi,\n  GridOptions,\n  GridReadyEvent,\n  ModuleRegistry,\n  NumberEditorModule,\n  TextEditorModule,\n  ValidationModule,\n  createGrid,\n} from \"ag-grid-community\";\nimport { ColumnMenuModule, ContextMenuModule } from \"ag-grid-enterprise\";\nimport { getData } from \"./data\";\nModuleRegistry.registerModules([\n  ClientSideRowModelModule,\n  CsvExportModule,\n  ColumnMenuModule,\n  ContextMenuModule,\n  NumberEditorModule,\n  TextEditorModule,\n  ValidationModule /* Development Only */,\n]);\n\nfunction getBoolean(id: string) {\n  const field: any = document.querySelector(\"#\" + id);\n  return !!field.checked;\n}\n\nfunction getParams() {\n  return {\n    allColumns: getBoolean(\"allColumns\"),\n  };\n}\n\nconst VueExample = defineComponent({\n  template: `\n        <div style=\"height: 100%\">\n                <div style=\"display: flex; flex-direction: column; height: 100%\">\n      <div style=\"display: flex\">\n        <div class=\"row\">\n          <label for=\"allColumns\"><input id=\"allColumns\" type=\"checkbox\">All Columns</label>\n        </div>\n      </div>\n      <div style=\"margin: 10px 0\">\n        <button v-on:click=\"onBtnUpdate()\">Show CSV export content text</button>\n        <button v-on:click=\"onBtnExport()\">Download CSV export file</button>\n      </div>\n      <div style=\"flex: 1 1 0; position: relative; display: flex; flex-direction: row; gap: 20px\">\n        <div id=\"gridContainer\" style=\"flex: 1\">\n          <ag-grid-vue\n            style=\"width: 100%; height: 100%;\"\n            @grid-ready=\"onGridReady\"\n            :defaultColDef=\"defaultColDef\"\n            :suppressExcelExport=\"true\"\n            :popupParent=\"popupParent\"\n            :columnDefs=\"columnDefs\"\n            :rowData=\"rowData\"></ag-grid-vue>\n          </div>\n          <textarea id=\"csvResult\" style=\"flex: 1\" placeholder=\"Click the Show CSV export content button to view exported CSV here\"></textarea>\n        </div>\n      </div>\n        </div>\n    `,\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n  },\n  setup(props) {\n    const gridApi = shallowRef<GridApi | null>(null);\n    const defaultColDef = ref<ColDef>({\n      editable: true,\n      minWidth: 100,\n      flex: 1,\n    });\n    const popupParent = ref<HTMLElement | null>(document.body);\n    const columnDefs = ref<ColDef[]>([\n      { field: \"athlete\" },\n      { field: \"country\" },\n      { field: \"sport\" },\n      { field: \"gold\", hide: true },\n      { field: \"silver\", hide: true },\n      { field: \"bronze\", hide: true },\n      { field: \"total\" },\n    ]);\n    const rowData = ref<any[] | null>(getData());\n\n    function onBtnExport() {\n      gridApi.value!.exportDataAsCsv(getParams());\n    }\n    function onBtnUpdate() {\n      (document.querySelector(\"#csvResult\") as any).value =\n        gridApi.value!.getDataAsCsv(getParams());\n    }\n    const onGridReady = (params: GridReadyEvent) => {\n      gridApi.value = params.api;\n    };\n\n    return {\n      gridApi,\n      defaultColDef,\n      popupParent,\n      columnDefs,\n      rowData,\n      onGridReady,\n      onBtnExport,\n      onBtnUpdate,\n    };\n  },\n});\n\ncreateApp(VueExample).mount(\"#app\");\n","index.html":"<style>\n    button {\n        display: inline-block;\n        font-weight: bold;\n    }\n</style>\n\n<div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div style=\"display: flex\">\n        <div class=\"row\">\n            <label for=\"allColumns\"><input id=\"allColumns\" type=\"checkbox\" />All Columns</label>\n        </div>\n    </div>\n    <div style=\"margin: 10px 0\">\n        <button onclick=\"onBtnUpdate()\">Show CSV export content text</button>\n        <button onclick=\"onBtnExport()\">Download CSV export file</button>\n    </div>\n    <div style=\"flex: 1 1 0; position: relative; display: flex; flex-direction: row; gap: 20px\">\n        <div id=\"gridContainer\" style=\"flex: 1\">\n            <div id=\"myGrid\" style=\"width: 100%; height: 100%; display: block\"></div>\n        </div>\n        <textarea\n            id=\"csvResult\"\n            style=\"flex: 1\"\n            placeholder=\"Click the Show CSV export content button to view exported CSV here\"\n        ></textarea>\n    </div>\n</div>\n"},"boilerPlateFiles":{"css.js":"if (typeof window !== 'undefined') {\n    var waitSeconds = 100;\n\n    var head = document.getElementsByTagName('head')[0];\n\n    var isWebkit = !!window.navigator.userAgent.match(/AppleWebKit\\/([^ ;]*)/);\n    var webkitLoadCheck = function (link, callback) {\n        setTimeout(function () {\n            for (var i = 0; i < document.styleSheets.length; i++) {\n                var sheet = document.styleSheets[i];\n                if (sheet.href == link.href) return callback();\n            }\n            webkitLoadCheck(link, callback);\n        }, 10);\n    };\n\n    var cssIsReloadable = function cssIsReloadable(links) {\n        // Css loaded on the page initially should be skipped by the first\n        // systemjs load, and marked for reload\n        var reloadable = true;\n        forEach(links, function (link) {\n            if (!link.hasAttribute('data-systemjs-css')) {\n                reloadable = false;\n                link.setAttribute('data-systemjs-css', '');\n            }\n        });\n        return reloadable;\n    };\n\n    var findExistingCSS = function findExistingCSS(url) {\n        // Search for existing link to reload\n        var links = head.getElementsByTagName('link');\n        return filter(links, function (link) {\n            return link.href === url;\n        });\n    };\n\n    var noop = function () {};\n\n    var loadCSS = function (url, existingLinks) {\n        const stylesUrl = url.includes('styles.css') || url.includes('style.css');\n        return new Promise((outerResolve, outerReject) => {\n            setTimeout(\n                () => {\n                    new Promise(function (resolve, reject) {\n                        var timeout = setTimeout(function () {\n                            reject('Unable to load CSS');\n                        }, waitSeconds * 1000);\n                        var _callback = function (error) {\n                            clearTimeout(timeout);\n                            link.onload = link.onerror = noop;\n                            setTimeout(function () {\n                                if (error) {\n                                    reject(error);\n                                    outerReject(error);\n                                } else {\n                                    resolve('');\n                                    outerResolve('');\n                                }\n                            }, 7);\n                        };\n                        var link = document.createElement('link');\n                        link.type = 'text/css';\n                        link.rel = 'stylesheet';\n                        link.href = url;\n                        link.setAttribute('data-systemjs-css', '');\n                        if (!isWebkit) {\n                            link.onload = function () {\n                                _callback();\n                            };\n                        } else {\n                            webkitLoadCheck(link, _callback);\n                        }\n                        link.onerror = function (event) {\n                            _callback(event.error || new Error('Error loading CSS file.'));\n                        };\n                        if (existingLinks.length) head.insertBefore(link, existingLinks[0]);\n                        else head.appendChild(link);\n                    })\n                        // Remove the old link regardless of loading outcome\n                        .then(\n                            function (result) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                return result;\n                            },\n                            function (err) {\n                                forEach(existingLinks, function (link) {\n                                    link.parentElement.removeChild(link);\n                                });\n                                throw err;\n                            }\n                        );\n                },\n                stylesUrl ? 5 : 0\n            );\n        });\n    };\n\n    exports.fetch = function (load) {\n        // dont reload styles loaded in the head\n        var links = findExistingCSS(load.address);\n        if (!cssIsReloadable(links)) return '';\n        return loadCSS(load.address, links);\n    };\n} else {\n    var builderPromise;\n    function getBuilder(loader) {\n        if (builderPromise) return builderPromise;\n\n        return (builderPromise = System['import']('./css-plugin-base.js', module.id).then(function (CSSPluginBase) {\n            return new CSSPluginBase(function compile(source, address) {\n                return {\n                    css: source,\n                    map: null,\n                    moduleSource: null,\n                    moduleFormat: null,\n                };\n            });\n        }));\n    }\n\n    exports.cssPlugin = true;\n    exports.fetch = function (load, fetch) {\n        if (!this.builder) return '';\n        return fetch(load);\n    };\n    exports.translate = function (load, opts) {\n        if (!this.builder) return '';\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.translate.call(loader, load, opts);\n        });\n    };\n    exports.instantiate = function (load, opts) {\n        if (!this.builder) return;\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.instantiate.call(loader, load, opts);\n        });\n    };\n    exports.bundle = function (loads, compileOpts, outputOpts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.bundle.call(loader, loads, compileOpts, outputOpts);\n        });\n    };\n    exports.listAssets = function (loads, opts) {\n        var loader = this;\n        return getBuilder(loader).then(function (builder) {\n            return builder.listAssets.call(loader, loads, opts);\n        });\n    };\n}\n\n// Because IE8?\nfunction filter(arrayLike, func) {\n    var arr = [];\n    forEach(arrayLike, function (item) {\n        if (func(item)) arr.push(item);\n    });\n    return arr;\n}\n\n// Because IE8?\nfunction forEach(arrayLike, func) {\n    for (var i = 0; i < arrayLike.length; i++) {\n        func(arrayLike[i]);\n    }\n}\n","systemjs.config.js":"(function (global) {\n    System.config({\n        // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n        transpiler: 'ts',\n        typescriptOptions: {\n            target: 'es2020',\n        },\n        meta: {\n            typescript: {\n                exports: 'ts',\n            },\n            '*.css': { loader: 'css' },\n        },\n        defaultExtension: 'js',\n        paths: {\n            // paths serve as alias\n            'npm:': 'https://cdn.jsdelivr.net/npm/',\n            ...systemJsPaths,\n        },\n        map: {\n            css: (boilerplatePath.length === 0 ? `./` : `${boilerplatePath}/`) + 'css.js',\n\n            ts: 'npm:plugin-typescript@8.0.0/lib/plugin.js',\n            tslib: 'npm:tslib@2.3.1/tslib.js',\n            typescript: 'npm:typescript@5.4.5/lib/typescript.min.js',\n\n            vue: 'npm:vue@3.5.0/dist/vue.esm-browser.js',\n            '@vue/reactivity': 'npm:@vue/reactivity@3.0.0/dist/reactivity.esm-browser.prod.js',\n\n            // vue class component\n            'vue-class-component': 'npm:vue-class-component@^8.0.0-beta.3/dist/vue-class-component.cjs.js',\n\n            app: appLocation,\n            // systemJsMap comes from index.html\n            ...systemJsMap,\n        },\n        packages: {\n            'css.js': {\n                defaultExtension: 'js',\n            },\n            vue: {\n                defaultExtension: 'js',\n            },\n            app: {\n                defaultExtension: 'ts',\n            },\n            'ag-grid-community': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-enterprise': {\n                main: './dist/package/main.cjs.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-grid-vue3': {\n                main: './dist/main.umd.js',\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-types': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-community': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            'ag-charts-enterprise': {\n                defaultExtension: 'js',\n                format: 'cjs',\n            },\n            '@ag-grid-community/locale': {\n                format: 'cjs',\n            },\n        },\n    });\n})(this);\n\nwindow.addEventListener('error', (e) => {\n    console.error('ERROR', e.message, e.filename);\n});\n"},"packageJson":{"name":"ag-grid-example","dependencies":{"vue":"^3.5.0","ag-grid-vue3":"33.1.0","ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}