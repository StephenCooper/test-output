{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","main.js":"let gridApi;\n\nconst gridOptions = {\n  columnDefs: [\n    { field: \"athlete\", minWidth: 180 },\n    { field: \"age\" },\n    { field: \"country\", minWidth: 150 },\n    { headerName: \"Group\", valueGetter: \"data.country.charAt(0)\" },\n    { field: \"year\" },\n    { field: \"date\", minWidth: 150 },\n    { field: \"sport\", minWidth: 180 },\n    { field: \"gold\" },\n    { field: \"silver\" },\n    { field: \"bronze\" },\n    { field: \"total\" },\n  ],\n  defaultColDef: {\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  },\n  pagination: true,\n  paginationAutoPageSize: true,\n};\n\nfunction getDisplayedRowAtIndex() {\n  const rowNode = gridApi.getDisplayedRowAtIndex(0);\n  console.log(\n    \"getDisplayedRowAtIndex(0) => \" +\n      rowNode.data.athlete +\n      \" \" +\n      rowNode.data.year,\n  );\n}\n\nfunction getDisplayedRowCount() {\n  const count = gridApi.getDisplayedRowCount();\n  console.log(\"getDisplayedRowCount() => \" + count);\n}\n\nfunction printAllDisplayedRows() {\n  const count = gridApi.getDisplayedRowCount();\n  console.log(\"## printAllDisplayedRows\");\n  for (let i = 0; i < count; i++) {\n    const rowNode = gridApi.getDisplayedRowAtIndex(i);\n    console.log(\"row \" + i + \" is \" + rowNode.data.athlete);\n  }\n}\n\nfunction printPageDisplayedRows() {\n  const rowCount = gridApi.getDisplayedRowCount();\n  const lastGridIndex = rowCount - 1;\n  const currentPage = gridApi.paginationGetCurrentPage();\n  const pageSize = gridApi.paginationGetPageSize();\n  const startPageIndex = currentPage * pageSize;\n  let endPageIndex = (currentPage + 1) * pageSize - 1;\n\n  if (endPageIndex > lastGridIndex) {\n    endPageIndex = lastGridIndex;\n  }\n\n  console.log(\"## printPageDisplayedRows\");\n  for (let i = startPageIndex; i <= endPageIndex; i++) {\n    const rowNode = gridApi.getDisplayedRowAtIndex(i);\n    console.log(\"row \" + i + \" is \" + rowNode.data.athlete);\n  }\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n\n  fetch(\"https://www.ag-grid.com/example-assets/olympic-winners.json\")\n    .then((response) => response.json())\n    .then(function (data) {\n      gridApi.setGridOption(\"rowData\", data.slice(0, 100));\n    });\n});\n","index.html":"<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px\">\n        <button onclick=\"getDisplayedRowAtIndex()\">Get Displayed Row 0</button>\n        <button onclick=\"getDisplayedRowCount()\">Get Displayed Row Count</button>\n        <button onclick=\"printAllDisplayedRows()\">Print All Displayed Rows</button>\n        <button onclick=\"printPageDisplayedRows()\">Print Page Displayed Rows</button>\n    </div>\n\n    <div id=\"myGrid\"></div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}