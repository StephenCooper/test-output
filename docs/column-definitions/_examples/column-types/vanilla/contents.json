{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".shaded-class {\n    background-color: #99999944;\n}\n","main.js":"function currencyFormatter(params) {\n  const value = Math.floor(params.value);\n  if (isNaN(value)) {\n    return \"\";\n  }\n  return \"Â£\" + value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n}\n\nconst gridOptions = {\n  // define column types\n  columnTypes: {\n    currency: {\n      width: 150,\n      valueFormatter: currencyFormatter,\n    },\n    shaded: {\n      cellClass: \"shaded-class\",\n    },\n  },\n  // define grid columns\n  columnDefs: [\n    { field: \"productName\" },\n    // uses properties from currency type\n    { field: \"boughtPrice\", type: \"currency\" },\n    // uses properties from currency AND shaded types\n    { field: \"soldPrice\", type: [\"currency\", \"shaded\"] },\n  ],\n\n  rowData: [\n    { productName: \"Lamp\", boughtPrice: 100, soldPrice: 200 },\n    { productName: \"Chair\", boughtPrice: 150, soldPrice: 300 },\n    { productName: \"Desk\", boughtPrice: 200, soldPrice: 400 },\n  ],\n};\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  const gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div style=\"height: 100%; box-sizing: border-box\">\n    <div id=\"myGrid\" style=\"height: 100%\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}