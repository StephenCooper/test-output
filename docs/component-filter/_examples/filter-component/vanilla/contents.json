{"isEnterprise":false,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["data.js","partialMatchFilter.js","main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".example-wrapper {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n\n#myGrid {\n    flex: 1 1 0px;\n    width: 100%;\n}\n","data.js":"function getData() {\n    return [\n        { row: 'Row 1', name: 'Michael Phelps' },\n        { row: 'Row 2', name: 'Natalie Coughlin' },\n        { row: 'Row 3', name: 'Aleksey Nemov' },\n        { row: 'Row 4', name: 'Alicia Coutts' },\n        { row: 'Row 5', name: 'Missy Franklin' },\n        { row: 'Row 6', name: 'Ryan Lochte' },\n        { row: 'Row 7', name: 'Allison Schmitt' },\n        { row: 'Row 8', name: 'Natalie Coughlin' },\n        { row: 'Row 9', name: 'Ian Thorpe' },\n        { row: 'Row 10', name: 'Bob Mill' },\n        { row: 'Row 11', name: 'Willy Walsh' },\n        { row: 'Row 12', name: 'Sarah McCoy' },\n        { row: 'Row 13', name: 'Jane Jack' },\n        { row: 'Row 14', name: 'Tina Wills' },\n    ];\n}\n","partialMatchFilter.js":"\nclass PartialMatchFilter  {\n    filterParams;\n    gui;\n    filterText = '';\n    eFilterText;\n\n    init(params) {\n        this.filterParams = params;\n        this.gui = document.createElement('div');\n        this.gui.style.borderRadius = '5px';\n        this.gui.style.width = '200px';\n        this.gui.style.height = '50px';\n        this.gui.style.padding = '10px';\n        this.gui.innerHTML = `Partial Match Filter: <input id=\"filterText\" type=\"text\" style=\"height: 20px\" />`;\n        this.eFilterText = this.gui.querySelector('#filterText');\n        const listener = (event) => {\n            this.filterText = event.target.value;\n            params.filterChangedCallback();\n        };\n        this.eFilterText.addEventListener('changed', listener);\n        this.eFilterText.addEventListener('paste', listener);\n        this.eFilterText.addEventListener('input', listener);\n    }\n\n    isFilterActive() {\n        return this.filterText != null && this.filterText !== '';\n    }\n\n    doesFilterPass(params) {\n        const { node } = params;\n        const value = this.filterParams.getValue(node).toString().toLowerCase();\n\n        return this.filterText\n            .toLowerCase()\n            .split(' ')\n            .every((filterWord) => value.indexOf(filterWord) >= 0);\n    }\n\n    getModel() {\n        if (!this.isFilterActive()) {\n            return null;\n        }\n\n        return { value: this.filterText };\n    }\n\n    setModel(model) {\n        this.eFilterText.value = model == null ? '' : model.value;\n    }\n\n    getGui() {\n        return this.gui;\n    }\n\n    afterGuiAttached() {\n        this.eFilterText.focus();\n    }\n\n    componentMethod(message) {\n        alert(`Alert from PartialMatchFilterComponent: ${message}`);\n    }\n}\n","main.js":"const columnDefs = [\n  { field: \"row\" },\n  {\n    field: \"name\",\n    filter: PartialMatchFilter,\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  defaultColDef: {\n    editable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n  },\n  columnDefs: columnDefs,\n  rowData: getData(),\n};\n\nfunction onClicked() {\n  gridApi.getColumnFilterInstance(\"name\").then((instance) => {\n    instance.componentMethod(\"Hello World!\");\n  });\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n});\n","index.html":"<div class=\"example-wrapper\">\n    <button style=\"margin-bottom: 5px\" onclick=\"onClicked()\" class=\"btn btn-primary\">\n        Invoke Filter Instance Method\n    </button>\n    <div id=\"myGrid\"></div>\n</div>\n"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}