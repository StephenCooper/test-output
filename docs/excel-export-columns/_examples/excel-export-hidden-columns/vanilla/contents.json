{"isEnterprise":true,"isLocale":false,"isIntegratedCharts":false,"entryFileName":"main.js","mainFileName":"main.js","scriptFiles":["main.js"],"styleFiles":["styles.css"],"files":{"styles.css":".details > label {\n    margin-bottom: 10px;\n}\n.details > label:first-of-type {\n    margin-top: 10px;\n}\n.details > label:last-of-type {\n    margin-bottom: 0;\n}\n.option {\n    display: block;\n    margin: 5px 10px 5px 0;\n}\n.grid-wrapper {\n    display: flex;\n    flex: 1 1 0px;\n}\n.grid-wrapper > div {\n    width: 100%;\n    height: 100%;\n}\n.container {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n}\n.columns {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 16px;\n}\n","main.js":"const columnDefs = [\n  {\n    headerName: \"Top Level Column Group\",\n    children: [\n      {\n        headerName: \"Group A\",\n        children: [\n          { field: \"athlete\", minWidth: 200 },\n          { field: \"country\", minWidth: 200 },\n          { headerName: \"Group\", valueGetter: \"data.country.charAt(0)\" },\n        ],\n      },\n      {\n        headerName: \"Group B\",\n        children: [\n          { field: \"sport\", minWidth: 150 },\n          { field: \"gold\", hide: true },\n          { field: \"silver\", hide: true },\n          { field: \"bronze\", hide: true },\n          { field: \"total\", hide: true },\n        ],\n      },\n    ],\n  },\n];\n\nlet gridApi;\n\nconst gridOptions = {\n  columnDefs: columnDefs,\n  defaultColDef: {\n    filter: true,\n    minWidth: 100,\n    flex: 1,\n  },\n\n  popupParent: document.body,\n};\n\nfunction getBoolean(id) {\n  return !!document.querySelector(\"#\" + id).checked;\n}\n\nfunction getParams() {\n  return {\n    allColumns: getBoolean(\"allColumns\"),\n  };\n}\n\nfunction onBtExport() {\n  gridApi.exportDataAsExcel(getParams());\n}\n\n// setup the grid after the page has finished loading\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const gridDiv = document.querySelector(\"#myGrid\");\n  gridApi = agGrid.createGrid(gridDiv, gridOptions);\n  fetch(\"https://www.ag-grid.com/example-assets/small-olympic-winners.json\")\n    .then((response) => response.json())\n    .then((data) =>\n      gridApi.setGridOption(\n        \"rowData\",\n        data.filter((rec) => rec.country != null),\n      ),\n    );\n});\n","index.html":"<div class=\"container\">\n    <div class=\"columns\">\n        <label class=\"option\" for=\"allColumns\"><input id=\"allColumns\" type=\"checkbox\" />All Columns</label>\n        <div>\n            <button onclick=\"onBtExport()\" style=\"font-weight: bold\">Export to Excel</button>\n        </div>\n    </div>\n    <div class=\"grid-wrapper\">\n        <div id=\"myGrid\"></div>\n    </div>\n</div>\n","interfaces.ts":"\nexport interface IOlympicData {\n    athlete: string,\n    age: number,\n    country: string,\n    year: number,\n    date: string,\n    sport: string,\n    gold: number,\n    silver: number,\n    bronze: number,\n    total: number\n}"},"boilerPlateFiles":{},"packageJson":{"name":"ag-grid-example","dependencies":{"ag-grid-community":"33.1.0","ag-grid-enterprise":"33.1.0"}}}